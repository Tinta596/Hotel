var In = Object.defineProperty;
var zn = (e, t, l) => t in e ? In(e, t, { enumerable: !0, configurable: !0, writable: !0, value: l }) : e[t] = l;
var Te = (e, t, l) => (zn(e, typeof t != "symbol" ? t + "" : t, l), l);
import { unref as w, computed as u, ref as x, shallowRef as Na, watch as se, getCurrentScope as Zl, onScopeDispose as Ql, shallowReadonly as Bt, watchEffect as Ht, readonly as Fe, effectScope as eo, isRef as Ia, toRef as be, customRef as Hn, getCurrentInstance as Ot, onMounted as je, nextTick as Ce, reactive as mt, defineComponent as H, h as de, Teleport as za, toValue as ft, onActivated as xn, onBeforeUnmount as to, openBlock as g, createElementBlock as O, Fragment as ve, createElementVNode as Y, renderSlot as V, createVNode as ye, withCtx as D, mergeProps as te, normalizeClass as z, normalizeStyle as Re, createTextVNode as ie, toDisplayString as K, createCommentVNode as J, createApp as Rn, provide as We, createBlock as M, resolveDynamicComponent as le, inject as Oe, Transition as Mn, normalizeProps as Ae, guardReactiveProps as Pe, useSlots as Ee, useAttrs as ao, renderList as he, TransitionGroup as Dn, withDirectives as vt, vShow as ra, isReactive as jn, onUnmounted as qn, withModifiers as Ha, vModelCheckbox as Gn, vModelRadio as Wn, vModelSelect as Un, createSlots as xa } from "vue";
const Xn = (e) => typeof e == "boolean" || e === "" || e === "true" || e === "false", Ra = (e) => typeof e == "boolean" ? e : e === "" || e === "true";
class tt {
  constructor(t, l = {}) {
    Te(this, "cancelable", !0);
    Te(this, "componentId", null);
    Te(this, "_defaultPrevented", !1);
    Te(this, "eventType", "");
    Te(this, "nativeEvent", null);
    Te(this, "_preventDefault");
    Te(this, "relatedTarget", null);
    Te(this, "target", null);
    if (!t)
      throw new TypeError(
        `Failed to construct '${this.constructor.name}'. 1 argument required, ${arguments.length} given.`
      );
    Object.assign(this, tt.Defaults, l, { eventType: t }), this._preventDefault = function() {
      this.cancelable && (this.defaultPrevented = !0);
    };
  }
  // Readable by everyone,
  // But only overwritten by inherrited constructors
  get defaultPrevented() {
    return this._defaultPrevented;
  }
  set defaultPrevented(t) {
    this._defaultPrevented = t;
  }
  // I think this is right
  // We want to be able to have it callable to everyone,
  // But only overwritten by inherrited constructors
  get preventDefault() {
    return this._preventDefault;
  }
  // This may not be correct, because it doesn't get correct type inferences in children
  // Ex overwrite this.preventDefault = () => true is valid. Could be a TS issue
  set preventDefault(t) {
    this._preventDefault = t;
  }
  static get Defaults() {
    return {
      cancelable: !0,
      componentId: null,
      eventType: "",
      nativeEvent: null,
      relatedTarget: null,
      target: null
    };
  }
}
class Et extends tt {
  constructor(l, a = {}) {
    super(l, a);
    Te(this, "trigger", null);
    Object.assign(this, tt.Defaults, a, { eventType: l });
  }
  static get Defaults() {
    return {
      ...super.Defaults,
      trigger: null
    };
  }
}
class lo extends tt {
  constructor(l, a) {
    super(l, a);
    Te(this, "from");
    Te(this, "to");
    Te(this, "direction");
    Object.assign(this, tt.Defaults, a, { eventType: l });
    const { from: o, direction: n, to: s } = a;
    this.from = o, this.to = s, this.direction = n;
  }
  static get Defaults() {
    return {
      ...super.Defaults
    };
  }
}
const ha = (e) => e !== null && typeof e == "object", Kn = (e) => /^[0-9]*\.?[0-9]+$/.test(String(e)), Jn = (e) => Object.prototype.toString.call(e) === "[object Object]", oo = /_/g, no = /([a-z])([A-Z])/g, Yn = /(\s|^)(\w)/g, Zn = /(\s|^)(\w)/, Jt = /\s+/, Qn = /^#/, es = /^#[A-Za-z]+[\w\-:.]*$/, ts = /-u-.+/, as = /[-/\\^$*+?.()|[\]{}]/g, ls = /[\s\uFEFF\xA0]+/g, Qt = (e, t = 2) => typeof e == "string" ? e : e == null ? "" : Array.isArray(e) || Jn(e) && e.toString === Object.prototype.toString ? JSON.stringify(e, null, t) : String(e), dl = (e) => e.replace(oo, " ").replace(no, (t, l, a) => `${l} ${a}`).replace(Zn, (t, l, a) => l + a.toUpperCase()), cl = (e) => e.replace(oo, " ").replace(no, (t, l, a) => `${l} ${a}`).replace(Yn, (t, l, a) => l + a.toUpperCase()), os = (e) => {
  const t = e.trim();
  return t.charAt(0).toUpperCase() + t.slice(1);
}, ns = (e) => e.replace(as, "\\$&"), ss = (e) => ns(e).replace(ls, "\\s"), ma = (e) => `\\${e}`, is = (e) => {
  const t = Qt(e), { length: l } = t, a = t.charCodeAt(0);
  return t.split("").reduce((o, n, s) => {
    const i = t.charCodeAt(s);
    return i === 0 ? `${o}ï¿½` : (
      // ... is U+007F OR
      i === 127 || // ... is in the range [\1-\1F] (U+0001 to U+001F) OR ...
      i >= 1 && i <= 31 || // ... is the first character and is in the range [0-9] (U+0030 to U+0039) OR ...
      s === 0 && i >= 48 && i <= 57 || // ... is the second character and is in the range [0-9] (U+0030 to U+0039)
      // and the first character is a `-` (U+002D) ...
      s === 1 && i >= 48 && i <= 57 && a === 45 ? o + ma(`${i.toString(16)} `) : (
        // ... is the first character AND ...
        s === 0 && // ... is a `-` (U+002D) AND ...
        i === 45 && // ... there is no second character ...
        l === 1 ? o + ma(n) : (
          // ... is greater than or equal to U+0080 OR ...
          i >= 128 || // ... is `-` (U+002D) OR ...
          i === 45 || // ... is `_` (U+005F) OR ...
          i === 95 || // ... is in the range [0-9] (U+0030 to U+0039) OR ...
          i >= 48 && i <= 57 || // ... is in the range [A-Z] (U+0041 to U+005A) OR ...
          i >= 65 && i <= 90 || // ... is in the range [a-z] (U+0061 to U+007A) ...
          i >= 97 && i <= 122 ? o + n : o + ma(n)
        )
      )
    );
  }, "");
}, so = typeof window < "u", io = typeof document < "u", rs = typeof Element < "u", us = typeof navigator < "u", ds = so && io && us, fl = so ? window : {}, Ma = io ? document : {};
(() => {
  let e = !1;
  if (ds)
    try {
      const t = {
        // This function will be called when the browser
        // attempts to access the passive property
        get passive() {
          return e = !0, e;
        }
      };
      fl.addEventListener("test", t, t), fl.removeEventListener("test", t, t);
    } catch {
      e = !1;
    }
  return e;
})();
const Da = typeof window < "u", cs = typeof document < "u", fs = typeof navigator < "u", ja = Da && cs && fs, vl = Da ? window : {}, vs = (() => {
  let e = !1;
  if (ja)
    try {
      const t = {
        // This function will be called when the browser
        // attempts to access the passive property
        get passive() {
          e = !0;
        }
      };
      vl.addEventListener("test", t, t), vl.removeEventListener("test", t, t);
    } catch {
      e = !1;
    }
  return e;
})(), ze = rs ? Element.prototype : void 0, ps = (ze == null ? void 0 : ze.matches) || (ze == null ? void 0 : ze.msMatchesSelector) || (ze == null ? void 0 : ze.webkitMatchesSelector), Ze = (e) => !!(e && e.nodeType === Node.ELEMENT_NODE), ms = (e) => Ze(e) ? e.getBoundingClientRect() : null, gs = (e = []) => {
  const { activeElement: t } = document;
  return t && !e.some((l) => l === t) ? t : null;
}, ys = (e) => Ze(e) && e === gs(), bs = (e, t = {}) => {
  try {
    e.focus(t);
  } catch (l) {
    console.error(l);
  }
  return ys(e);
}, hs = (e, t) => t && Ze(e) && e.getAttribute(t) || null, Bs = (e) => {
  if (hs(e, "display") === "none")
    return !1;
  const t = ms(e);
  return !!(t && t.height > 0 && t.width > 0);
}, Ve = (e) => ((e == null ? void 0 : e()) ?? []).length === 0, ro = (e, t) => (Ze(t) ? t : Ma).querySelector(e) || null, Ss = (e, t) => Array.from([(Ze(t) ? t : Ma).querySelectorAll(e)]), qa = (e, t) => t && Ze(e) ? e.getAttribute(t) : null, ws = (e) => Ma.getElementById(/^#/.test(e) ? e.slice(1) : e) || null, Cs = (e, t, l) => {
  t && Ze(e) && e.setAttribute(t, l);
}, ks = (e, t) => {
  t && Ze(e) && e.removeAttribute(t);
}, $s = (e, t) => Qt(e).toLowerCase() === Qt(t).toLowerCase(), qt = Da ? window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame || window.oRequestAnimationFrame || // Fallback, but not a true polyfill
// Only needed for Opera Mini
((e) => setTimeout(e, 16)) : (e) => setTimeout(e, 0), uo = (e, t) => Ze(e) ? ps.call(e, t) : !1, _s = (ze == null ? void 0 : ze.closest) || function(e) {
  let t = this;
  if (!t)
    return null;
  do {
    if (uo(t, e))
      return t;
    t = t.parentElement || t.parentNode;
  } while (t !== null && t.nodeType === Node.ELEMENT_NODE);
  return null;
}, pl = (e, t, l = !1) => {
  if (!Ze(t))
    return null;
  const a = _s.call(t, e);
  return l ? a : a === t ? null : a;
}, Ba = (e) => {
  const t = window.getComputedStyle(e), l = t.transitionDelay.split(",")[0] || "", a = t.transitionDuration.split(",")[0] || "", o = Number(l.slice(0, -1)) * 1e3, n = Number(a.slice(0, -1)) * 1e3;
  return o + n;
}, ua = (e, t, l) => t.concat(["sm", "md", "lg", "xl", "xxl"]).reduce((a, o) => (a[e ? `${e}${o.charAt(0).toUpperCase() + o.slice(1)}` : o] = l, a), /* @__PURE__ */ Object.create(null)), co = (e, t, l, a = l) => Object.keys(t).reduce((o, n) => (e[n] && o.push(
  [a, n.replace(l, ""), e[n]].filter((s) => s && typeof s != "boolean").join("-").toLowerCase()
), o), []), st = (e = "") => `__BVID__${Math.random().toString().slice(2, 8)}___BV_${e}__`, Sa = (e) => !!(e.href || e.to), xe = (e, t = {}, l = {}) => {
  const a = [e];
  let o;
  for (let n = 0; n < a.length && !o; n++) {
    const s = a[n];
    o = l[s];
  }
  return o && typeof o == "function" ? o(t) : o;
}, it = (e, t = NaN) => Number.isInteger(e) ? e : t, Ts = (e, t = NaN) => {
  const l = Number.parseInt(e, 10);
  return Number.isNaN(l) ? t : l;
}, Yt = (e, t = NaN) => {
  const l = Number.parseFloat(e.toString());
  return Number.isNaN(l) ? t : l;
}, As = (e, t) => Object.keys(e).filter((l) => !t.map((a) => a.toString()).includes(l)).reduce((l, a) => ({ ...l, [a]: e[a] }), {}), Ga = (e, t) => [...t].reduce(
  (l, a) => (l[a] = e[a], l),
  {}
), ml = (e, t, l) => {
  const a = t.split(/[.[\]]/g);
  let o = e;
  for (const n of a) {
    if (o === null || o === void 0)
      return l;
    n.trim() !== "" && (o = o[n]);
  }
  return o === void 0 ? l : o;
}, gl = (e, t) => t + (e ? os(e) : ""), da = (e, t) => e === !0 || e === "true" || e === "" ? "true" : e === "grammar" || e === "spelling" ? e : t === !1 ? "true" : e === !1 || e === "false" ? "false" : void 0, fo = Symbol("carousel"), vo = Symbol("tabs"), po = Symbol("progress"), mo = Symbol("listGroup"), go = Symbol("avatarGroup"), yo = Symbol("accordion"), bo = Symbol("checkboxGroup"), ho = Symbol("radioGroup"), Wa = Symbol("collapse"), Bo = Symbol("collapse"), Ua = Symbol("navbar"), wa = (e, t) => ((e == null ? void 0 : e()) ?? []).reduce((l, a) => (typeof a.type == "symbol" ? l = l.concat(a.children) : l.push(a), l), []).filter((l) => {
  var a;
  return ((a = l.type) == null ? void 0 : a.__name) === t;
}), So = ["top", "right", "bottom", "left"], yl = ["start", "end"], bl = /* @__PURE__ */ So.reduce((e, t) => e.concat(t, t + "-" + yl[0], t + "-" + yl[1]), []), at = Math.min, Ke = Math.max, ea = Math.round, Gt = Math.floor, ut = (e) => ({
  x: e,
  y: e
}), Vs = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
}, Os = {
  start: "end",
  end: "start"
};
function Ca(e, t, l) {
  return Ke(e, at(t, l));
}
function pt(e, t) {
  return typeof e == "function" ? e(t) : e;
}
function qe(e) {
  return e.split("-")[0];
}
function Je(e) {
  return e.split("-")[1];
}
function wo(e) {
  return e === "x" ? "y" : "x";
}
function Xa(e) {
  return e === "y" ? "height" : "width";
}
function xt(e) {
  return ["top", "bottom"].includes(qe(e)) ? "y" : "x";
}
function Ka(e) {
  return wo(xt(e));
}
function Co(e, t, l) {
  l === void 0 && (l = !1);
  const a = Je(e), o = Ka(e), n = Xa(o);
  let s = o === "x" ? a === (l ? "end" : "start") ? "right" : "left" : a === "start" ? "bottom" : "top";
  return t.reference[n] > t.floating[n] && (s = aa(s)), [s, aa(s)];
}
function Es(e) {
  const t = aa(e);
  return [ta(e), t, ta(t)];
}
function ta(e) {
  return e.replace(/start|end/g, (t) => Os[t]);
}
function Fs(e, t, l) {
  const a = ["left", "right"], o = ["right", "left"], n = ["top", "bottom"], s = ["bottom", "top"];
  switch (e) {
    case "top":
    case "bottom":
      return l ? t ? o : a : t ? a : o;
    case "left":
    case "right":
      return t ? n : s;
    default:
      return [];
  }
}
function Ls(e, t, l, a) {
  const o = Je(e);
  let n = Fs(qe(e), l === "start", a);
  return o && (n = n.map((s) => s + "-" + o), t && (n = n.concat(n.map(ta)))), n;
}
function aa(e) {
  return e.replace(/left|right|bottom|top/g, (t) => Vs[t]);
}
function Ps(e) {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    ...e
  };
}
function Ja(e) {
  return typeof e != "number" ? Ps(e) : {
    top: e,
    right: e,
    bottom: e,
    left: e
  };
}
function Tt(e) {
  return {
    ...e,
    top: e.y,
    left: e.x,
    right: e.x + e.width,
    bottom: e.y + e.height
  };
}
function hl(e, t, l) {
  let {
    reference: a,
    floating: o
  } = e;
  const n = xt(t), s = Ka(t), i = Xa(s), r = qe(t), c = n === "y", b = a.x + a.width / 2 - o.width / 2, v = a.y + a.height / 2 - o.height / 2, m = a[i] / 2 - o[i] / 2;
  let S;
  switch (r) {
    case "top":
      S = {
        x: b,
        y: a.y - o.height
      };
      break;
    case "bottom":
      S = {
        x: b,
        y: a.y + a.height
      };
      break;
    case "right":
      S = {
        x: a.x + a.width,
        y: v
      };
      break;
    case "left":
      S = {
        x: a.x - o.width,
        y: v
      };
      break;
    default:
      S = {
        x: a.x,
        y: a.y
      };
  }
  switch (Je(t)) {
    case "start":
      S[s] -= m * (l && c ? -1 : 1);
      break;
    case "end":
      S[s] += m * (l && c ? -1 : 1);
      break;
  }
  return S;
}
const Ns = async (e, t, l) => {
  const {
    placement: a = "bottom",
    strategy: o = "absolute",
    middleware: n = [],
    platform: s
  } = l, i = n.filter(Boolean), r = await (s.isRTL == null ? void 0 : s.isRTL(t));
  let c = await s.getElementRects({
    reference: e,
    floating: t,
    strategy: o
  }), {
    x: b,
    y: v
  } = hl(c, a, r), m = a, S = {}, B = 0;
  for (let h = 0; h < i.length; h++) {
    const {
      name: F,
      fn: C
    } = i[h], {
      x: T,
      y: _,
      data: $,
      reset: y
    } = await C({
      x: b,
      y: v,
      initialPlacement: a,
      placement: m,
      strategy: o,
      middlewareData: S,
      rects: c,
      platform: s,
      elements: {
        reference: e,
        floating: t
      }
    });
    if (b = T ?? b, v = _ ?? v, S = {
      ...S,
      [F]: {
        ...S[F],
        ...$
      }
    }, y && B <= 50) {
      B++, typeof y == "object" && (y.placement && (m = y.placement), y.rects && (c = y.rects === !0 ? await s.getElementRects({
        reference: e,
        floating: t,
        strategy: o
      }) : y.rects), {
        x: b,
        y: v
      } = hl(c, m, r)), h = -1;
      continue;
    }
  }
  return {
    x: b,
    y: v,
    placement: m,
    strategy: o,
    middlewareData: S
  };
};
async function It(e, t) {
  var l;
  t === void 0 && (t = {});
  const {
    x: a,
    y: o,
    platform: n,
    rects: s,
    elements: i,
    strategy: r
  } = e, {
    boundary: c = "clippingAncestors",
    rootBoundary: b = "viewport",
    elementContext: v = "floating",
    altBoundary: m = !1,
    padding: S = 0
  } = pt(t, e), B = Ja(S), F = i[m ? v === "floating" ? "reference" : "floating" : v], C = Tt(await n.getClippingRect({
    element: (l = await (n.isElement == null ? void 0 : n.isElement(F))) == null || l ? F : F.contextElement || await (n.getDocumentElement == null ? void 0 : n.getDocumentElement(i.floating)),
    boundary: c,
    rootBoundary: b,
    strategy: r
  })), T = v === "floating" ? {
    ...s.floating,
    x: a,
    y: o
  } : s.reference, _ = await (n.getOffsetParent == null ? void 0 : n.getOffsetParent(i.floating)), $ = await (n.isElement == null ? void 0 : n.isElement(_)) ? await (n.getScale == null ? void 0 : n.getScale(_)) || {
    x: 1,
    y: 1
  } : {
    x: 1,
    y: 1
  }, y = Tt(n.convertOffsetParentRelativeRectToViewportRelativeRect ? await n.convertOffsetParentRelativeRectToViewportRelativeRect({
    rect: T,
    offsetParent: _,
    strategy: r
  }) : T);
  return {
    top: (C.top - y.top + B.top) / $.y,
    bottom: (y.bottom - C.bottom + B.bottom) / $.y,
    left: (C.left - y.left + B.left) / $.x,
    right: (y.right - C.right + B.right) / $.x
  };
}
const Is = (e) => ({
  name: "arrow",
  options: e,
  async fn(t) {
    const {
      x: l,
      y: a,
      placement: o,
      rects: n,
      platform: s,
      elements: i
    } = t, {
      element: r,
      padding: c = 0
    } = pt(e, t) || {};
    if (r == null)
      return {};
    const b = Ja(c), v = {
      x: l,
      y: a
    }, m = Ka(o), S = Xa(m), B = await s.getDimensions(r), h = m === "y", F = h ? "top" : "left", C = h ? "bottom" : "right", T = h ? "clientHeight" : "clientWidth", _ = n.reference[S] + n.reference[m] - v[m] - n.floating[S], $ = v[m] - n.reference[m], y = await (s.getOffsetParent == null ? void 0 : s.getOffsetParent(r));
    let k = y ? y[T] : 0;
    (!k || !await (s.isElement == null ? void 0 : s.isElement(y))) && (k = i.floating[T] || n.floating[S]);
    const f = _ / 2 - $ / 2, A = k / 2 - B[S] / 2 - 1, P = at(b[F], A), p = at(b[C], A), N = P, I = k - B[S] - p, E = k / 2 - B[S] / 2 + f, j = Ca(N, E, I), W = Je(o) != null && E != j && n.reference[S] / 2 - (E < N ? P : p) - B[S] / 2 < 0 ? E < N ? N - E : I - E : 0;
    return {
      [m]: v[m] - W,
      data: {
        [m]: j,
        centerOffset: E - j + W
      }
    };
  }
});
function zs(e, t, l) {
  return (e ? [...l.filter((o) => Je(o) === e), ...l.filter((o) => Je(o) !== e)] : l.filter((o) => qe(o) === o)).filter((o) => e ? Je(o) === e || (t ? ta(o) !== o : !1) : !0);
}
const Hs = function(e) {
  return e === void 0 && (e = {}), {
    name: "autoPlacement",
    options: e,
    async fn(t) {
      var l, a, o;
      const {
        rects: n,
        middlewareData: s,
        placement: i,
        platform: r,
        elements: c
      } = t, {
        crossAxis: b = !1,
        alignment: v,
        allowedPlacements: m = bl,
        autoAlignment: S = !0,
        ...B
      } = pt(e, t), h = v !== void 0 || m === bl ? zs(v || null, S, m) : m, F = await It(t, B), C = ((l = s.autoPlacement) == null ? void 0 : l.index) || 0, T = h[C];
      if (T == null)
        return {};
      const _ = Co(T, n, await (r.isRTL == null ? void 0 : r.isRTL(c.floating)));
      if (i !== T)
        return {
          reset: {
            placement: h[0]
          }
        };
      const $ = [F[qe(T)], F[_[0]], F[_[1]]], y = [...((a = s.autoPlacement) == null ? void 0 : a.overflows) || [], {
        placement: T,
        overflows: $
      }], k = h[C + 1];
      if (k)
        return {
          data: {
            index: C + 1,
            overflows: y
          },
          reset: {
            placement: k
          }
        };
      const f = y.map((p) => {
        const N = Je(p.placement);
        return [p.placement, N && b ? (
          // Check along the mainAxis and main crossAxis side.
          p.overflows.slice(0, 2).reduce((I, E) => I + E, 0)
        ) : (
          // Check only the mainAxis.
          p.overflows[0]
        ), p.overflows];
      }).sort((p, N) => p[1] - N[1]), P = ((o = f.filter((p) => p[2].slice(
        0,
        // Aligned placements should not check their opposite crossAxis
        // side.
        Je(p[0]) ? 2 : 3
      ).every((N) => N <= 0))[0]) == null ? void 0 : o[0]) || f[0][0];
      return P !== i ? {
        data: {
          index: C + 1,
          overflows: y
        },
        reset: {
          placement: P
        }
      } : {};
    }
  };
}, ko = function(e) {
  return e === void 0 && (e = {}), {
    name: "flip",
    options: e,
    async fn(t) {
      var l;
      const {
        placement: a,
        middlewareData: o,
        rects: n,
        initialPlacement: s,
        platform: i,
        elements: r
      } = t, {
        mainAxis: c = !0,
        crossAxis: b = !0,
        fallbackPlacements: v,
        fallbackStrategy: m = "bestFit",
        fallbackAxisSideDirection: S = "none",
        flipAlignment: B = !0,
        ...h
      } = pt(e, t), F = qe(a), C = qe(s) === s, T = await (i.isRTL == null ? void 0 : i.isRTL(r.floating)), _ = v || (C || !B ? [aa(s)] : Es(s));
      !v && S !== "none" && _.push(...Ls(s, B, S, T));
      const $ = [s, ..._], y = await It(t, h), k = [];
      let f = ((l = o.flip) == null ? void 0 : l.overflows) || [];
      if (c && k.push(y[F]), b) {
        const N = Co(a, n, T);
        k.push(y[N[0]], y[N[1]]);
      }
      if (f = [...f, {
        placement: a,
        overflows: k
      }], !k.every((N) => N <= 0)) {
        var A, P;
        const N = (((A = o.flip) == null ? void 0 : A.index) || 0) + 1, I = $[N];
        if (I)
          return {
            data: {
              index: N,
              overflows: f
            },
            reset: {
              placement: I
            }
          };
        let E = (P = f.filter((j) => j.overflows[0] <= 0).sort((j, X) => j.overflows[1] - X.overflows[1])[0]) == null ? void 0 : P.placement;
        if (!E)
          switch (m) {
            case "bestFit": {
              var p;
              const j = (p = f.map((X) => [X.placement, X.overflows.filter((W) => W > 0).reduce((W, fe) => W + fe, 0)]).sort((X, W) => X[1] - W[1])[0]) == null ? void 0 : p[0];
              j && (E = j);
              break;
            }
            case "initialPlacement":
              E = s;
              break;
          }
        if (a !== E)
          return {
            reset: {
              placement: E
            }
          };
      }
      return {};
    }
  };
};
function Bl(e, t) {
  return {
    top: e.top - t.height,
    right: e.right - t.width,
    bottom: e.bottom - t.height,
    left: e.left - t.width
  };
}
function Sl(e) {
  return So.some((t) => e[t] >= 0);
}
const xs = function(e) {
  return e === void 0 && (e = {}), {
    name: "hide",
    options: e,
    async fn(t) {
      const {
        rects: l
      } = t, {
        strategy: a = "referenceHidden",
        ...o
      } = pt(e, t);
      switch (a) {
        case "referenceHidden": {
          const n = await It(t, {
            ...o,
            elementContext: "reference"
          }), s = Bl(n, l.reference);
          return {
            data: {
              referenceHiddenOffsets: s,
              referenceHidden: Sl(s)
            }
          };
        }
        case "escaped": {
          const n = await It(t, {
            ...o,
            altBoundary: !0
          }), s = Bl(n, l.floating);
          return {
            data: {
              escapedOffsets: s,
              escaped: Sl(s)
            }
          };
        }
        default:
          return {};
      }
    }
  };
};
function $o(e) {
  const t = at(...e.map((n) => n.left)), l = at(...e.map((n) => n.top)), a = Ke(...e.map((n) => n.right)), o = Ke(...e.map((n) => n.bottom));
  return {
    x: t,
    y: l,
    width: a - t,
    height: o - l
  };
}
function Rs(e) {
  const t = e.slice().sort((o, n) => o.y - n.y), l = [];
  let a = null;
  for (let o = 0; o < t.length; o++) {
    const n = t[o];
    !a || n.y - a.y > a.height / 2 ? l.push([n]) : l[l.length - 1].push(n), a = n;
  }
  return l.map((o) => Tt($o(o)));
}
const Ms = function(e) {
  return e === void 0 && (e = {}), {
    name: "inline",
    options: e,
    async fn(t) {
      const {
        placement: l,
        elements: a,
        rects: o,
        platform: n,
        strategy: s
      } = t, {
        padding: i = 2,
        x: r,
        y: c
      } = pt(e, t), b = Array.from(await (n.getClientRects == null ? void 0 : n.getClientRects(a.reference)) || []), v = Rs(b), m = Tt($o(b)), S = Ja(i);
      function B() {
        if (v.length === 2 && v[0].left > v[1].right && r != null && c != null)
          return v.find((F) => r > F.left - S.left && r < F.right + S.right && c > F.top - S.top && c < F.bottom + S.bottom) || m;
        if (v.length >= 2) {
          if (xt(l) === "y") {
            const p = v[0], N = v[v.length - 1], I = qe(l) === "top", E = p.top, j = N.bottom, X = I ? p.left : N.left, W = I ? p.right : N.right, fe = W - X, Q = j - E;
            return {
              top: E,
              bottom: j,
              left: X,
              right: W,
              width: fe,
              height: Q,
              x: X,
              y: E
            };
          }
          const F = qe(l) === "left", C = Ke(...v.map((p) => p.right)), T = at(...v.map((p) => p.left)), _ = v.filter((p) => F ? p.left === T : p.right === C), $ = _[0].top, y = _[_.length - 1].bottom, k = T, f = C, A = f - k, P = y - $;
          return {
            top: $,
            bottom: y,
            left: k,
            right: f,
            width: A,
            height: P,
            x: k,
            y: $
          };
        }
        return m;
      }
      const h = await n.getElementRects({
        reference: {
          getBoundingClientRect: B
        },
        floating: a.floating,
        strategy: s
      });
      return o.reference.x !== h.reference.x || o.reference.y !== h.reference.y || o.reference.width !== h.reference.width || o.reference.height !== h.reference.height ? {
        reset: {
          rects: h
        }
      } : {};
    }
  };
};
async function Ds(e, t) {
  const {
    placement: l,
    platform: a,
    elements: o
  } = e, n = await (a.isRTL == null ? void 0 : a.isRTL(o.floating)), s = qe(l), i = Je(l), r = xt(l) === "y", c = ["left", "top"].includes(s) ? -1 : 1, b = n && r ? -1 : 1, v = pt(t, e);
  let {
    mainAxis: m,
    crossAxis: S,
    alignmentAxis: B
  } = typeof v == "number" ? {
    mainAxis: v,
    crossAxis: 0,
    alignmentAxis: null
  } : {
    mainAxis: 0,
    crossAxis: 0,
    alignmentAxis: null,
    ...v
  };
  return i && typeof B == "number" && (S = i === "end" ? B * -1 : B), r ? {
    x: S * b,
    y: m * c
  } : {
    x: m * c,
    y: S * b
  };
}
const _o = function(e) {
  return e === void 0 && (e = 0), {
    name: "offset",
    options: e,
    async fn(t) {
      const {
        x: l,
        y: a
      } = t, o = await Ds(t, e);
      return {
        x: l + o.x,
        y: a + o.y,
        data: o
      };
    }
  };
}, To = function(e) {
  return e === void 0 && (e = {}), {
    name: "shift",
    options: e,
    async fn(t) {
      const {
        x: l,
        y: a,
        placement: o
      } = t, {
        mainAxis: n = !0,
        crossAxis: s = !1,
        limiter: i = {
          fn: (F) => {
            let {
              x: C,
              y: T
            } = F;
            return {
              x: C,
              y: T
            };
          }
        },
        ...r
      } = pt(e, t), c = {
        x: l,
        y: a
      }, b = await It(t, r), v = xt(qe(o)), m = wo(v);
      let S = c[m], B = c[v];
      if (n) {
        const F = m === "y" ? "top" : "left", C = m === "y" ? "bottom" : "right", T = S + b[F], _ = S - b[C];
        S = Ca(T, S, _);
      }
      if (s) {
        const F = v === "y" ? "top" : "left", C = v === "y" ? "bottom" : "right", T = B + b[F], _ = B - b[C];
        B = Ca(T, B, _);
      }
      const h = i.fn({
        ...t,
        [m]: S,
        [v]: B
      });
      return {
        ...h,
        data: {
          x: h.x - l,
          y: h.y - a
        }
      };
    }
  };
};
function dt(e) {
  return Ao(e) ? (e.nodeName || "").toLowerCase() : "#document";
}
function Ie(e) {
  var t;
  return (e == null || (t = e.ownerDocument) == null ? void 0 : t.defaultView) || window;
}
function ot(e) {
  var t;
  return (t = (Ao(e) ? e.ownerDocument : e.document) || window.document) == null ? void 0 : t.documentElement;
}
function Ao(e) {
  return e instanceof Node || e instanceof Ie(e).Node;
}
function lt(e) {
  return e instanceof Element || e instanceof Ie(e).Element;
}
function Ye(e) {
  return e instanceof HTMLElement || e instanceof Ie(e).HTMLElement;
}
function wl(e) {
  return typeof ShadowRoot > "u" ? !1 : e instanceof ShadowRoot || e instanceof Ie(e).ShadowRoot;
}
function Rt(e) {
  const {
    overflow: t,
    overflowX: l,
    overflowY: a,
    display: o
  } = De(e);
  return /auto|scroll|overlay|hidden|clip/.test(t + a + l) && !["inline", "contents"].includes(o);
}
function js(e) {
  return ["table", "td", "th"].includes(dt(e));
}
function Ya(e) {
  const t = Za(), l = De(e);
  return l.transform !== "none" || l.perspective !== "none" || (l.containerType ? l.containerType !== "normal" : !1) || !t && (l.backdropFilter ? l.backdropFilter !== "none" : !1) || !t && (l.filter ? l.filter !== "none" : !1) || ["transform", "perspective", "filter"].some((a) => (l.willChange || "").includes(a)) || ["paint", "layout", "strict", "content"].some((a) => (l.contain || "").includes(a));
}
function qs(e) {
  let t = At(e);
  for (; Ye(t) && !ca(t); ) {
    if (Ya(t))
      return t;
    t = At(t);
  }
  return null;
}
function Za() {
  return typeof CSS > "u" || !CSS.supports ? !1 : CSS.supports("-webkit-backdrop-filter", "none");
}
function ca(e) {
  return ["html", "body", "#document"].includes(dt(e));
}
function De(e) {
  return Ie(e).getComputedStyle(e);
}
function fa(e) {
  return lt(e) ? {
    scrollLeft: e.scrollLeft,
    scrollTop: e.scrollTop
  } : {
    scrollLeft: e.pageXOffset,
    scrollTop: e.pageYOffset
  };
}
function At(e) {
  if (dt(e) === "html")
    return e;
  const t = (
    // Step into the shadow DOM of the parent of a slotted node.
    e.assignedSlot || // DOM Element detected.
    e.parentNode || // ShadowRoot detected.
    wl(e) && e.host || // Fallback.
    ot(e)
  );
  return wl(t) ? t.host : t;
}
function Vo(e) {
  const t = At(e);
  return ca(t) ? e.ownerDocument ? e.ownerDocument.body : e.body : Ye(t) && Rt(t) ? t : Vo(t);
}
function la(e, t) {
  var l;
  t === void 0 && (t = []);
  const a = Vo(e), o = a === ((l = e.ownerDocument) == null ? void 0 : l.body), n = Ie(a);
  return o ? t.concat(n, n.visualViewport || [], Rt(a) ? a : []) : t.concat(a, la(a));
}
function Oo(e) {
  const t = De(e);
  let l = parseFloat(t.width) || 0, a = parseFloat(t.height) || 0;
  const o = Ye(e), n = o ? e.offsetWidth : l, s = o ? e.offsetHeight : a, i = ea(l) !== n || ea(a) !== s;
  return i && (l = n, a = s), {
    width: l,
    height: a,
    $: i
  };
}
function Qa(e) {
  return lt(e) ? e : e.contextElement;
}
function $t(e) {
  const t = Qa(e);
  if (!Ye(t))
    return ut(1);
  const l = t.getBoundingClientRect(), {
    width: a,
    height: o,
    $: n
  } = Oo(t);
  let s = (n ? ea(l.width) : l.width) / a, i = (n ? ea(l.height) : l.height) / o;
  return (!s || !Number.isFinite(s)) && (s = 1), (!i || !Number.isFinite(i)) && (i = 1), {
    x: s,
    y: i
  };
}
const Gs = /* @__PURE__ */ ut(0);
function Eo(e) {
  const t = Ie(e);
  return !Za() || !t.visualViewport ? Gs : {
    x: t.visualViewport.offsetLeft,
    y: t.visualViewport.offsetTop
  };
}
function Ws(e, t, l) {
  return t === void 0 && (t = !1), !l || t && l !== Ie(e) ? !1 : t;
}
function gt(e, t, l, a) {
  t === void 0 && (t = !1), l === void 0 && (l = !1);
  const o = e.getBoundingClientRect(), n = Qa(e);
  let s = ut(1);
  t && (a ? lt(a) && (s = $t(a)) : s = $t(e));
  const i = Ws(n, l, a) ? Eo(n) : ut(0);
  let r = (o.left + i.x) / s.x, c = (o.top + i.y) / s.y, b = o.width / s.x, v = o.height / s.y;
  if (n) {
    const m = Ie(n), S = a && lt(a) ? Ie(a) : a;
    let B = m.frameElement;
    for (; B && a && S !== m; ) {
      const h = $t(B), F = B.getBoundingClientRect(), C = De(B), T = F.left + (B.clientLeft + parseFloat(C.paddingLeft)) * h.x, _ = F.top + (B.clientTop + parseFloat(C.paddingTop)) * h.y;
      r *= h.x, c *= h.y, b *= h.x, v *= h.y, r += T, c += _, B = Ie(B).frameElement;
    }
  }
  return Tt({
    width: b,
    height: v,
    x: r,
    y: c
  });
}
function Us(e) {
  let {
    rect: t,
    offsetParent: l,
    strategy: a
  } = e;
  const o = Ye(l), n = ot(l);
  if (l === n)
    return t;
  let s = {
    scrollLeft: 0,
    scrollTop: 0
  }, i = ut(1);
  const r = ut(0);
  if ((o || !o && a !== "fixed") && ((dt(l) !== "body" || Rt(n)) && (s = fa(l)), Ye(l))) {
    const c = gt(l);
    i = $t(l), r.x = c.x + l.clientLeft, r.y = c.y + l.clientTop;
  }
  return {
    width: t.width * i.x,
    height: t.height * i.y,
    x: t.x * i.x - s.scrollLeft * i.x + r.x,
    y: t.y * i.y - s.scrollTop * i.y + r.y
  };
}
function Xs(e) {
  return Array.from(e.getClientRects());
}
function Fo(e) {
  return gt(ot(e)).left + fa(e).scrollLeft;
}
function Ks(e) {
  const t = ot(e), l = fa(e), a = e.ownerDocument.body, o = Ke(t.scrollWidth, t.clientWidth, a.scrollWidth, a.clientWidth), n = Ke(t.scrollHeight, t.clientHeight, a.scrollHeight, a.clientHeight);
  let s = -l.scrollLeft + Fo(e);
  const i = -l.scrollTop;
  return De(a).direction === "rtl" && (s += Ke(t.clientWidth, a.clientWidth) - o), {
    width: o,
    height: n,
    x: s,
    y: i
  };
}
function Js(e, t) {
  const l = Ie(e), a = ot(e), o = l.visualViewport;
  let n = a.clientWidth, s = a.clientHeight, i = 0, r = 0;
  if (o) {
    n = o.width, s = o.height;
    const c = Za();
    (!c || c && t === "fixed") && (i = o.offsetLeft, r = o.offsetTop);
  }
  return {
    width: n,
    height: s,
    x: i,
    y: r
  };
}
function Ys(e, t) {
  const l = gt(e, !0, t === "fixed"), a = l.top + e.clientTop, o = l.left + e.clientLeft, n = Ye(e) ? $t(e) : ut(1), s = e.clientWidth * n.x, i = e.clientHeight * n.y, r = o * n.x, c = a * n.y;
  return {
    width: s,
    height: i,
    x: r,
    y: c
  };
}
function Cl(e, t, l) {
  let a;
  if (t === "viewport")
    a = Js(e, l);
  else if (t === "document")
    a = Ks(ot(e));
  else if (lt(t))
    a = Ys(t, l);
  else {
    const o = Eo(e);
    a = {
      ...t,
      x: t.x - o.x,
      y: t.y - o.y
    };
  }
  return Tt(a);
}
function Lo(e, t) {
  const l = At(e);
  return l === t || !lt(l) || ca(l) ? !1 : De(l).position === "fixed" || Lo(l, t);
}
function Zs(e, t) {
  const l = t.get(e);
  if (l)
    return l;
  let a = la(e).filter((i) => lt(i) && dt(i) !== "body"), o = null;
  const n = De(e).position === "fixed";
  let s = n ? At(e) : e;
  for (; lt(s) && !ca(s); ) {
    const i = De(s), r = Ya(s);
    !r && i.position === "fixed" && (o = null), (n ? !r && !o : !r && i.position === "static" && !!o && ["absolute", "fixed"].includes(o.position) || Rt(s) && !r && Lo(e, s)) ? a = a.filter((b) => b !== s) : o = i, s = At(s);
  }
  return t.set(e, a), a;
}
function Qs(e) {
  let {
    element: t,
    boundary: l,
    rootBoundary: a,
    strategy: o
  } = e;
  const s = [...l === "clippingAncestors" ? Zs(t, this._c) : [].concat(l), a], i = s[0], r = s.reduce((c, b) => {
    const v = Cl(t, b, o);
    return c.top = Ke(v.top, c.top), c.right = at(v.right, c.right), c.bottom = at(v.bottom, c.bottom), c.left = Ke(v.left, c.left), c;
  }, Cl(t, i, o));
  return {
    width: r.right - r.left,
    height: r.bottom - r.top,
    x: r.left,
    y: r.top
  };
}
function ei(e) {
  return Oo(e);
}
function ti(e, t, l) {
  const a = Ye(t), o = ot(t), n = l === "fixed", s = gt(e, !0, n, t);
  let i = {
    scrollLeft: 0,
    scrollTop: 0
  };
  const r = ut(0);
  if (a || !a && !n)
    if ((dt(t) !== "body" || Rt(o)) && (i = fa(t)), a) {
      const c = gt(t, !0, n, t);
      r.x = c.x + t.clientLeft, r.y = c.y + t.clientTop;
    } else
      o && (r.x = Fo(o));
  return {
    x: s.left + i.scrollLeft - r.x,
    y: s.top + i.scrollTop - r.y,
    width: s.width,
    height: s.height
  };
}
function kl(e, t) {
  return !Ye(e) || De(e).position === "fixed" ? null : t ? t(e) : e.offsetParent;
}
function Po(e, t) {
  const l = Ie(e);
  if (!Ye(e))
    return l;
  let a = kl(e, t);
  for (; a && js(a) && De(a).position === "static"; )
    a = kl(a, t);
  return a && (dt(a) === "html" || dt(a) === "body" && De(a).position === "static" && !Ya(a)) ? l : a || qs(e) || l;
}
const ai = async function(e) {
  let {
    reference: t,
    floating: l,
    strategy: a
  } = e;
  const o = this.getOffsetParent || Po, n = this.getDimensions;
  return {
    reference: ti(t, await o(l), a),
    floating: {
      x: 0,
      y: 0,
      ...await n(l)
    }
  };
};
function li(e) {
  return De(e).direction === "rtl";
}
const oi = {
  convertOffsetParentRelativeRectToViewportRelativeRect: Us,
  getDocumentElement: ot,
  getClippingRect: Qs,
  getOffsetParent: Po,
  getElementRects: ai,
  getClientRects: Xs,
  getDimensions: ei,
  getScale: $t,
  isElement: lt,
  isRTL: li
};
function ni(e, t) {
  let l = null, a;
  const o = ot(e);
  function n() {
    clearTimeout(a), l && l.disconnect(), l = null;
  }
  function s(i, r) {
    i === void 0 && (i = !1), r === void 0 && (r = 1), n();
    const {
      left: c,
      top: b,
      width: v,
      height: m
    } = e.getBoundingClientRect();
    if (i || t(), !v || !m)
      return;
    const S = Gt(b), B = Gt(o.clientWidth - (c + v)), h = Gt(o.clientHeight - (b + m)), F = Gt(c), T = {
      rootMargin: -S + "px " + -B + "px " + -h + "px " + -F + "px",
      threshold: Ke(0, at(1, r)) || 1
    };
    let _ = !0;
    function $(y) {
      const k = y[0].intersectionRatio;
      if (k !== r) {
        if (!_)
          return s();
        k ? s(!1, k) : a = setTimeout(() => {
          s(!1, 1e-7);
        }, 100);
      }
      _ = !1;
    }
    try {
      l = new IntersectionObserver($, {
        ...T,
        // Handle <iframe>s
        root: o.ownerDocument
      });
    } catch {
      l = new IntersectionObserver($, T);
    }
    l.observe(e);
  }
  return s(!0), n;
}
function No(e, t, l, a) {
  a === void 0 && (a = {});
  const {
    ancestorScroll: o = !0,
    ancestorResize: n = !0,
    elementResize: s = typeof ResizeObserver == "function",
    layoutShift: i = typeof IntersectionObserver == "function",
    animationFrame: r = !1
  } = a, c = Qa(e), b = o || n ? [...c ? la(c) : [], ...la(t)] : [];
  b.forEach((C) => {
    o && C.addEventListener("scroll", l, {
      passive: !0
    }), n && C.addEventListener("resize", l);
  });
  const v = c && i ? ni(c, l) : null;
  let m = -1, S = null;
  s && (S = new ResizeObserver((C) => {
    let [T] = C;
    T && T.target === c && S && (S.unobserve(t), cancelAnimationFrame(m), m = requestAnimationFrame(() => {
      S && S.observe(t);
    })), l();
  }), c && !r && S.observe(c), S.observe(t));
  let B, h = r ? gt(e) : null;
  r && F();
  function F() {
    const C = gt(e);
    h && (C.x !== h.x || C.y !== h.y || C.width !== h.width || C.height !== h.height) && l(), h = C, B = requestAnimationFrame(F);
  }
  return l(), () => {
    b.forEach((C) => {
      o && C.removeEventListener("scroll", l), n && C.removeEventListener("resize", l);
    }), v && v(), S && S.disconnect(), S = null, r && cancelAnimationFrame(B);
  };
}
const si = (e, t, l) => {
  const a = /* @__PURE__ */ new Map(), o = {
    platform: oi,
    ...l
  }, n = {
    ...o.platform,
    _c: a
  };
  return Ns(e, t, {
    ...o,
    platform: n
  });
};
function ka(e) {
  var t;
  return (t = e == null ? void 0 : e.$el) != null ? t : e;
}
function ii(e) {
  return {
    name: "arrow",
    options: e,
    fn(t) {
      const l = ka(w(e.element));
      return l == null ? {} : Is({
        element: l,
        padding: e.padding
      }).fn(t);
    }
  };
}
function Io(e) {
  return typeof window > "u" ? 1 : (e.ownerDocument.defaultView || window).devicePixelRatio || 1;
}
function $l(e, t) {
  const l = Io(e);
  return Math.round(t * l) / l;
}
function zo(e, t, l) {
  l === void 0 && (l = {});
  const a = l.whileElementsMounted, o = u(() => {
    var f;
    return (f = w(l.open)) != null ? f : !0;
  }), n = u(() => w(l.middleware)), s = u(() => {
    var f;
    return (f = w(l.placement)) != null ? f : "bottom";
  }), i = u(() => {
    var f;
    return (f = w(l.strategy)) != null ? f : "absolute";
  }), r = u(() => {
    var f;
    return (f = w(l.transform)) != null ? f : !0;
  }), c = u(() => ka(e.value)), b = u(() => ka(t.value)), v = x(0), m = x(0), S = x(i.value), B = x(s.value), h = Na({}), F = x(!1), C = u(() => {
    const f = {
      position: S.value,
      left: "0",
      top: "0"
    };
    if (!b.value)
      return f;
    const A = $l(b.value, v.value), P = $l(b.value, m.value);
    return r.value ? {
      ...f,
      transform: "translate(" + A + "px, " + P + "px)",
      ...Io(b.value) >= 1.5 && {
        willChange: "transform"
      }
    } : {
      position: S.value,
      left: A + "px",
      top: P + "px"
    };
  });
  let T;
  function _() {
    c.value == null || b.value == null || si(c.value, b.value, {
      middleware: n.value,
      placement: s.value,
      strategy: i.value
    }).then((f) => {
      v.value = f.x, m.value = f.y, S.value = f.strategy, B.value = f.placement, h.value = f.middlewareData, F.value = !0;
    });
  }
  function $() {
    typeof T == "function" && (T(), T = void 0);
  }
  function y() {
    if ($(), a === void 0) {
      _();
      return;
    }
    if (c.value != null && b.value != null) {
      T = a(c.value, b.value, _);
      return;
    }
  }
  function k() {
    o.value || (F.value = !1);
  }
  return se([n, s, i], _, {
    flush: "sync"
  }), se([c, b], y, {
    flush: "sync"
  }), se(o, k, {
    flush: "sync"
  }), Zl() && Ql($), {
    x: Bt(v),
    y: Bt(m),
    strategy: Bt(S),
    placement: Bt(B),
    middlewareData: Bt(h),
    isPositioned: Bt(F),
    floatingStyles: C,
    update: _
  };
}
const ri = /* @__PURE__ */ new Set([
  "background",
  "cite",
  "href",
  "itemtype",
  "longdesc",
  "poster",
  "src",
  "xlink:href"
]), ui = /^aria-[\w-]*$/i, di = /^(?:(?:https?|mailto|ftp|tel|file|sms):|[^#&/:?]*(?:[#/?]|$))/i, ci = /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[\d+/a-z]+=*$/i, fi = (e, t) => {
  const l = e.nodeName.toLowerCase();
  return t.includes(l) ? ri.has(l) ? !!(di.test(e.nodeValue || "") || ci.test(e.nodeValue || "")) : !0 : t.filter((a) => a instanceof RegExp).some((a) => a.test(l));
}, Ct = {
  // Global attributes allowed on any supplied element below.
  "*": ["class", "dir", "id", "lang", "role", ui],
  a: ["target", "href", "title", "rel"],
  area: [],
  b: [],
  br: [],
  col: [],
  code: [],
  div: [],
  em: [],
  hr: [],
  h1: [],
  h2: [],
  h3: [],
  h4: [],
  h5: [],
  h6: [],
  i: [],
  img: ["src", "srcset", "alt", "title", "width", "height"],
  li: [],
  ol: [],
  p: [],
  pre: [],
  s: [],
  small: [],
  span: [],
  sub: [],
  sup: [],
  strong: [],
  u: [],
  ul: []
}, kt = (e, t, l) => {
  if (!e.length)
    return e;
  if (l && typeof l == "function")
    return l(e);
  const o = new window.DOMParser().parseFromString(e, "text/html"), n = o.body.querySelectorAll("*");
  for (const s of n) {
    const i = s.nodeName.toLowerCase();
    if (!Object.keys(t).includes(i)) {
      s.remove();
      continue;
    }
    const r = s.attributes, c = [...t["*"] || [], ...t[i] || []];
    for (const b of r)
      fi(b, c) || s.removeAttribute(b.nodeName);
  }
  return o.body.innerHTML;
};
function Ho(e, t) {
  var l;
  const a = Na();
  return Ht(() => {
    a.value = e();
  }, {
    ...t,
    flush: (l = t == null ? void 0 : t.flush) != null ? l : "sync"
  }), Fe(a);
}
function yt(e) {
  return Zl() ? (Ql(e), !0) : !1;
}
function vi(e) {
  let t = !1, l;
  const a = eo(!0);
  return (...o) => (t || (l = a.run(() => e(...o)), t = !0), l);
}
function pi(e) {
  let t = 0, l, a;
  const o = () => {
    t -= 1, a && t <= 0 && (a.stop(), l = void 0, a = void 0);
  };
  return (...n) => (t += 1, l || (a = eo(!0), l = a.run(() => e(...n))), yt(o), l);
}
function Me(e) {
  return typeof e == "function" ? e() : w(e);
}
const oa = typeof window < "u" && typeof document < "u", mi = (e) => typeof e < "u", gi = Object.prototype.toString, yi = (e) => gi.call(e) === "[object Object]", ct = () => {
}, $a = /* @__PURE__ */ bi();
function bi() {
  var e;
  return oa && ((e = window == null ? void 0 : window.navigator) == null ? void 0 : e.userAgent) && /* @__PURE__ */ /iP(ad|hone|od)/.test(window.navigator.userAgent);
}
function xo(e, t) {
  function l(...a) {
    return new Promise((o, n) => {
      Promise.resolve(e(() => t.apply(this, a), { fn: t, thisArg: this, args: a })).then(o).catch(n);
    });
  }
  return l;
}
const Ro = (e) => e();
function hi(e, t = {}) {
  let l, a, o = ct;
  const n = (i) => {
    clearTimeout(i), o(), o = ct;
  };
  return (i) => {
    const r = Me(e), c = Me(t.maxWait);
    return l && n(l), r <= 0 || c !== void 0 && c <= 0 ? (a && (n(a), a = null), Promise.resolve(i())) : new Promise((b, v) => {
      o = t.rejectOnCancel ? v : b, c && !a && (a = setTimeout(() => {
        l && n(l), a = null, b(i());
      }, c)), l = setTimeout(() => {
        a && n(a), a = null, b(i());
      }, r);
    });
  };
}
function Bi(e = Ro) {
  const t = x(!0);
  function l() {
    t.value = !1;
  }
  function a() {
    t.value = !0;
  }
  const o = (...n) => {
    t.value && e(...n);
  };
  return { isActive: Fe(t), pause: l, resume: a, eventFilter: o };
}
function Mo(...e) {
  if (e.length !== 1)
    return be(...e);
  const t = e[0];
  return typeof t == "function" ? Fe(Hn(() => ({ get: t, set: ct }))) : x(t);
}
function Si(e, t = 200, l = {}) {
  return xo(
    hi(t, l),
    e
  );
}
function wi(e, t, l = {}) {
  const {
    eventFilter: a = Ro,
    ...o
  } = l;
  return se(
    e,
    xo(
      a,
      t
    ),
    o
  );
}
function Ci(e, t, l = {}) {
  const {
    eventFilter: a,
    ...o
  } = l, { eventFilter: n, pause: s, resume: i, isActive: r } = Bi(a);
  return { stop: wi(
    e,
    t,
    {
      ...o,
      eventFilter: n
    }
  ), pause: s, resume: i, isActive: r };
}
function ki(e, t = !0) {
  Ot() ? je(e) : t ? e() : Ce(e);
}
function Do(e, t = 1e3, l = {}) {
  const {
    immediate: a = !0,
    immediateCallback: o = !1
  } = l;
  let n = null;
  const s = x(!1);
  function i() {
    n && (clearInterval(n), n = null);
  }
  function r() {
    s.value = !1, i();
  }
  function c() {
    const b = Me(t);
    b <= 0 || (s.value = !0, o && e(), i(), n = setInterval(e, b));
  }
  if (a && oa && c(), Ia(t) || typeof t == "function") {
    const b = se(t, () => {
      s.value && oa && c();
    });
    yt(b);
  }
  return yt(r), {
    isActive: s,
    pause: r,
    resume: c
  };
}
function we(e, t = {}) {
  const {
    method: l = "parseFloat",
    radix: a,
    nanToZero: o
  } = t;
  return u(() => {
    let n = Me(e);
    return typeof n == "string" && (n = Number[l](n, a)), o && Number.isNaN(n) && (n = 0), n;
  });
}
function et(e) {
  var t;
  const l = Me(e);
  return (t = l == null ? void 0 : l.$el) != null ? t : l;
}
const Ge = oa ? window : void 0;
function Se(...e) {
  let t, l, a, o;
  if (typeof e[0] == "string" || Array.isArray(e[0]) ? ([l, a, o] = e, t = Ge) : [t, l, a, o] = e, !t)
    return ct;
  Array.isArray(l) || (l = [l]), Array.isArray(a) || (a = [a]);
  const n = [], s = () => {
    n.forEach((b) => b()), n.length = 0;
  }, i = (b, v, m, S) => (b.addEventListener(v, m, S), () => b.removeEventListener(v, m, S)), r = se(
    () => [et(t), Me(o)],
    ([b, v]) => {
      if (s(), !b)
        return;
      const m = yi(v) ? { ...v } : v;
      n.push(
        ...l.flatMap((S) => a.map((B) => i(b, S, B, m)))
      );
    },
    { immediate: !0, flush: "post" }
  ), c = () => {
    r(), s();
  };
  return yt(c), c;
}
let _l = !1;
function jo(e, t, l = {}) {
  const { window: a = Ge, ignore: o = [], capture: n = !0, detectIframe: s = !1 } = l;
  if (!a)
    return;
  $a && !_l && (_l = !0, Array.from(a.document.body.children).forEach((m) => m.addEventListener("click", ct)), a.document.documentElement.addEventListener("click", ct));
  let i = !0;
  const r = (m) => o.some((S) => {
    if (typeof S == "string")
      return Array.from(a.document.querySelectorAll(S)).some((B) => B === m.target || m.composedPath().includes(B));
    {
      const B = et(S);
      return B && (m.target === B || m.composedPath().includes(B));
    }
  }), b = [
    Se(a, "click", (m) => {
      const S = et(e);
      if (!(!S || S === m.target || m.composedPath().includes(S))) {
        if (m.detail === 0 && (i = !r(m)), !i) {
          i = !0;
          return;
        }
        t(m);
      }
    }, { passive: !0, capture: n }),
    Se(a, "pointerdown", (m) => {
      const S = et(e);
      S && (i = !m.composedPath().includes(S) && !r(m));
    }, { passive: !0 }),
    s && Se(a, "blur", (m) => {
      setTimeout(() => {
        var S;
        const B = et(e);
        ((S = a.document.activeElement) == null ? void 0 : S.tagName) === "IFRAME" && !(B != null && B.contains(a.document.activeElement)) && t(m);
      }, 0);
    })
  ].filter(Boolean);
  return () => b.forEach((m) => m());
}
function $i(e) {
  return typeof e == "function" ? e : typeof e == "string" ? (t) => t.key === e : Array.isArray(e) ? (t) => e.includes(t.key) : () => !0;
}
function Vt(...e) {
  let t, l, a = {};
  e.length === 3 ? (t = e[0], l = e[1], a = e[2]) : e.length === 2 ? typeof e[1] == "object" ? (t = !0, l = e[0], a = e[1]) : (t = e[0], l = e[1]) : (t = !0, l = e[0]);
  const {
    target: o = Ge,
    eventName: n = "keydown",
    passive: s = !1,
    dedupe: i = !1
  } = a, r = $i(t);
  return Se(o, n, (b) => {
    b.repeat && Me(i) || r(b) && l(b);
  }, s);
}
function _i() {
  const e = x(!1);
  return Ot() && je(() => {
    e.value = !0;
  }), e;
}
function Ti(e) {
  const t = _i();
  return u(() => (t.value, !!e()));
}
function Ai(e, t = {}) {
  const { window: l = Ge } = t, a = Ti(() => l && "matchMedia" in l && typeof l.matchMedia == "function");
  let o;
  const n = x(!1), s = (c) => {
    n.value = c.matches;
  }, i = () => {
    o && ("removeEventListener" in o ? o.removeEventListener("change", s) : o.removeListener(s));
  }, r = Ht(() => {
    a.value && (i(), o = l.matchMedia(Me(e)), "addEventListener" in o ? o.addEventListener("change", s) : o.addListener(s), n.value = o.matches);
  });
  return yt(() => {
    r(), i(), o = void 0;
  }), n;
}
function Vi(e) {
  return JSON.parse(JSON.stringify(e));
}
const Wt = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {}, Ut = "__vueuse_ssr_handlers__", Oi = /* @__PURE__ */ Ei();
function Ei() {
  return Ut in Wt || (Wt[Ut] = Wt[Ut] || {}), Wt[Ut];
}
function el(e, t) {
  return Oi[e] || t;
}
function Fi(e) {
  return e == null ? "any" : e instanceof Set ? "set" : e instanceof Map ? "map" : e instanceof Date ? "date" : typeof e == "boolean" ? "boolean" : typeof e == "string" ? "string" : typeof e == "object" ? "object" : Number.isNaN(e) ? "any" : "number";
}
const Li = {
  boolean: {
    read: (e) => e === "true",
    write: (e) => String(e)
  },
  object: {
    read: (e) => JSON.parse(e),
    write: (e) => JSON.stringify(e)
  },
  number: {
    read: (e) => Number.parseFloat(e),
    write: (e) => String(e)
  },
  any: {
    read: (e) => e,
    write: (e) => String(e)
  },
  string: {
    read: (e) => e,
    write: (e) => String(e)
  },
  map: {
    read: (e) => new Map(JSON.parse(e)),
    write: (e) => JSON.stringify(Array.from(e.entries()))
  },
  set: {
    read: (e) => new Set(JSON.parse(e)),
    write: (e) => JSON.stringify(Array.from(e))
  },
  date: {
    read: (e) => new Date(e),
    write: (e) => e.toISOString()
  }
}, Tl = "vueuse-storage";
function Pi(e, t, l, a = {}) {
  var o;
  const {
    flush: n = "pre",
    deep: s = !0,
    listenToStorageChanges: i = !0,
    writeDefaults: r = !0,
    mergeDefaults: c = !1,
    shallow: b,
    window: v = Ge,
    eventFilter: m,
    onError: S = (A) => {
      console.error(A);
    }
  } = a, B = (b ? Na : x)(t);
  if (!l)
    try {
      l = el("getDefaultStorage", () => {
        var A;
        return (A = Ge) == null ? void 0 : A.localStorage;
      })();
    } catch (A) {
      S(A);
    }
  if (!l)
    return B;
  const h = Me(t), F = Fi(h), C = (o = a.serializer) != null ? o : Li[F], { pause: T, resume: _ } = Ci(
    B,
    () => $(B.value),
    { flush: n, deep: s, eventFilter: m }
  );
  return v && i && (Se(v, "storage", f), Se(v, Tl, k)), f(), B;
  function $(A) {
    try {
      if (A == null)
        l.removeItem(e);
      else {
        const P = C.write(A), p = l.getItem(e);
        p !== P && (l.setItem(e, P), v && v.dispatchEvent(new CustomEvent(Tl, {
          detail: {
            key: e,
            oldValue: p,
            newValue: P,
            storageArea: l
          }
        })));
      }
    } catch (P) {
      S(P);
    }
  }
  function y(A) {
    const P = A ? A.newValue : l.getItem(e);
    if (P == null)
      return r && h !== null && l.setItem(e, C.write(h)), h;
    if (!A && c) {
      const p = C.read(P);
      return typeof c == "function" ? c(p, h) : F === "object" && !Array.isArray(p) ? { ...h, ...p } : p;
    } else
      return typeof P != "string" ? P : C.read(P);
  }
  function k(A) {
    f(A.detail);
  }
  function f(A) {
    if (!(A && A.storageArea !== l)) {
      if (A && A.key == null) {
        B.value = h;
        return;
      }
      if (!(A && A.key !== e)) {
        T();
        try {
          (A == null ? void 0 : A.newValue) !== C.write(B.value) && (B.value = y(A));
        } catch (P) {
          S(P);
        } finally {
          A ? Ce(_) : _();
        }
      }
    }
  }
}
function Ni(e) {
  return Ai("(prefers-color-scheme: dark)", e);
}
function Ii(e = {}) {
  const {
    selector: t = "html",
    attribute: l = "class",
    initialValue: a = "auto",
    window: o = Ge,
    storage: n,
    storageKey: s = "vueuse-color-scheme",
    listenToStorageChanges: i = !0,
    storageRef: r,
    emitAuto: c,
    disableTransition: b = !0
  } = e, v = {
    auto: "",
    light: "light",
    dark: "dark",
    ...e.modes || {}
  }, m = Ni({ window: o }), S = u(() => m.value ? "dark" : "light"), B = r || (s == null ? Mo(a) : Pi(s, a, n, { window: o, listenToStorageChanges: i })), h = u(
    () => B.value === "auto" ? S.value : B.value
  ), F = el(
    "updateHTMLAttrs",
    ($, y, k) => {
      const f = typeof $ == "string" ? o == null ? void 0 : o.document.querySelector($) : et($);
      if (!f)
        return;
      let A;
      if (b) {
        A = o.document.createElement("style");
        const P = "*,*::before,*::after{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}";
        A.appendChild(document.createTextNode(P)), o.document.head.appendChild(A);
      }
      if (y === "class") {
        const P = k.split(/\s/g);
        Object.values(v).flatMap((p) => (p || "").split(/\s/g)).filter(Boolean).forEach((p) => {
          P.includes(p) ? f.classList.add(p) : f.classList.remove(p);
        });
      } else
        f.setAttribute(y, k);
      b && (o.getComputedStyle(A).opacity, document.head.removeChild(A));
    }
  );
  function C($) {
    var y;
    F(t, l, (y = v[$]) != null ? y : $);
  }
  function T($) {
    e.onChanged ? e.onChanged($, C) : C($);
  }
  se(h, T, { flush: "post", immediate: !0 }), ki(() => T(h.value));
  const _ = u({
    get() {
      return c ? B.value : h.value;
    },
    set($) {
      B.value = $;
    }
  });
  try {
    return Object.assign(_, { store: B, system: S, state: h });
  } catch {
    return _;
  }
}
function qo(e, t = {}) {
  const {
    delayEnter: l = 0,
    delayLeave: a = 0,
    window: o = Ge
  } = t, n = x(!1);
  let s;
  const i = (r) => {
    const c = r ? l : a;
    s && (clearTimeout(s), s = void 0), c ? s = setTimeout(() => n.value = r, c) : n.value = r;
  };
  return o && (Se(e, "mouseenter", () => i(!0), { passive: !0 }), Se(e, "mouseleave", () => i(!1), { passive: !0 })), n;
}
function Ne(e, t = {}) {
  const { initialValue: l = !1, focusVisible: a = !1 } = t, o = x(!1), n = u(() => et(e));
  Se(n, "focus", (i) => {
    var r, c;
    (!a || (c = (r = i.target).matches) != null && c.call(r, ":focus-visible")) && (o.value = !0);
  }), Se(n, "blur", () => o.value = !1);
  const s = u({
    get: () => o.value,
    set(i) {
      var r, c;
      !i && o.value ? (r = n.value) == null || r.blur() : i && !o.value && ((c = n.value) == null || c.focus());
    }
  });
  return se(
    n,
    () => {
      s.value = l;
    },
    { immediate: !0, flush: "post" }
  ), { focused: s };
}
function ga(e) {
  return typeof Window < "u" && e instanceof Window ? e.document.documentElement : typeof Document < "u" && e instanceof Document ? e.documentElement : e;
}
const zi = {
  page: (e) => [e.pageX, e.pageY],
  client: (e) => [e.clientX, e.clientY],
  screen: (e) => [e.screenX, e.screenY],
  movement: (e) => e instanceof Touch ? null : [e.movementX, e.movementY]
};
function Hi(e = {}) {
  const {
    type: t = "page",
    touch: l = !0,
    resetOnTouchEnds: a = !1,
    initialValue: o = { x: 0, y: 0 },
    window: n = Ge,
    target: s = n,
    scroll: i = !0,
    eventFilter: r
  } = e;
  let c = null;
  const b = x(o.x), v = x(o.y), m = x(null), S = typeof t == "function" ? t : zi[t], B = (y) => {
    const k = S(y);
    c = y, k && ([b.value, v.value] = k, m.value = "mouse");
  }, h = (y) => {
    if (y.touches.length > 0) {
      const k = S(y.touches[0]);
      k && ([b.value, v.value] = k, m.value = "touch");
    }
  }, F = () => {
    if (!c || !n)
      return;
    const y = S(c);
    c instanceof MouseEvent && y && (b.value = y[0] + n.scrollX, v.value = y[1] + n.scrollY);
  }, C = () => {
    b.value = o.x, v.value = o.y;
  }, T = r ? (y) => r(() => B(y), {}) : (y) => B(y), _ = r ? (y) => r(() => h(y), {}) : (y) => h(y), $ = r ? () => r(() => F(), {}) : () => F();
  if (s) {
    const y = { passive: !0 };
    Se(s, ["mousemove", "dragover"], T, y), l && t !== "movement" && (Se(s, ["touchstart", "touchmove"], _, y), a && Se(s, "touchend", C, y)), i && t === "page" && Se(n, "scroll", $, { passive: !0 });
  }
  return {
    x: b,
    y: v,
    sourceType: m
  };
}
function Al(e, t = {}) {
  const {
    handleOutside: l = !0,
    window: a = Ge
  } = t, { x: o, y: n, sourceType: s } = Hi(t), i = x(e ?? (a == null ? void 0 : a.document.body)), r = x(0), c = x(0), b = x(0), v = x(0), m = x(0), S = x(0), B = x(!0);
  let h = () => {
  };
  return a && (h = se(
    [i, o, n],
    () => {
      const F = et(i);
      if (!F)
        return;
      const {
        left: C,
        top: T,
        width: _,
        height: $
      } = F.getBoundingClientRect();
      b.value = C + a.pageXOffset, v.value = T + a.pageYOffset, m.value = $, S.value = _;
      const y = o.value - b.value, k = n.value - v.value;
      B.value = _ === 0 || $ === 0 || y < 0 || k < 0 || y > _ || k > $, (l || !B.value) && (r.value = y, c.value = k);
    },
    { immediate: !0 }
  ), Se(document, "mouseleave", () => {
    B.value = !0;
  })), {
    x: o,
    y: n,
    sourceType: s,
    elementX: r,
    elementY: c,
    elementPositionX: b,
    elementPositionY: v,
    elementHeight: m,
    elementWidth: S,
    isOutside: B,
    stop: h
  };
}
function Go(e) {
  const t = window.getComputedStyle(e);
  if (t.overflowX === "scroll" || t.overflowY === "scroll" || t.overflowX === "auto" && e.clientWidth < e.scrollWidth || t.overflowY === "auto" && e.clientHeight < e.scrollHeight)
    return !0;
  {
    const l = e.parentNode;
    return !l || l.tagName === "BODY" ? !1 : Go(l);
  }
}
function xi(e) {
  const t = e || window.event, l = t.target;
  return Go(l) ? !1 : t.touches.length > 1 ? !0 : (t.preventDefault && t.preventDefault(), !1);
}
function Ri(e, t = !1) {
  const l = x(t);
  let a = null, o;
  se(Mo(e), (i) => {
    const r = ga(Me(i));
    if (r) {
      const c = r;
      o = c.style.overflow, l.value && (c.style.overflow = "hidden");
    }
  }, {
    immediate: !0
  });
  const n = () => {
    const i = ga(Me(e));
    !i || l.value || ($a && (a = Se(
      i,
      "touchmove",
      (r) => {
        xi(r);
      },
      { passive: !1 }
    )), i.style.overflow = "hidden", l.value = !0);
  }, s = () => {
    const i = ga(Me(e));
    !i || !l.value || ($a && (a == null || a()), i.style.overflow = o, l.value = !1);
  };
  return yt(s), u({
    get() {
      return l.value;
    },
    set(i) {
      i ? n() : s();
    }
  });
}
function Mi(e, t = {}) {
  const {
    threshold: l = 50,
    onSwipe: a,
    onSwipeEnd: o,
    onSwipeStart: n,
    passive: s = !0,
    window: i = Ge
  } = t, r = mt({ x: 0, y: 0 }), c = mt({ x: 0, y: 0 }), b = u(() => r.x - c.x), v = u(() => r.y - c.y), { max: m, abs: S } = Math, B = u(() => m(S(b.value), S(v.value)) >= l), h = x(!1), F = u(() => B.value ? S(b.value) > S(v.value) ? b.value > 0 ? "left" : "right" : v.value > 0 ? "up" : "down" : "none"), C = (P) => [P.touches[0].clientX, P.touches[0].clientY], T = (P, p) => {
    r.x = P, r.y = p;
  }, _ = (P, p) => {
    c.x = P, c.y = p;
  };
  let $;
  const y = Di(i == null ? void 0 : i.document);
  s ? $ = y ? { passive: !0 } : { capture: !1 } : $ = y ? { passive: !1, capture: !0 } : { capture: !0 };
  const k = (P) => {
    h.value && (o == null || o(P, F.value)), h.value = !1;
  }, f = [
    Se(e, "touchstart", (P) => {
      if (P.touches.length !== 1)
        return;
      $.capture && !$.passive && P.preventDefault();
      const [p, N] = C(P);
      T(p, N), _(p, N), n == null || n(P);
    }, $),
    Se(e, "touchmove", (P) => {
      if (P.touches.length !== 1)
        return;
      const [p, N] = C(P);
      _(p, N), !h.value && B.value && (h.value = !0), h.value && (a == null || a(P));
    }, $),
    Se(e, ["touchend", "touchcancel"], k, $)
  ];
  return {
    isPassiveEventSupported: y,
    isSwiping: h,
    direction: F,
    coordsStart: r,
    coordsEnd: c,
    lengthX: b,
    lengthY: v,
    stop: () => f.forEach((P) => P())
  };
}
function Di(e) {
  if (!e)
    return !1;
  let t = !1;
  const l = {
    get passive() {
      return t = !0, !1;
    }
  };
  return e.addEventListener("x", ct, l), e.removeEventListener("x", ct), t;
}
function Be(e, t, l, a = {}) {
  var o, n, s;
  const {
    clone: i = !1,
    passive: r = !1,
    eventName: c,
    deep: b = !1,
    defaultValue: v,
    shouldEmit: m
  } = a, S = Ot(), B = l || (S == null ? void 0 : S.emit) || ((o = S == null ? void 0 : S.$emit) == null ? void 0 : o.bind(S)) || ((s = (n = S == null ? void 0 : S.proxy) == null ? void 0 : n.$emit) == null ? void 0 : s.bind(S == null ? void 0 : S.proxy));
  let h = c;
  t || (t = "modelValue"), h = h || `update:${t.toString()}`;
  const F = (_) => i ? typeof i == "function" ? i(_) : Vi(_) : _, C = () => mi(e[t]) ? F(e[t]) : v, T = (_) => {
    m ? m(_) && B(h, _) : B(h, _);
  };
  if (r) {
    const _ = C(), $ = x(_);
    let y = !1;
    return se(
      () => e[t],
      (k) => {
        y || (y = !0, $.value = F(k), Ce(() => y = !1));
      }
    ), se(
      $,
      (k) => {
        !y && (k !== e[t] || b) && T(k);
      },
      { deep: b }
    ), $;
  } else
    return u({
      get() {
        return C();
      },
      set(_) {
        T(_);
      }
    });
}
const tl = H({
  name: "ComponentOrEmpty",
  slots: Object,
  props: {
    tag: {
      type: String,
      default: "div"
    },
    to: {
      type: [String, Object],
      default: null
    },
    skip: {
      type: Boolean,
      default: !1
    }
  },
  setup(e, { slots: t, attrs: l }) {
    return () => {
      var a, o, n;
      return e.skip ? (a = t.default) == null ? void 0 : a.call(t) : e.tag === "Teleport" ? de(za, { to: e.to }, [(o = t.default) == null ? void 0 : o.call(t)]) : de(e.tag, { ...l }, [(n = t.default) == null ? void 0 : n.call(t)]);
    };
  }
}), Mt = (e) => Ho(() => {
  const t = ft(e);
  return t ? `justify-content-${t}` : "";
}), Ft = (e, t) => {
  const l = be(t), a = be(e), o = u(() => Sa(a.value)), n = u(
    () => o.value ? Ga(
      a.value,
      l.value ?? [
        "active",
        "activeClass",
        "append",
        "href",
        "rel",
        "replace",
        "routerComponentName",
        "target",
        "to",
        "variant",
        "opacity",
        "opacityHover",
        "underlineVariant",
        "underlineOffset",
        "underlineOffsetHover",
        "underlineOpacity",
        "underlineOpacityHover"
      ]
    ) : {}
  );
  return { computedLink: o, computedLinkProps: n };
};
function d(e) {
  return Ho(() => {
    const t = ft(e);
    return t == null ? t : Ra(t);
  });
}
const Wo = vi(() => {
  const e = mt([]);
  return { items: e, reset: () => {
    e.splice(0, e.length);
  } };
}), ji = (e = {}) => {
  const t = e.persist ?? !1, l = "data-bs-theme", a = "body";
  return Ii({
    attribute: l,
    selector: a,
    storageKey: t === !0 ? `bv-color-${e.attribute ?? l}-${e.selector ?? a}` : null,
    ...e
  });
}, qi = (e, t = x(1e3), l = {}) => {
  const a = Fe(be(e)), o = Fe(be(t)), n = x(!1), s = x(0), i = u(() => Math.ceil(a.value / o.value)), r = u(
    () => v.value || n.value ? Math.round(a.value - s.value * o.value) : 0
  ), { pause: c, resume: b, isActive: v } = Do(
    () => {
      s.value = s.value + 1;
    },
    t,
    l
  ), m = () => {
    n.value = !1, s.value = 0, b();
  }, S = () => {
    n.value = !1, s.value = i.value;
  };
  Ht(() => {
    s.value > i.value && (s.value = i.value), s.value === i.value && c();
  }), se([o, a], () => {
    S(), m();
  });
  const B = () => {
    v.value !== !1 && (n.value = !0, c());
  }, h = () => {
    s.value !== i.value && (n.value = !1, b());
  };
  return {
    isActive: Fe(v),
    isPaused: Fe(n),
    restart: m,
    stop: S,
    pause: B,
    resume: h,
    value: r
  };
}, bt = (e) => u(() => {
  const t = ft(e);
  return t === !0 ? "is-valid" : t === !1 ? "is-invalid" : null;
}), Uo = (e) => u(() => {
  const t = ft(e);
  return {
    "form-check": t.plain === !1 && t.button === !1,
    "form-check-inline": t.inline === !0,
    "form-switch": t.switch === !0,
    [`form-control-${t.size}`]: t.size !== void 0 && t.size !== "md" && t.button === !1
  };
}), Xo = (e) => {
  const t = be(e), l = bt(u(() => t.value.state ?? null));
  return u(() => [
    l.value,
    {
      "form-check-input": t.value.plain === !1 && t.value.button === !1,
      "btn-check": t.value.button === !0
    }
  ]);
}, Ko = (e) => u(() => {
  const t = ft(e);
  return {
    "form-check-label": t.plain === !1 && t.button === !1,
    btn: t.button === !0,
    [`btn-${t.buttonVariant}`]: t.button === !0 && t.buttonVariant !== void 0 && t.buttonVariant !== null,
    [`btn-${t.size}`]: t.button && t.size && t.size !== "md"
  };
}), Jo = (e) => u(() => {
  const t = ft(e);
  return {
    "aria-invalid": da(t.ariaInvalid, t.state),
    "aria-required": t.required === !0 ? !0 : void 0
  };
}), Yo = (e) => u(() => {
  const t = ft(e);
  return {
    "was-validated": t.validated === !0,
    "btn-group": t.buttons === !0 && t.stacked === !1,
    "btn-group-vertical": t.stacked === !0 && t.buttons === !0,
    [`btn-group-${t.size}`]: t.size !== void 0
  };
}), Zo = (e, t) => {
  const l = x(null);
  let a = null, o = !0;
  const n = Be(e, "modelValue", t), s = ke(() => e.id, "input"), i = d(() => e.autofocus), r = d(() => e.disabled), c = d(() => e.lazy), b = d(() => e.lazyFormatter), v = d(() => e.number), m = d(() => e.state), S = d(() => e.trim), B = we(u(() => e.debounce ?? 0)), h = we(u(() => e.debounceMaxWait ?? NaN)), F = u(
    () => c.value === !0 ? 0 : B.value
  ), C = u(
    () => c.value === !0 ? NaN : h.value
  ), T = Si(
    (E) => {
      n.value = E;
    },
    F,
    { maxWait: C }
  ), _ = (E, j = !1) => {
    c.value === !0 && j === !1 || T(E);
  }, { focused: $ } = Ne(l, {
    initialValue: i.value
  }), y = (E, j, X = !1) => (E = String(E), typeof e.formatter == "function" && (!b.value || X) ? (o = !1, e.formatter(E, j)) : E), k = (E) => S.value ? E.trim() : v.value ? Number.parseFloat(E) : E;
  je(() => {
    l.value && (l.value.value = n.value);
  }), xn(() => {
    Ce(() => {
      i.value && ($.value = !0);
    });
  });
  const f = u(
    () => da(e.ariaInvalid, m.value)
  ), A = (E) => {
    const { value: j } = E.target, X = y(j, E);
    if (X === !1 || E.defaultPrevented) {
      E.preventDefault();
      return;
    }
    const W = k(X);
    a = j, _(W), t("input", X);
  }, P = (E) => {
    const { value: j } = E.target, X = y(j, E);
    if (X === !1 || E.defaultPrevented) {
      E.preventDefault();
      return;
    }
    const W = k(X);
    n.value !== W && (a = j, _(X, !0)), t("change", X);
  }, p = (E) => {
    if (t("blur", E), !c.value && !b.value)
      return;
    const { value: j } = E.target, X = y(j, E, !0), W = k(X);
    n.value !== W && (a = j, _(X, !0));
  }, N = () => {
    r.value || ($.value = !0);
  }, I = () => {
    r.value || ($.value = !1);
  };
  return se(n, (E) => {
    l.value && (l.value.value = a && o ? a : E, a = null, o = !0);
  }), {
    input: l,
    computedId: s,
    computedAriaInvalid: f,
    onInput: A,
    onChange: P,
    onBlur: p,
    focus: N,
    blur: I
  };
}, wt = (e, t) => {
  if (!e)
    return e;
  if (t in e)
    return e[t];
  const l = t.split(".");
  return wt(e[l[0]], l.splice(1).join("."));
}, ya = (e, t = null, l, a) => {
  if (Object.prototype.toString.call(e) === "[object Object]") {
    const o = wt(e, a.valueField), n = wt(e, a.textField), s = wt(e, a.htmlField), i = wt(e, a.disabledField), r = e[a.optionsField] || null;
    return r !== null ? {
      label: String(wt(e, a.labelField) || n),
      options: al(r, l, a)
    } : {
      value: typeof o > "u" ? t || n : o,
      text: String(typeof n > "u" ? t : n),
      html: s,
      disabled: !!i
    };
  }
  return {
    value: t || e,
    text: String(e),
    disabled: !1
  };
}, al = (e, t, l) => Array.isArray(e) ? e.map((a) => ya(a, null, t, l)) : Object.prototype.toString.call(e) === "[object Object]" ? (console.warn(
  `[BootstrapVue warn]: ${t} - Setting prop "options" to an object is deprecated. Use the array format instead.`
), Object.keys(e).map((a) => {
  const o = e[a];
  switch (typeof o) {
    case "object":
      return ya(o.text, String(o.value), t, l);
    default:
      return ya(o, String(a), t, l);
  }
})) : [], ke = (e, t) => u(() => ft(e) || st(t)), ba = "modal-open", ll = pi(() => {
  const e = x([]), t = x([]), l = u(() => t.value.length), a = u(() => t.value[t.value.length - 1]), o = (c) => t.value.push(c), n = () => t.value.pop(), s = (c) => {
    t.value = t.value.filter((b) => b.uid !== c.uid);
  }, i = (c) => e.value.find((b) => {
    var v;
    return ((v = b.exposed) == null ? void 0 : v.id) === c;
  }) || null, r = el("updateHTMLAttrs", (c, b, v) => {
    const m = typeof c == "string" ? window == null ? void 0 : window.document.querySelector(c) : et(c);
    m && (b === "class" ? m.classList.toggle(ba, v === ba) : m.setAttribute(b, v));
  });
  return yt(() => {
    r("body", "class", "");
  }), se(l, (c) => {
    r("body", "class", c > 0 ? ba : "");
  }), { registry: e, stack: t, last: a, count: l, push: o, pop: n, remove: s, find: i };
}), Gi = (e) => {
  const { registry: t, push: l, remove: a } = ll(), o = Ot();
  if (!o || o.type.__name !== "BModal")
    throw new Error("useModalManager must only use in BModal component");
  t.value.push(o), se(
    e,
    (n, s) => {
      n ? l(o) : s && !n && a(o);
    },
    { immediate: !0 }
  );
}, Wi = (e = void 0) => {
  const { find: t } = ll(), l = Ot(), a = u(() => e ? t(e) : l ? Qo(l) : null), o = u(() => {
    var n;
    return (n = a.value) == null ? void 0 : n.proxy;
  });
  return {
    show() {
      var n, s;
      (s = (n = a.value) == null ? void 0 : n.exposed) == null || s.show();
    },
    hide(n = "") {
      var s, i;
      (i = (s = a.value) == null ? void 0 : s.exposed) == null || i.hide(n);
    },
    modal: o
  };
}, Qo = (e) => e.parent ? e.parent.type.__name === "BModal" ? e.parent : Qo(e.parent) : null, Ui = () => {
  const { last: e, stack: t } = ll();
  return {
    hide: (o = "") => {
      var n;
      e.value && ((n = e.value.exposed) == null || n.hide(o));
    },
    hideAll: (o = "") => {
      var s;
      const n = t.value.reverse();
      for (const i of n)
        (s = i.exposed) == null || s.hide(o);
    }
    // Todo: Supports listening events globally in the future
  };
}, en = (e, t) => {
  const l = Fe(be(e)), a = Fe(be(t)), o = u(() => !a.value);
  je(() => {
    const n = Ri(
      document.body,
      l.value && o.value
    );
    se([l, o], ([s, i]) => {
      n.value = s && i;
    });
  });
}, Xi = (e, t, l, a, o) => {
  if (e === void 0 || t === void 0 || l === void 0 || a === void 0)
    return t ?? [];
  const n = l;
  return t.sort((s, i) => {
    if (o !== void 0)
      return o(s, i, l, a);
    const r = (v) => typeof v == "object" ? JSON.stringify(v) : v;
    return r(s[n]) > r(i[n]) ? a ? -1 : 1 : r(i[n]) > r(s[n]) ? a ? 1 : -1 : 0;
  });
}, Ki = (e, t, l) => e.filter(
  (a) => Object.entries(a).filter((o) => {
    const [n, s] = o;
    return !s || n[0] === "_" || l && l.length > 0 && !l.includes(n) ? !1 : (typeof s == "object" ? JSON.stringify(Object.values(s)) : s.toString()).toLowerCase().includes(t.toLowerCase());
  }).length > 0
), Ji = (e, t, l, a, o) => {
  let n = e.value;
  const s = "isFilterableTable" in l && l.isFilterableTable.value === !0 && t.filter;
  (s && !a.value || s && a.value && l.noProviderFilteringBoolean.value) && (n = Ki(n, t.filter, t.filterable));
  const i = "isSortable" in l && l.isSortable.value === !0;
  return (i && !a.value || i && a.value && l.noProviderSortingBoolean.value) && (n = Xi(
    t.fields,
    n,
    o == null ? void 0 : o.value,
    l.sortDescBoolean.value,
    t.sortCompare
  )), n;
}, Yi = (e, t, l, a) => {
  const o = x(), n = x(e.items ?? []), s = x([0, n.value.length]), i = u(() => {
    const v = t.requireItemsMapping.value ? Ji(n, e, t, l, a) : l.value ? n.value : e.items ?? [];
    if (e.perPage !== void 0) {
      const m = ((e.currentPage ?? 0) - 1) * e.perPage, S = m + e.perPage > v.length ? v.length : m + e.perPage;
      s.value = [m, S];
    }
    return v;
  }), r = u(() => e.perPage === void 0 || l.value && !t.noProviderPagingBoolean.value ? i.value : i.value.slice(s.value[0], s.value[1]));
  return {
    internalItems: n,
    computedItems: i,
    updateInternalItems: async (v) => {
      try {
        return n.value = v, n.value;
      } catch {
        return;
      }
    },
    filteredHandler: o,
    notifyFilteredItems: () => {
      o.value && o.value(i.value);
    },
    computedDisplayItems: r
  };
}, Zi = ["id"], Qi = ["innerHTML"], er = ["innerHTML"], ol = /* @__PURE__ */ H({
  inheritAttrs: !1,
  __name: "BPopover",
  props: {
    modelValue: { type: [String, Boolean], default: !1 },
    container: { default: void 0 },
    target: { type: [Function, String, null], default: null },
    reference: { type: [Function, String, null], default: null },
    content: { default: void 0 },
    id: { default: void 0 },
    title: { default: void 0 },
    delay: { default: () => ({ show: 100, hide: 300 }) },
    click: { type: [String, Boolean], default: !1 },
    manual: { type: [String, Boolean], default: !1 },
    variant: { default: null },
    offset: { default: null },
    customClass: { default: "" },
    placement: { default: "top" },
    strategy: { default: "absolute" },
    floatingMiddleware: { default: void 0 },
    noFlip: { type: [String, Boolean], default: !1 },
    noShift: { type: [String, Boolean], default: !1 },
    noFade: { type: [String, Boolean], default: !1 },
    noAutoClose: { type: [String, Boolean], default: !1 },
    hide: { type: [String, Boolean], default: !0 },
    realtime: { type: [String, Boolean], default: !1 },
    inline: { type: [String, Boolean], default: !1 },
    tooltip: { type: [String, Boolean], default: !1 },
    html: { type: [String, Boolean], default: !1 },
    noninteractive: { type: [String, Boolean], default: !1 }
  },
  emits: ["show", "shown", "hide", "hidden", "hide-prevented", "show-prevented", "update:modelValue"],
  setup(e, { expose: t, emit: l }) {
    const a = e, o = d(() => a.modelValue), n = x(o.value), s = x(o.value);
    Ht(() => {
      l("update:modelValue", n.value);
    }), se(o, () => {
      o.value !== n.value && (o.value ? R() : G(new Event("update:modelValue")));
    });
    const i = ke(() => a.id, "popover"), r = d(() => a.click), c = d(() => a.manual), b = d(() => a.noShift), v = d(() => a.noFlip), m = d(() => a.noFade), S = d(() => a.noAutoClose), B = d(() => a.hide), h = d(() => a.realtime), F = d(() => a.inline), C = d(() => a.tooltip), T = d(() => a.noninteractive), _ = d(() => a.html), $ = x(!1), y = x(null), k = x(null), f = x(null), A = x(null), P = x(null), p = (U) => {
      if (typeof U == "string" || U instanceof HTMLElement)
        return U;
      if (typeof U == "function")
        return U().$el ? U().$el : U();
      if (typeof U < "u")
        return U.$el;
    }, N = (U) => {
      if (U) {
        if (typeof U == "string") {
          const ne = document.getElementById(U);
          return ne || void 0;
        }
        return U;
      }
    }, I = u(
      () => a.title ? kt(a.title, Ct) : ""
    ), E = u(
      () => a.content ? kt(a.content, Ct) : ""
    ), j = u(() => a.placement.startsWith("auto")), X = we(u(() => a.offset ?? NaN)), W = u(() => {
      if (a.floatingMiddleware !== void 0)
        return a.floatingMiddleware;
      const U = a.offset !== null ? X.value : C.value ? 0 : 10, ne = [_o(U)];
      return v.value === !1 && !j.value && ne.push(ko()), j.value && ne.push(
        Hs({
          alignment: a.placement.split("-")[1] || void 0
        })
      ), b.value === !1 && ne.push(To()), B.value === !0 && ne.push(xs({ padding: 10 })), F.value === !0 && ne.push(Ms()), ne.push(ii({ element: f, padding: 10 })), ne;
    }), fe = u(
      () => j.value ? void 0 : a.placement
    ), { floatingStyles: Q, middlewareData: pe, placement: ee, update: re } = zo(k, y, {
      placement: fe,
      middleware: W,
      strategy: Fe(be(a, "strategy")),
      whileElementsMounted: (...U) => No(...U, { animationFrame: h.value })
    }), ge = x({ position: "absolute" });
    se(pe, () => {
      var U;
      if (B.value === !0 && ((U = pe.value.hide) != null && U.referenceHidden ? $.value = !0 : $.value = !1), pe.value.arrow) {
        const { x: ne, y: Le } = pe.value.arrow;
        ge.value = {
          position: "absolute",
          top: Le ? `${Le}px` : "",
          left: ne ? `${ne}px` : ""
        };
      }
    });
    const q = u(() => {
      const U = C.value ? "tooltip" : "popover";
      return [
        U,
        `b-${U}`,
        {
          [`b-${U}-${a.variant}`]: a.variant !== null,
          show: n.value && !$.value,
          "pe-none": !n.value,
          fade: !m.value,
          "d-none": !n.value && m.value,
          [`${a.customClass}`]: a.customClass !== void 0,
          [`bs-${U}-${ar(ee.value)}`]: ee.value !== void 0
        }
      ];
    }), { isOutside: ae } = Al(y), { isOutside: Z } = Al(A), ue = (U) => {
      const ne = U ?? new Event("click");
      n.value ? G(ne) : R();
    }, oe = (U, ne = {}) => new Et(U, {
      cancelable: !1,
      target: y.value || null,
      relatedTarget: null,
      trigger: null,
      ...ne,
      componentId: i.value
    });
    let L;
    const R = () => {
      const U = oe("show", { cancelable: !0 });
      if (l("show", U), U.defaultPrevented) {
        l("show-prevented");
        return;
      }
      s.value = !0, Ce(() => {
        var ne;
        re(), L = setTimeout(
          () => {
            re(), n.value = !0, Ce(() => {
              l("shown", oe("shown"));
            });
          },
          typeof a.delay == "number" ? a.delay : ((ne = a.delay) == null ? void 0 : ne.show) || 0
        );
      });
    }, G = (U) => {
      var nt;
      const ne = oe("hide", { cancelable: !0 });
      if (l("hide", ne), ne.defaultPrevented) {
        l("hide-prevented");
        return;
      }
      L && (clearTimeout(L), L = void 0);
      const Le = typeof a.delay == "number" ? a.delay : ((nt = a.delay) == null ? void 0 : nt.hide) || 100;
      setTimeout(() => {
        var Ue, Dt;
        (U == null ? void 0 : U.type) === "click" || (U == null ? void 0 : U.type) === "update:modelValue" && c.value || !T.value && ae.value && Z.value && !((Ue = y.value) != null && Ue.contains(document == null ? void 0 : document.activeElement)) && !((Dt = A.value) != null && Dt.contains(document == null ? void 0 : document.activeElement)) || T.value && Z.value ? (n.value = !1, Ce(() => {
          setTimeout(
            () => {
              s.value = !1;
            },
            y.value ? Ba(y.value) : 150
          ), l("hidden", oe("hidden"));
        })) : setTimeout(() => {
          G(U);
        }, Le);
      }, Le);
    };
    t({
      hideFn: G,
      show: R,
      toggle: ue
    });
    const ce = () => {
      var U;
      if (a.target) {
        const ne = N(p(a.target));
        ne ? A.value = ne : console.warn("Target element not found", a.target);
      } else
        A.value = (U = P.value) == null ? void 0 : U.nextElementSibling;
      if (a.reference) {
        const ne = N(p(a.reference));
        ne ? k.value = ne : console.warn("Reference element not found", a.reference);
      } else
        k.value = A.value;
      !A.value || c.value || ja && (r.value && A.value.addEventListener("click", ue), !r.value && A.value.addEventListener("pointerenter", R), !r.value && A.value.addEventListener("pointerleave", G), !r.value && A.value.addEventListener("focus", R), !r.value && A.value.addEventListener("blur", G));
    }, $e = () => {
      A.value && (A.value.removeEventListener("click", ue), A.value.removeEventListener("pointerenter", R), A.value.removeEventListener("pointerleave", G), A.value.removeEventListener("focus", R), A.value.removeEventListener("blur", G));
    };
    return jo(
      y,
      () => {
        n.value && r.value && !S.value && !c.value && G(new Event("clickOutside"));
      },
      { ignore: [A] }
    ), se([() => a.click, () => a.target, () => a.reference], () => {
      $e(), ce();
    }), je(ce), to($e), (U, ne) => (g(), O(ve, null, [
      Y("span", {
        ref_key: "placeholder",
        ref: P
      }, null, 512),
      V(U.$slots, "target", {
        show: R,
        hide: G,
        toggle: ue,
        showState: n.value
      }),
      ye(tl, {
        tag: "Teleport",
        to: U.container,
        skip: !U.container
      }, {
        default: D(() => [
          s.value ? (g(), O("div", te({
            key: 0,
            id: U.id
          }, U.$attrs, {
            ref_key: "element",
            ref: y,
            class: q.value,
            role: "tooltip",
            tabindex: "-1",
            style: w(Q)
          }), [
            Y("div", {
              ref_key: "arrow",
              ref: f,
              class: z(`${w(C) ? "tooltip" : "popover"}-arrow`),
              style: Re(ge.value),
              "data-popper-arrow": ""
            }, null, 6),
            U.title || U.$slots.title ? (g(), O(ve, { key: 0 }, [
              w(_) ? (g(), O("div", {
                key: 1,
                class: z(w(C) ? "tooltip-inner" : "popover-header"),
                innerHTML: I.value
              }, null, 10, Qi)) : (g(), O("div", {
                key: 0,
                class: z(w(C) ? "tooltip-inner" : "popover-header")
              }, [
                V(U.$slots, "title", {}, () => [
                  ie(K(U.title), 1)
                ])
              ], 2))
            ], 64)) : J("", !0),
            w(C) && !U.$slots.title && !U.title || !w(C) ? (g(), O(ve, { key: 1 }, [
              w(_) ? (g(), O("div", {
                key: 1,
                class: z(w(C) ? "tooltip-inner" : "popover-body"),
                innerHTML: E.value
              }, null, 10, er)) : (g(), O("div", {
                key: 0,
                class: z(w(C) ? "tooltip-inner" : "popover-body")
              }, [
                V(U.$slots, "default", {}, () => [
                  ie(K(U.content), 1)
                ])
              ], 2))
            ], 64)) : J("", !0)
          ], 16, Zi)) : J("", !0)
        ]),
        _: 3
      }, 8, ["to", "skip"])
    ], 64));
  }
}), tr = ({
  top: e,
  end: t,
  start: l,
  alignCenter: a,
  alignEnd: o
}) => {
  const n = e ? "top" : l ? "left" : t ? "right" : "bottom", s = o ? "end" : a ? null : "start";
  return `${n}${s ? `-${s}` : ""}`;
}, ar = (e) => {
  const [t] = e.split("-");
  switch (t) {
    case "left":
      return "start";
    case "right":
      return "end";
    default:
      return t;
  }
}, zt = (e) => typeof e != "object" || e.active !== !1, na = (e, t) => {
  if (!zt(e))
    return {};
  const a = typeof e > "u" || typeof e == "object" && !e.title && !e.content, o = t.getAttribute("title") || t.getAttribute("data-original-title");
  return a ? o ? (t.removeAttribute("title"), t.setAttribute("data-original-title", o), {
    content: kt(o, Ct)
  }) : {} : typeof e == "string" ? {
    content: kt(e, Ct)
  } : {
    title: e != null && e.title ? kt(e == null ? void 0 : e.title, Ct) : void 0,
    content: e != null && e.content ? kt(e == null ? void 0 : e.content, Ct) : void 0
  };
}, _t = (e, t) => ({
  target: () => t,
  modelValue: e.modifiers.show,
  inline: e.modifiers.inline,
  click: e.modifiers.click,
  realtime: e.modifiers.realtime,
  placement: e.modifiers.left ? "left" : e.modifiers.right ? "right" : e.modifiers.bottom ? "bottom" : e.modifiers.top ? "top" : void 0,
  html: !0,
  ...typeof e.value == "object" ? e.value : {},
  title: null,
  content: null
}), sa = (e, t) => {
  var a;
  const l = document.createElement("span");
  t.modifiers.body ? document.body.appendChild(l) : t.modifiers.child ? e.appendChild(l) : (a = e.parentNode) == null || a.insertBefore(l, e.nextSibling), e.$__app = Rn({ render: () => {
    var o;
    return de(ol, { ...(o = e.$__state) == null ? void 0 : o.value });
  } }), e.$__app.mount(l), e.$__element = l;
}, tn = (e) => {
  var l;
  const t = e.$__element;
  (l = e.$__app) == null || l.unmount(), delete e.$__app, delete e.$__state, setTimeout(() => {
    t == null || t.remove();
  }, 0), delete e.$__element;
}, Vl = (e, t) => {
  const { all: l, ...a } = e, o = {};
  l && t.forEach((s) => {
    o[s] = l;
  });
  const n = { ...o, ...a };
  return Object.entries(n).filter(([s, i]) => !!i && t.includes(s)).map(([s]) => s);
}, lr = ["id"], or = /* @__PURE__ */ H({
  __name: "BAccordion",
  props: {
    flush: { type: [String, Boolean], default: !1 },
    free: { type: [String, Boolean], default: !1 },
    id: { default: void 0 },
    modelValue: { default: void 0 }
  },
  emits: ["update:modelValue"],
  setup(e, { emit: t }) {
    const l = e, a = Be(l, "modelValue", t, { passive: !0 }), o = ke(() => l.id, "accordion"), n = d(() => l.flush), s = d(() => l.free), i = u(() => ({
      "accordion-flush": n.value
    }));
    return We(yo, {
      openItem: Fe(a),
      free: s,
      setOpenItem: (r) => {
        a.value = r;
      }
    }), (r, c) => (g(), O("div", {
      id: w(o),
      class: z(["accordion", i.value])
    }, [
      V(r.$slots, "default")
    ], 10, lr));
  }
}), an = /* @__PURE__ */ H({
  inheritAttrs: !1,
  __name: "BCollapse",
  props: {
    id: { default: void 0 },
    modelValue: { type: [String, Boolean], default: !1 },
    tag: { default: "div" },
    toggle: { type: [String, Boolean], default: !1 },
    horizontal: { type: [String, Boolean], default: !1 },
    visible: { type: [String, Boolean], default: !1 },
    isNav: { type: [String, Boolean], default: !1 }
  },
  emits: ["show", "shown", "hide", "hidden", "hide-prevented", "show-prevented", "update:modelValue"],
  setup(e, { expose: t, emit: l }) {
    const a = e, o = (y, k = {}) => new Et(y, {
      cancelable: !1,
      target: m.value || null,
      relatedTarget: null,
      trigger: null,
      ...k,
      componentId: v.value
    }), n = Be(a, "modelValue", l, { passive: !0 }), s = d(n), i = d(() => a.toggle), r = d(() => a.horizontal), c = d(() => a.isNav), b = d(() => a.visible), v = ke(() => a.id, "collapse"), m = x(null), S = x(!1), B = x(s.value), h = u(() => ({
      show: B.value,
      "navbar-collapse": c.value,
      collapsing: S.value,
      closing: B.value && !s.value,
      "collapse-horizontal": r.value
    })), F = () => {
      n.value = !1;
    }, C = () => {
      n.value = !0;
    }, T = () => {
      n.value = !s.value;
    }, _ = () => {
      B.value = !0, S.value = !0;
      const y = o("show", { cancelable: !0 });
      if (l("show", y), y.defaultPrevented) {
        l("show-prevented");
        return;
      }
      Ce(() => {
        m.value !== null && (r.value ? m.value.style.width = `${m.value.scrollWidth}px` : m.value.style.height = `${m.value.scrollHeight}px`, setTimeout(() => {
          S.value = !1, l("shown"), m.value !== null && (m.value.style.height = "", m.value.style.width = "");
        }, Ba(m.value)));
      });
    }, $ = () => {
      const y = o("hide", { cancelable: !0 });
      if (l("hide", y), y.defaultPrevented) {
        l("hide-prevented");
        return;
      }
      m.value !== null && (r.value ? m.value.style.width = `${m.value.scrollWidth}px` : m.value.style.height = `${m.value.scrollHeight}px`, m.value.offsetHeight, S.value = !0, Ce(() => {
        m.value !== null && (m.value.style.height = "", m.value.style.width = "", setTimeout(() => {
          B.value = !1, S.value = !1, l("hidden");
        }, Ba(m.value)));
      }));
    };
    return se([n, B], () => {
      if (s.value === !0) {
        if (B.value)
          return;
        _();
        return;
      }
      $();
    }), je(() => {
      m.value !== null && !s.value && i.value && Ce(() => {
        n.value = !0;
      });
    }), b.value && (n.value = !0, B.value = !0), se(b, (y) => {
      y ? C() : F();
    }), Se(m, "bv-toggle", () => {
      n.value = !s.value;
    }), t({
      close: F,
      open: C,
      toggle: T,
      visible: Fe(B),
      isNav: c
    }), We(Wa, {
      id: v,
      close: F,
      open: C,
      toggle: T,
      visible: Fe(B),
      isNav: c
    }), (y, k) => (g(), O(ve, null, [
      V(y.$slots, "header", {
        id: w(v),
        visible: w(s),
        toggle: T,
        open: C,
        close: F
      }),
      (g(), M(le(y.tag), te({
        id: w(v),
        ref_key: "element",
        ref: m,
        class: ["collapse", h.value],
        "is-nav": w(c)
      }, y.$attrs), {
        default: D(() => [
          V(y.$slots, "default", {
            visible: w(s),
            toggle: y.toggle,
            open: C,
            close: F
          })
        ]),
        _: 3
      }, 16, ["id", "class", "is-nav"])),
      V(y.$slots, "footer", {
        id: w(v),
        visible: w(s),
        toggle: T,
        open: C,
        close: F
      })
    ], 64));
  }
}), nr = { class: "accordion-item" }, sr = ["aria-expanded", "aria-controls", "onClick"], ir = { class: "accordion-body" }, rr = /* @__PURE__ */ H({
  inheritAttrs: !1,
  __name: "BAccordionItem",
  props: {
    id: { default: void 0 },
    title: { default: void 0 },
    modelValue: { type: [String, Boolean], default: !1 },
    headerTag: { default: "h2" },
    tag: { default: void 0 },
    toggle: { type: [String, Boolean], default: void 0 },
    horizontal: { type: [String, Boolean], default: void 0 },
    visible: { type: [String, Boolean], default: !1 },
    isNav: { type: [String, Boolean], default: void 0 }
  },
  emits: ["show", "shown", "hide", "hidden", "hide-prevented", "show-prevented", "update:modelValue"],
  setup(e, { emit: t }) {
    const l = e, a = Be(l, "modelValue", t, { passive: !0 }), o = Oe(yo, null), n = ke(() => l.id, "accordion_item");
    return je(() => {
      a.value && !(o != null && o.free.value) && (o == null || o.setOpenItem(n.value)), !a.value && (o == null ? void 0 : o.openItem.value) === n.value && (a.value = !0);
    }), se(
      () => o == null ? void 0 : o.openItem.value,
      () => a.value = (o == null ? void 0 : o.openItem.value) === n.value && !(o != null && o.free.value)
    ), se(a, () => {
      a.value && !(o != null && o.free.value) && (o == null || o.setOpenItem(n.value));
    }), (s, i) => (g(), O("div", nr, [
      ye(an, te({
        id: w(n),
        modelValue: w(a),
        "onUpdate:modelValue": i[0] || (i[0] = (r) => Ia(a) ? a.value = r : null),
        class: "accordion-collapse"
      }, s.$attrs, {
        "aria-labelledby": `${w(n)}-heading`,
        tag: s.tag,
        toggle: s.toggle,
        horizontal: s.horizontal,
        visible: s.visible,
        "is-nav": s.isNav,
        onShow: i[1] || (i[1] = (r) => t("show", r)),
        onShown: i[2] || (i[2] = (r) => t("shown")),
        onHide: i[3] || (i[3] = (r) => t("hide", r)),
        onHidden: i[4] || (i[4] = (r) => t("hidden")),
        onHidePrevented: i[5] || (i[5] = (r) => t("hide-prevented")),
        onShowPrevented: i[6] || (i[6] = (r) => t("show-prevented"))
      }), {
        header: D(({ visible: r, toggle: c }) => [
          (g(), M(le(s.headerTag), {
            id: `${w(n)}-heading`,
            class: "accordion-header"
          }, {
            default: D(() => [
              Y("button", {
                class: z(["accordion-button", { collapsed: !r }]),
                type: "button",
                "aria-expanded": r ? "true" : "false",
                "aria-controls": w(n),
                onClick: c
              }, [
                V(s.$slots, "title", {}, () => [
                  ie(K(s.title), 1)
                ])
              ], 10, sr)
            ]),
            _: 2
          }, 1032, ["id"]))
        ]),
        default: D(() => [
          Y("div", ir, [
            V(s.$slots, "default")
          ])
        ]),
        _: 3
      }, 16, ["id", "modelValue", "aria-labelledby", "tag", "toggle", "horizontal", "visible", "is-nav"])
    ]));
  }
}), Lt = /* @__PURE__ */ H({
  __name: "BTransition",
  props: {
    appear: { type: [String, Boolean], default: !1 },
    mode: { default: void 0 },
    noFade: { type: [String, Boolean], default: !1 },
    transProps: { default: void 0 }
  },
  setup(e) {
    const t = e, l = d(() => t.appear), a = d(() => t.noFade), o = u(() => {
      const i = {
        name: "",
        enterActiveClass: "",
        enterToClass: "",
        leaveActiveClass: "",
        leaveToClass: "showing",
        enterFromClass: "showing",
        leaveFromClass: ""
      }, r = {
        ...i,
        enterActiveClass: "fade showing",
        leaveActiveClass: "fade showing"
      };
      return a.value ? i : r;
    }), n = u(() => ({ mode: t.mode, css: !0, ...o.value })), s = u(
      () => t.transProps !== void 0 ? {
        // Order matters here since the props.transProps would get overwritten if it came first
        // But the goal of props.transProps is to overwrite base properties
        ...n.value,
        ...t.transProps
      } : l.value ? {
        ...n.value,
        appear: !0,
        appearActiveClass: o.value.enterActiveClass,
        appearToClass: o.value.enterToClass
      } : n.value
    );
    return (i, r) => (g(), M(Mn, Ae(Pe(s.value)), {
      default: D(() => [
        V(i.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
});
const ur = ["type", "disabled", "aria-label"], Pt = /* @__PURE__ */ H({
  __name: "BCloseButton",
  props: {
    ariaLabel: { default: "Close" },
    disabled: { type: [String, Boolean], default: !1 },
    type: { default: "button" }
  },
  emits: ["click"],
  setup(e, { emit: t }) {
    const l = e, a = d(() => l.disabled);
    return (o, n) => (g(), O("button", {
      type: o.type,
      class: "btn-close",
      disabled: w(a),
      "aria-label": o.ariaLabel,
      onClick: n[0] || (n[0] = (s) => t("click", s))
    }, null, 8, ur));
  }
}), dr = {
  key: 0,
  class: "visually-hidden"
}, va = /* @__PURE__ */ H({
  __name: "BSpinner",
  props: {
    label: { default: void 0 },
    role: { default: "status" },
    small: { type: [String, Boolean], default: !1 },
    tag: { default: "span" },
    type: { default: "border" },
    variant: { default: null }
  },
  setup(e) {
    const t = e, l = Ee(), a = d(() => t.small), o = u(() => [
      `spinner-${t.type}`,
      {
        [`spinner-${t.type}-sm`]: a.value,
        [`text-${t.variant}`]: t.variant !== null
      }
    ]), n = u(() => !Ve(l.label));
    return (s, i) => (g(), M(le(s.tag), {
      class: z(o.value),
      role: s.label || n.value ? s.role : null,
      "aria-hidden": s.label || n.value ? null : !0
    }, {
      default: D(() => [
        s.label || n.value ? (g(), O("span", dr, [
          V(s.$slots, "label", {}, () => [
            ie(K(s.label), 1)
          ])
        ])) : J("", !0)
      ]),
      _: 3
    }, 8, ["class", "role", "aria-hidden"]));
  }
}), cr = {
  active: { type: [Boolean, String, void 0], default: void 0 },
  activeClass: { type: String, default: void 0 },
  append: { type: [Boolean, String], default: !1 },
  disabled: { type: [Boolean, String], default: !1 },
  event: { type: [String, Array], default: "click" },
  href: { type: String },
  // noPrefetch: {type: [Boolean, String] as PropType<Booleanish>, default: false},
  // prefetch: {type: [Boolean, String] as PropType<Booleanish>, default: null},
  rel: { type: String, default: null },
  replace: { type: [Boolean, String], default: !1 },
  routerComponentName: { type: String, default: "router-link" },
  routerTag: { type: String, default: "a" },
  target: { type: String, default: "_self" },
  to: { type: [String, Object], default: null },
  variant: { type: String, default: null }
}, Qe = /* @__PURE__ */ H({
  __name: "BLink",
  props: {
    active: { type: [String, Boolean], default: void 0 },
    activeClass: { default: "router-link-active" },
    append: { type: [String, Boolean], default: !1 },
    disabled: { type: [String, Boolean], default: !1 },
    event: { default: "click" },
    href: { default: void 0 },
    rel: { default: void 0 },
    replace: { type: [String, Boolean], default: !1 },
    routerComponentName: { default: "router-link" },
    routerTag: { default: "a" },
    target: { default: "_self" },
    to: { default: void 0 },
    variant: { default: null },
    opacity: { default: void 0 },
    opacityHover: { default: void 0 },
    underlineVariant: { default: null },
    underlineOffset: { default: void 0 },
    underlineOffsetHover: { default: void 0 },
    underlineOpacity: { default: void 0 },
    underlineOpacityHover: { default: void 0 },
    icon: { type: [String, Boolean], default: !1 }
  },
  emits: ["click"],
  setup(e, { emit: t }) {
    const l = e, a = ao(), o = d(() => l.active), n = d(() => l.icon);
    d(() => l.append);
    const s = d(() => l.disabled);
    d(() => l.replace);
    const i = Oe(Wa, null), r = Oe(Ua, null), c = Ot(), b = "active", v = u(() => {
      const C = l.routerComponentName.split("-").map((_) => _.charAt(0).toUpperCase() + _.slice(1)).join("");
      return !((c == null ? void 0 : c.appContext.app.component(C)) !== void 0) || s.value || !l.to ? "a" : l.routerComponentName;
    }), m = u(() => {
      const C = "#";
      if (l.href)
        return l.href;
      if (typeof l.to == "string")
        return l.to || C;
      const T = l.to;
      if (Object.prototype.toString.call(T) === "[object Object]" && (T.path || T.query || T.hash)) {
        const _ = T.path || "", $ = T.query ? `?${Object.keys(T.query).map((k) => `${k}=${T.query[k]}`).join("=")}` : "", y = !T.hash || T.hash.charAt(0) === "#" ? T.hash || "" : `#${T.hash}`;
        return `${_}${$}${y}` || C;
      }
      return C;
    }), S = u(() => ({
      [`link-${l.variant}`]: l.variant !== null,
      [`link-opacity-${l.opacity}`]: l.opacity !== void 0,
      [`link-opacity-${l.opacityHover}-hover`]: l.opacityHover !== void 0,
      [`link-underline-${l.underlineVariant}`]: l.underlineVariant !== null,
      [`link-offset-${l.underlineOffset}`]: l.underlineOffset !== void 0,
      [`link-offset-${l.underlineOffsetHover}-hover`]: l.underlineOffsetHover !== void 0,
      [`link-underline-opacity-${l.underlineOpacity}`]: l.underlineOpacity !== void 0,
      [`link-underline-opacity-${l.underlineOpacityHover}-hover`]: l.underlineOpacityHover !== void 0,
      "icon-link": n.value === !0
    })), B = u(() => ({
      class: S.value,
      to: l.to,
      href: m.value,
      target: l.target,
      rel: l.target === "_blank" && l.rel === void 0 ? "noopener" : l.rel || void 0,
      tabindex: s.value ? "-1" : typeof a.tabindex > "u" ? null : a.tabindex,
      "aria-disabled": s.value ? !0 : null
    })), h = u(() => ({
      [b]: o.value,
      disabled: s.value
    })), F = (C) => {
      var T, _, $;
      if (s.value) {
        C.preventDefault(), C.stopImmediatePropagation();
        return;
      }
      (((T = i == null ? void 0 : i.isNav) == null ? void 0 : T.value) === !0 && r === null || r !== null && ((_ = r.autoClose) == null ? void 0 : _.value) === !0) && (($ = i == null ? void 0 : i.close) == null || $.call(i)), t("click", C);
    };
    return (C, T) => v.value === "router-link" ? (g(), M(le(v.value), te({ key: 0 }, B.value, { custom: "" }), {
      default: D(({ href: _, navigate: $, isActive: y }) => [
        (g(), M(le(C.routerTag), te({
          href: _,
          class: [(w(o) ?? y) && `${C.activeClass} ${b}`]
        }, C.$attrs, {
          onClick: (k) => {
            $(k), F(k);
          }
        }), {
          default: D(() => [
            V(C.$slots, "default")
          ]),
          _: 2
        }, 1040, ["href", "class", "onClick"]))
      ]),
      _: 3
    }, 16)) : (g(), M(le(v.value), te({
      key: 1,
      class: h.value
    }, B.value, { onClick: F }), {
      default: D(() => [
        V(C.$slots, "default")
      ]),
      _: 3
    }, 16, ["class"]));
  }
}), rt = /* @__PURE__ */ H({
  __name: "BButton",
  props: {
    pill: { type: [String, Boolean], default: !1 },
    pressed: { type: [String, Boolean], default: void 0 },
    size: { default: "md" },
    squared: { type: [String, Boolean], default: !1 },
    tag: { default: "button" },
    type: { default: "button" },
    variant: { default: "secondary" },
    loading: { type: [String, Boolean], default: !1 },
    loadingFill: { type: [String, Boolean], default: !1 },
    block: { type: [String, Boolean], default: !1 },
    loadingText: { default: "Loading..." },
    active: { type: [String, Boolean], default: !1 },
    activeClass: { default: void 0 },
    append: { type: [String, Boolean], default: !1 },
    disabled: { type: [String, Boolean], default: !1 },
    event: { default: "click" },
    href: { default: void 0 },
    rel: { default: void 0 },
    replace: { type: [String, Boolean], default: !1 },
    routerComponentName: { default: "router-link" },
    routerTag: { default: "a" },
    target: { default: "_self" },
    to: { default: void 0 },
    opacity: { default: void 0 },
    opacityHover: { default: void 0 },
    underlineVariant: { default: null },
    underlineOffset: { default: void 0 },
    underlineOffsetHover: { default: void 0 },
    underlineOpacity: { default: void 0 },
    underlineOpacityHover: { default: void 0 },
    icon: { type: [String, Boolean], default: !1 }
  },
  emits: ["click", "update:pressed"],
  setup(e, { emit: t }) {
    const l = e, a = Be(l, "pressed", t), o = d(() => l.active), n = d(() => l.block), s = d(() => l.disabled), i = d(() => l.pill), r = d(() => l.pressed), c = d(() => l.squared), b = d(() => l.loading), v = d(() => l.loadingFill), { computedLink: m } = Ft(l), S = u(() => typeof r.value == "boolean"), B = u(
      () => l.tag === "button" && l.href === void 0 && l.to === void 0
    ), h = u(() => l.to !== void 0), F = u(() => l.href !== void 0 ? !1 : !B.value), C = u(() => [
      [`btn-${l.size}`],
      {
        [`btn-${l.variant}`]: l.variant !== null,
        "btn-block": n.value,
        active: o.value || r.value,
        "rounded-pill": i.value,
        "rounded-0": c.value,
        disabled: s.value
      }
    ]), T = u(
      () => h.value ? Qe : l.href ? "a" : l.tag
    ), _ = ($) => {
      if (s.value) {
        $.preventDefault(), $.stopPropagation();
        return;
      }
      t("click", $), S.value && (a.value = !r.value);
    };
    return ($, y) => (g(), M(le(T.value), {
      class: z(["btn", C.value]),
      "aria-disabled": F.value ? w(s) : null,
      "aria-pressed": S.value ? w(r) : null,
      autocomplete: S.value ? "off" : null,
      disabled: B.value ? w(s) : null,
      href: $.href,
      rel: w(m) ? $.rel : null,
      role: F.value || w(m) ? "button" : null,
      target: w(m) ? $.target : null,
      type: B.value ? $.type : null,
      to: B.value ? null : $.to,
      append: w(m) ? $.append : null,
      "active-class": h.value ? $.activeClass : null,
      event: h.value ? $.event : null,
      replace: h.value ? $.replace : null,
      "router-component-name": h.value ? $.routerComponentName : null,
      "router-tag": h.value ? $.routerTag : null,
      onClick: _
    }, {
      default: D(() => [
        w(b) ? V($.$slots, "loading", { key: 0 }, () => [
          w(v) ? J("", !0) : (g(), O(ve, { key: 0 }, [
            ie(K($.loadingText), 1)
          ], 64)),
          V($.$slots, "loading-spinner", {}, () => [
            ye(va, {
              small: $.size !== "lg",
              label: w(v) ? $.loadingText : void 0
            }, null, 8, ["small", "label"])
          ])
        ]) : V($.$slots, "default", { key: 1 })
      ]),
      _: 3
    }, 8, ["class", "aria-disabled", "aria-pressed", "autocomplete", "disabled", "href", "rel", "role", "target", "type", "to", "append", "active-class", "event", "replace", "router-component-name", "router-tag"]));
  }
}), fr = /* @__PURE__ */ H({
  __name: "BAlert",
  props: {
    closeVariant: { default: "secondary" },
    closeClass: { default: void 0 },
    closeLabel: { default: "Close" },
    closeContent: { default: void 0 },
    noHoverPause: { type: [String, Boolean], default: !1 },
    dismissible: { type: [String, Boolean], default: !1 },
    fade: { type: [String, Boolean], default: !1 },
    modelValue: { type: [Boolean, Number], default: !1 },
    variant: { default: "info" },
    immediate: { type: [String, Boolean], default: !0 },
    interval: { default: 1e3 },
    showOnPause: { type: [String, Boolean], default: !0 }
  },
  emits: ["close", "closed", "close-countdown", "update:modelValue"],
  setup(e, { expose: t, emit: l }) {
    const a = e, o = Ee(), n = x(null), s = Be(a, "modelValue", l), i = qo(n), r = d(() => a.dismissible), c = d(() => a.fade), b = d(() => a.immediate), v = d(() => a.showOnPause), m = d(() => a.noHoverPause), S = we(() => a.interval), B = u(() => !Ve(o.close)), h = u(
      () => typeof s.value == "boolean" ? 0 : s.value
    ), F = u(() => ({
      [`alert-${a.variant}`]: a.variant !== null,
      "alert-dismissible": r.value
    })), C = u(() => [a.closeClass, { "btn-close-custom": B.value }]), {
      isActive: T,
      pause: _,
      restart: $,
      resume: y,
      stop: k,
      isPaused: f,
      value: A
    } = qi(h, S, {
      immediate: typeof s.value == "number" && b.value
    }), P = u(
      () => typeof s.value == "boolean" ? s.value : T.value || v.value && f.value
    ), p = u(() => ({
      variant: B.value ? a.closeVariant : void 0,
      class: C.value
    }));
    Ht(() => {
      l("close-countdown", A.value);
    });
    const N = () => {
      l("close"), typeof s.value == "boolean" ? s.value = !1 : (s.value = 0, k()), l("closed");
    }, I = () => {
      m.value || _();
    };
    return se(i, (E) => {
      if (E) {
        I();
        return;
      }
      y();
    }), to(k), t({ pause: _, resume: y, restart: $, stop: k }), (E, j) => (g(), M(Lt, {
      "no-fade": !w(c),
      "trans-props": { enterToClass: "show" }
    }, {
      default: D(() => [
        P.value ? (g(), O("div", {
          key: 0,
          ref_key: "element",
          ref: n,
          class: z(["alert", F.value]),
          role: "alert",
          "aria-live": "polite",
          "aria-atomic": "true"
        }, [
          V(E.$slots, "default", {}, void 0, !0),
          w(r) ? (g(), O(ve, { key: 0 }, [
            B.value || E.closeContent ? (g(), M(rt, te({ key: 0 }, p.value, { onClick: N }), {
              default: D(() => [
                V(E.$slots, "close", {}, () => [
                  ie(K(E.closeContent), 1)
                ], !0)
              ]),
              _: 3
            }, 16)) : (g(), M(Pt, te({
              key: 1,
              "aria-label": E.closeLabel
            }, p.value, { onClick: N }), null, 16, ["aria-label"]))
          ], 64)) : J("", !0)
        ], 2)) : J("", !0)
      ]),
      _: 3
    }, 8, ["no-fade"]));
  }
});
const pa = (e, t) => {
  const l = e.__vccOpts || e;
  for (const [a, o] of t)
    l[a] = o;
  return l;
}, vr = /* @__PURE__ */ pa(fr, [["__scopeId", "data-v-98984b5a"]]), pr = {
  key: 0,
  class: "b-avatar-custom"
}, mr = {
  key: 1,
  class: "b-avatar-img"
}, gr = ["src", "alt"], _a = (e) => {
  const t = typeof e == "string" && Kn(e) ? Yt(e, 0) : e;
  return typeof t == "number" ? `${t}px` : t || null;
}, yr = /* @__PURE__ */ H({
  __name: "BAvatar",
  props: {
    alt: { default: "avatar" },
    badge: { type: [Boolean, String], default: !1 },
    badgeLeft: { type: [String, Boolean], default: !1 },
    badgeOffset: { default: void 0 },
    badgeTop: { type: [String, Boolean], default: !1 },
    badgeVariant: { default: "primary" },
    button: { type: [String, Boolean], default: !1 },
    buttonType: { default: "button" },
    icon: { type: [String, Boolean], default: void 0 },
    rounded: { type: [Boolean, String], default: "circle" },
    size: { default: void 0 },
    square: { type: [String, Boolean], default: !1 },
    src: { default: void 0 },
    text: { default: void 0 },
    textVariant: { default: null },
    active: { type: [String, Boolean], default: void 0 },
    activeClass: { default: void 0 },
    append: { type: [String, Boolean], default: !1 },
    disabled: { type: [String, Boolean], default: !1 },
    href: { default: void 0 },
    rel: { default: void 0 },
    replace: { type: [String, Boolean], default: !1 },
    routerComponentName: { default: "router-link" },
    target: { default: "_self" },
    to: { default: void 0 },
    variant: { default: "secondary" },
    opacity: { default: void 0 },
    opacityHover: { default: void 0 },
    underlineVariant: { default: null },
    underlineOffset: { default: void 0 },
    underlineOffsetHover: { default: void 0 },
    underlineOpacity: { default: void 0 },
    underlineOpacityHover: { default: void 0 }
  },
  emits: ["click", "img-error"],
  setup(e, { emit: t }) {
    const l = e, a = Ee(), { computedLink: o, computedLinkProps: n } = Ft(l), s = Oe(go, null), i = ["sm", null, "lg"], r = 0.4, c = r * 0.7, b = d(() => l.badgeLeft), v = d(() => l.badgeTop), m = d(() => l.button), S = d(() => l.disabled), B = d(() => l.square), h = u(() => !Ve(a.default)), F = u(() => !Ve(a.badge)), C = u(() => !!l.badge || l.badge === "" || F.value), T = u(
      () => (s == null ? void 0 : s.size.value) ?? _a(l.size)
    ), _ = u(
      () => (s == null ? void 0 : s.variant.value) ?? l.variant
    ), $ = u(() => (s == null ? void 0 : s.rounded.value) ?? l.rounded), y = u(() => ({
      [`bg-${l.badgeVariant}`]: l.badgeVariant !== null
    })), k = u(() => l.badge === !0 ? "" : l.badge), f = u(() => ({
      [`text-${l.badgeVariant !== null && X(l.badgeVariant)}`]: l.badgeVariant !== null
    })), A = u(() => ({
      [`b-avatar-${l.size}`]: !!l.size && i.indexOf(_a(l.size)) !== -1,
      [`bg-${_.value}`]: _.value !== null,
      badge: !m.value && _.value !== null && h.value,
      rounded: $.value === "" || $.value === !0,
      "rounded-circle": !B.value && $.value === "circle",
      "rounded-0": B.value || $.value === "0",
      "rounded-1": !B.value && $.value === "sm",
      "rounded-3": !B.value && $.value === "lg",
      "rounded-top": !B.value && $.value === "top",
      "rounded-bottom": !B.value && $.value === "bottom",
      "rounded-start": !B.value && $.value === "left",
      "rounded-end": !B.value && $.value === "right",
      btn: m.value,
      [`btn-${_.value}`]: m.value ? _.value !== null : !1
    })), P = u(() => ({
      [`text-${l.textVariant || _.value !== null && X(_.value)}`]: l.textVariant || _.value !== null
    })), p = u(() => {
      const Q = l.badgeOffset || "0px";
      return {
        fontSize: (i.indexOf(T.value || null) === -1 ? `calc(${T.value} * ${c})` : "") || "",
        top: v.value ? Q : "",
        bottom: v.value ? "" : Q,
        left: b.value ? Q : "",
        right: b.value ? "" : Q
      };
    }), N = u(() => {
      const Q = i.indexOf(T.value || null) === -1 ? `calc(${T.value} * ${r})` : null;
      return Q ? { fontSize: Q } : {};
    }), I = u(() => {
      var ee;
      const Q = ((ee = s == null ? void 0 : s.overlapScale) == null ? void 0 : ee.value) || 0, pe = T.value && Q ? `calc(${T.value} * -${Q})` : null;
      return pe ? { marginLeft: pe, marginRight: pe } : {};
    }), E = u(
      () => o.value ? Qe : m.value ? "button" : "span"
    ), j = u(() => ({
      ...I.value,
      width: T.value ?? void 0,
      height: T.value ?? void 0
    })), X = (Q) => Q === "light" || Q === "warning" ? "dark" : "light", W = (Q) => {
      !S.value && (o.value || m.value) && t("click", Q);
    }, fe = (Q) => {
      t("img-error", Q);
    };
    return (Q, pe) => (g(), M(le(E.value), te({
      class: ["b-avatar", A.value],
      style: j.value
    }, w(n), {
      type: w(m) && !w(o) ? l.buttonType : void 0,
      disabled: w(S) || null,
      onClick: W
    }), {
      default: D(() => [
        h.value ? (g(), O("span", pr, [
          V(Q.$slots, "default")
        ])) : Q.src ? (g(), O("span", mr, [
          Y("img", {
            src: Q.src,
            alt: Q.alt,
            onError: fe
          }, null, 40, gr)
        ])) : Q.text ? (g(), O("span", {
          key: 2,
          class: z(["b-avatar-text", P.value]),
          style: Re(N.value)
        }, K(Q.text), 7)) : J("", !0),
        C.value ? (g(), O("span", {
          key: 3,
          class: z(["b-avatar-badge", y.value]),
          style: Re(p.value)
        }, [
          F.value ? V(Q.$slots, "badge", { key: 0 }) : (g(), O("span", {
            key: 1,
            class: z(f.value)
          }, K(k.value), 3))
        ], 6)) : J("", !0)
      ]),
      _: 3
    }, 16, ["class", "style", "type", "disabled"]));
  }
}), br = /* @__PURE__ */ H({
  __name: "BAvatarGroup",
  props: {
    overlap: { default: 0.3 },
    rounded: { type: [Boolean, String], default: !1 },
    size: { default: void 0 },
    square: { type: [String, Boolean], default: !1 },
    tag: { default: "div" },
    variant: { default: null }
  },
  setup(e) {
    const t = e, l = d(() => t.square), a = u(() => _a(t.size)), o = we(() => t.overlap), n = u(() => Math.min(Math.max(o.value, 0), 1) / 2), s = u(() => {
      const i = a.value ? `calc(${a.value} * ${n.value})` : null;
      return i ? { paddingLeft: i, paddingRight: i } : {};
    });
    return We(go, {
      overlapScale: n,
      size: be(() => t.size),
      square: l,
      rounded: be(() => t.rounded),
      variant: be(() => t.variant)
    }), (i, r) => (g(), M(le(i.tag), {
      class: "b-avatar-group",
      role: "group"
    }, {
      default: D(() => [
        Y("div", {
          class: "b-avatar-group-inner",
          style: Re(s.value)
        }, [
          V(i.$slots, "default")
        ], 4)
      ]),
      _: 3
    }));
  }
}), hr = /* @__PURE__ */ H({
  __name: "BBadge",
  props: {
    pill: { type: [String, Boolean], default: !1 },
    tag: { default: "span" },
    textIndicator: { type: [String, Boolean], default: !1 },
    dotIndicator: { type: [String, Boolean], default: !1 },
    active: { type: [String, Boolean], default: void 0 },
    activeClass: { default: void 0 },
    append: { type: [String, Boolean], default: !1 },
    disabled: { type: [String, Boolean], default: !1 },
    href: { default: void 0 },
    rel: { default: void 0 },
    replace: { type: [String, Boolean], default: !1 },
    routerComponentName: { default: "router-link" },
    target: { default: "_self" },
    to: { default: void 0 },
    variant: { default: "secondary" },
    opacity: { default: void 0 },
    opacityHover: { default: void 0 },
    underlineVariant: { default: null },
    underlineOffset: { default: void 0 },
    underlineOffsetHover: { default: void 0 },
    underlineOpacity: { default: void 0 },
    underlineOpacityHover: { default: void 0 },
    icon: { type: [String, Boolean], default: !1 }
  },
  setup(e) {
    const t = e, l = d(() => t.pill), a = d(() => t.textIndicator), o = d(() => t.dotIndicator), n = d(() => t.active), s = d(() => t.disabled), { computedLink: i, computedLinkProps: r } = Ft(t, [
      "active",
      "activeClass",
      "append",
      "disabled",
      "href",
      "rel",
      "replace",
      "routerComponentName",
      "target",
      "to",
      "variant",
      "opacity",
      "opacityHover",
      "underlineVariant",
      "underlineOffset",
      "underlineOffsetHover",
      "underlineOpacity",
      "underlineOpacityHover",
      "icon"
    ]), c = u(() => i.value ? Qe : t.tag), b = u(() => ({
      [`bg-${t.variant}`]: t.variant !== null,
      active: n.value,
      disabled: s.value,
      "text-dark": t.variant !== null && ["warning", "info", "light"].includes(t.variant),
      "rounded-pill": l.value,
      "position-absolute top-0 start-100 translate-middle": a.value || o.value,
      "p-2 border border-light rounded-circle": o.value,
      "text-decoration-none": i.value
    }));
    return (v, m) => (g(), M(le(c.value), te({
      class: ["badge", b.value]
    }, w(r)), {
      default: D(() => [
        V(v.$slots, "default")
      ]),
      _: 3
    }, 16, ["class"]));
  }
}), ln = /* @__PURE__ */ H({
  __name: "BBreadcrumbItem",
  props: {
    ariaCurrent: { default: "location" },
    text: { default: void 0 },
    active: { type: [String, Boolean], default: !1 },
    activeClass: { default: void 0 },
    append: { type: [String, Boolean], default: !1 },
    disabled: { type: [String, Boolean], default: !1 },
    href: { default: void 0 },
    rel: { default: void 0 },
    replace: { type: [String, Boolean], default: !1 },
    routerComponentName: { default: "router-link" },
    target: { default: "_self" },
    to: { default: void 0 },
    variant: { default: void 0 },
    opacity: { default: void 0 },
    opacityHover: { default: void 0 },
    underlineVariant: { default: null },
    underlineOffset: { default: void 0 },
    underlineOffsetHover: { default: void 0 },
    underlineOpacity: { default: void 0 },
    underlineOpacityHover: { default: void 0 },
    icon: { type: [String, Boolean], default: !1 }
  },
  emits: ["click"],
  setup(e, { emit: t }) {
    const l = e, a = d(() => l.active), o = d(() => l.disabled), n = u(() => ({
      active: a.value
    })), s = u(() => a.value ? "span" : Qe), i = u(() => a.value ? l.ariaCurrent : void 0), r = u(
      () => s.value !== "span" ? Ga(l, [
        "active",
        "activeClass",
        "append",
        "disabled",
        "href",
        "rel",
        "replace",
        "routerComponentName",
        "target",
        "to",
        "variant",
        "opacity",
        "opacityHover",
        "underlineVariant",
        "underlineOffset",
        "underlineOffsetHover",
        "underlineOpacity",
        "underlineOpacityHover",
        "icon"
      ]) : {}
    ), c = (b) => {
      if (o.value || a.value) {
        b.preventDefault(), b.stopImmediatePropagation();
        return;
      }
      o.value || t("click", b);
    };
    return (b, v) => (g(), O("li", {
      class: z(["breadcrumb-item", n.value])
    }, [
      (g(), M(le(s.value), te({ "aria-current": i.value }, r.value, { onClick: c }), {
        default: D(() => [
          V(b.$slots, "default", {}, () => [
            ie(K(b.text), 1)
          ])
        ]),
        _: 3
      }, 16, ["aria-current"]))
    ], 2));
  }
}), Br = { "aria-label": "breadcrumb" }, Sr = { class: "breadcrumb" }, wr = /* @__PURE__ */ H({
  __name: "BBreadcrumb",
  props: {
    items: { default: void 0 }
  },
  setup(e) {
    const t = e, l = Wo(), a = u(() => {
      const o = t.items || (l == null ? void 0 : l.items) || [];
      let n = !1;
      return o.map((i, r) => (typeof i == "string" && (i = { text: i }, r < o.length - 1 && (i.href = "#")), i.active && (n = !0), !i.active && !n && (i.active = r + 1 === o.length), i));
    });
    return (o, n) => (g(), O("nav", Br, [
      Y("ol", Sr, [
        V(o.$slots, "prepend"),
        (g(!0), O(ve, null, he(a.value, (s, i) => (g(), M(ln, te({ key: i }, s), {
          default: D(() => [
            ie(K(s.text), 1)
          ]),
          _: 2
        }, 1040))), 128)),
        V(o.$slots, "default"),
        V(o.$slots, "append")
      ])
    ]));
  }
}), Cr = /* @__PURE__ */ H({
  __name: "BButtonGroup",
  props: {
    ariaLabel: { default: "Group" },
    size: { default: "md" },
    tag: { default: "div" },
    vertical: { type: [String, Boolean], default: !1 }
  },
  setup(e) {
    const t = e, l = d(() => t.vertical), a = u(() => ({
      "btn-group": !l.value,
      [`btn-group-${t.size}`]: t.size !== "md",
      "btn-group-vertical": l.value
    }));
    return (o, n) => (g(), M(le(o.tag), {
      class: z(a.value),
      role: "group",
      "aria-label": o.ariaLabel
    }, {
      default: D(() => [
        V(o.$slots, "default")
      ]),
      _: 3
    }, 8, ["class", "aria-label"]));
  }
}), kr = ["role", "aria-label"], $r = /* @__PURE__ */ H({
  __name: "BButtonToolbar",
  props: {
    ariaLabel: { default: "Group" },
    justify: { type: [String, Boolean], default: !1 },
    role: { default: "toolbar" }
  },
  setup(e) {
    const t = e, l = d(() => t.justify), a = u(() => ({
      "justify-content-between": l.value
    }));
    return (o, n) => (g(), O("div", {
      class: z([a.value, "btn-toolbar"]),
      role: o.role,
      "aria-label": o.ariaLabel
    }, [
      V(o.$slots, "default")
    ], 10, kr));
  }
}), _r = ["src", "width", "height", "srcset", "sizes", "loading"], Tr = '<svg width="%{w}" height="%{h}" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 %{w} %{h}" preserveAspectRatio="none"><rect width="100%" height="100%" style="fill:%{f};"></rect></svg>', nl = /* @__PURE__ */ H({
  __name: "BImg",
  props: {
    blank: { type: [String, Boolean], default: !1 },
    blankColor: { default: "transparent" },
    block: { type: [String, Boolean], default: !1 },
    center: { type: [String, Boolean], default: !1 },
    fluid: { type: [String, Boolean], default: !1 },
    lazy: { type: [String, Boolean], default: !1 },
    fluidGrow: { type: [String, Boolean], default: !1 },
    height: { default: void 0 },
    start: { type: [String, Boolean], default: !1 },
    end: { type: [String, Boolean], default: !1 },
    rounded: { type: [Boolean, String], default: !1 },
    sizes: { default: void 0 },
    src: { default: void 0 },
    srcset: { default: void 0 },
    thumbnail: { type: [String, Boolean], default: !1 },
    width: { default: void 0 }
  },
  setup(e) {
    const t = e, l = d(() => t.lazy), a = d(() => t.blank), o = d(() => t.block), n = d(() => t.center), s = d(() => t.fluid), i = d(() => t.fluidGrow), r = d(() => t.start), c = d(() => t.end), b = d(() => t.thumbnail), v = we(u(() => t.height ?? NaN)), m = we(u(() => t.width ?? NaN)), S = u(
      () => typeof t.srcset == "string" ? t.srcset.split(",").filter(($) => $).join(",") : Array.isArray(t.srcset) ? t.srcset.filter(($) => $).join(",") : void 0
    ), B = u(
      () => typeof t.sizes == "string" ? t.sizes.split(",").filter(($) => $).join(",") : Array.isArray(t.sizes) ? t.sizes.filter(($) => $).join(",") : void 0
    ), h = u(() => {
      const $ = Number.isNaN(m.value) ? void 0 : m.value, y = Number.isNaN(v.value) ? void 0 : v.value;
      if (a.value) {
        if ($ !== void 0 && y === void 0)
          return { height: $, width: $ };
        if ($ === void 0 && y !== void 0)
          return { height: y, width: y };
        if ($ === void 0 && y === void 0)
          return { height: 1, width: 1 };
      }
      return {
        width: $,
        height: y
      };
    }), F = u(
      () => _(h.value.width, h.value.height, t.blankColor)
    ), C = u(
      () => r.value ? "float-start" : c.value ? "float-end" : n.value ? "mx-auto" : void 0
    ), T = u(() => ({
      "img-thumbnail": b.value,
      "img-fluid": s.value || i.value,
      "w-100": i.value,
      rounded: t.rounded === "" || t.rounded === !0,
      [`rounded-${t.rounded}`]: typeof t.rounded == "string" && t.rounded !== "",
      [`${C.value}`]: C.value !== void 0,
      "d-block": o.value || n.value
    })), _ = ($, y, k) => `data:image/svg+xml;charset=UTF-8,${encodeURIComponent(
      Tr.replace("%{w}", String($)).replace("%{h}", String(y)).replace("%{f}", k)
    )}`;
    return ($, y) => (g(), O("img", {
      class: z(T.value),
      src: w(a) ? F.value : t.src,
      width: h.value.width || void 0,
      height: h.value.height || void 0,
      srcset: w(a) ? void 0 : S.value,
      sizes: w(a) ? void 0 : B.value,
      loading: w(l) ? "lazy" : "eager"
    }, null, 10, _r));
  }
}), ia = /* @__PURE__ */ H({
  __name: "BCardImg",
  props: {
    bottom: { type: [String, Boolean], default: !1 },
    top: { type: [String, Boolean], default: !1 },
    blank: { type: [String, Boolean] },
    blankColor: {},
    block: { type: [String, Boolean] },
    center: { type: [String, Boolean] },
    fluid: { type: [String, Boolean] },
    lazy: { type: [String, Boolean] },
    fluidGrow: { type: [String, Boolean] },
    height: {},
    start: { type: [String, Boolean] },
    end: { type: [String, Boolean] },
    rounded: { type: [Boolean, String] },
    sizes: {},
    src: {},
    srcset: {},
    thumbnail: { type: [String, Boolean] },
    width: {}
  },
  setup(e) {
    const t = e, l = d(() => t.bottom), a = d(() => t.end), o = d(() => t.start), n = d(() => t.top), s = u(
      () => n.value ? "card-img-top" : a.value ? "card-img-right" : l.value ? "card-img-bottom" : o.value ? "card-img-left" : "card-img"
    ), i = u(() => As(t, ["bottom", "top", "end", "start"]));
    return (r, c) => (g(), M(nl, te(i.value, { class: s.value }), null, 16, ["class"]));
  }
}), Ar = ["innerHTML"], on = /* @__PURE__ */ H({
  __name: "BCardHeadFoot",
  props: {
    text: { default: void 0 },
    bgVariant: { default: null },
    borderVariant: { default: null },
    html: { default: void 0 },
    tag: { default: "div" },
    textVariant: { default: null }
  },
  setup(e) {
    const t = e, l = u(() => ({
      [`text-${t.textVariant}`]: t.textVariant !== null,
      [`bg-${t.bgVariant}`]: t.bgVariant !== null,
      [`border-${t.borderVariant}`]: t.borderVariant !== null
    }));
    return (a, o) => (g(), M(le(a.tag), {
      class: z(l.value)
    }, {
      default: D(() => [
        a.html ? (g(), O("div", {
          key: 0,
          innerHTML: a.html
        }, null, 8, Ar)) : V(a.$slots, "default", { key: 1 }, () => [
          ie(K(a.text), 1)
        ])
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), nn = /* @__PURE__ */ H({
  __name: "BCardHeader",
  props: {
    text: { default: void 0 },
    bgVariant: { default: void 0 },
    borderVariant: { default: void 0 },
    html: { default: void 0 },
    tag: { default: "div" },
    textVariant: { default: void 0 }
  },
  setup(e) {
    const t = e;
    return (l, a) => (g(), M(on, te({ class: "card-header" }, t), {
      default: D(() => [
        V(l.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), sn = /* @__PURE__ */ H({
  __name: "BCardTitle",
  props: {
    text: { default: void 0 },
    tag: { default: "h4" }
  },
  setup(e) {
    return (t, l) => (g(), M(le(t.tag), { class: "card-title" }, {
      default: D(() => [
        V(t.$slots, "default", {}, () => [
          ie(K(t.text), 1)
        ])
      ]),
      _: 3
    }));
  }
}), rn = /* @__PURE__ */ H({
  __name: "BCardSubtitle",
  props: {
    text: { default: void 0 },
    tag: { default: "h6" },
    textVariant: { default: "body-secondary" }
  },
  setup(e) {
    const t = e, l = u(() => ({
      [`text-${t.textVariant}`]: t.textVariant !== null
    }));
    return (a, o) => (g(), M(le(a.tag), {
      class: z(["card-subtitle mb-2", l.value])
    }, {
      default: D(() => [
        V(a.$slots, "default", {}, () => [
          ie(K(a.text), 1)
        ])
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), un = /* @__PURE__ */ H({
  __name: "BCardBody",
  props: {
    bodyBgVariant: { default: null },
    bodyTag: { default: "div" },
    bodyTextVariant: { default: null },
    overlay: { type: [String, Boolean], default: !1 },
    subtitle: { default: void 0 },
    subtitleTag: { default: "h4" },
    subtitleTextVariant: { default: void 0 },
    title: { default: void 0 },
    titleTag: { default: "h4" },
    text: { default: void 0 }
  },
  setup(e) {
    const t = e, l = Ee(), a = d(() => t.overlay), o = u(() => !Ve(l.title)), n = u(() => !Ve(l.subtitle)), s = u(() => ({
      "card-img-overlay": a.value,
      [`text-${t.bodyTextVariant}`]: t.bodyTextVariant !== null,
      [`bg-${t.bodyBgVariant}`]: t.bodyBgVariant !== null
    }));
    return (i, r) => (g(), M(le(i.bodyTag), {
      class: z(["card-body", s.value])
    }, {
      default: D(() => [
        i.title || o.value ? (g(), M(sn, {
          key: 0,
          tag: i.titleTag
        }, {
          default: D(() => [
            V(i.$slots, "title", {}, () => [
              ie(K(i.title), 1)
            ])
          ]),
          _: 3
        }, 8, ["tag"])) : J("", !0),
        i.subtitle || n.value ? (g(), M(rn, {
          key: 1,
          tag: i.subtitleTag,
          "text-variant": i.subtitleTextVariant
        }, {
          default: D(() => [
            V(i.$slots, "subtitle", {}, () => [
              ie(K(i.subtitle), 1)
            ])
          ]),
          _: 3
        }, 8, ["tag", "text-variant"])) : J("", !0),
        V(i.$slots, "default", {}, () => [
          ie(K(i.text), 1)
        ])
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), dn = /* @__PURE__ */ H({
  __name: "BCardFooter",
  props: {
    text: { default: void 0 },
    bgVariant: { default: void 0 },
    borderVariant: { default: void 0 },
    html: { default: void 0 },
    tag: { default: "div" },
    textVariant: { default: void 0 }
  },
  setup(e) {
    const t = e;
    return (l, a) => (g(), M(on, te({ class: "card-footer" }, t), {
      default: D(() => [
        V(l.$slots, "default", {}, () => [
          ie(K(l.text), 1)
        ])
      ]),
      _: 3
    }, 16));
  }
}), cn = /* @__PURE__ */ H({
  __name: "BCard",
  props: {
    align: { default: void 0 },
    bgVariant: { default: null },
    bodyBgVariant: { default: void 0 },
    bodyClass: { default: void 0 },
    bodyTag: { default: "div" },
    bodyTextVariant: { default: void 0 },
    borderVariant: { default: null },
    footer: { default: void 0 },
    footerBgVariant: { default: void 0 },
    footerBorderVariant: { default: void 0 },
    footerClass: { default: void 0 },
    footerHtml: { default: "" },
    footerTag: { default: "div" },
    footerTextVariant: { default: void 0 },
    header: { default: void 0 },
    headerBgVariant: { default: void 0 },
    headerBorderVariant: { default: void 0 },
    headerClass: { default: void 0 },
    headerHtml: { default: "" },
    headerTag: { default: "div" },
    headerTextVariant: { default: void 0 },
    imgAlt: { default: void 0 },
    imgBottom: { type: [String, Boolean], default: !1 },
    imgEnd: { type: [String, Boolean], default: !1 },
    imgHeight: { default: void 0 },
    imgSrc: { default: void 0 },
    imgStart: { type: [String, Boolean], default: !1 },
    imgTop: { type: [String, Boolean], default: !1 },
    imgWidth: { default: void 0 },
    noBody: { type: [String, Boolean], default: !1 },
    overlay: { type: [String, Boolean], default: !1 },
    subtitle: { default: void 0 },
    subtitleTag: { default: "h6" },
    subtitleTextVariant: { default: "body-secondary" },
    tag: { default: "div" },
    textVariant: { default: null },
    title: { default: void 0 },
    titleTag: { default: "h4" },
    bodyText: { default: "" }
  },
  setup(e) {
    const t = e, l = Ee(), a = d(() => t.imgBottom), o = d(() => t.imgEnd), n = d(() => t.imgStart), s = d(() => t.noBody), i = u(() => !Ve(l.header)), r = u(() => !Ve(l.footer)), c = u(() => ({
      [`text-${t.align}`]: t.align !== void 0,
      [`text-${t.textVariant}`]: t.textVariant !== null,
      [`bg-${t.bgVariant}`]: t.bgVariant !== null,
      [`border-${t.borderVariant}`]: t.borderVariant !== null,
      "flex-row": n.value,
      "flex-row-reverse": o.value
    })), b = u(() => ({
      src: t.imgSrc,
      alt: t.imgAlt,
      height: t.imgHeight,
      width: t.imgWidth,
      bottom: t.imgBottom,
      end: t.imgEnd,
      start: t.imgStart,
      top: t.imgTop
    }));
    return (v, m) => (g(), M(le(v.tag), {
      class: z(["card", c.value])
    }, {
      default: D(() => [
        w(a) ? J("", !0) : V(v.$slots, "img", { key: 0 }, () => [
          v.imgSrc ? (g(), M(ia, Ae(te({ key: 0 }, b.value)), null, 16)) : J("", !0)
        ]),
        v.header || i.value || v.headerHtml ? (g(), M(nn, {
          key: 1,
          "bg-variant": v.headerBgVariant,
          "border-variant": v.headerBorderVariant,
          html: v.headerHtml,
          tag: v.headerTag,
          "text-variant": v.headerTextVariant,
          class: z(v.headerClass)
        }, {
          default: D(() => [
            V(v.$slots, "header", {}, () => [
              ie(K(v.header), 1)
            ])
          ]),
          _: 3
        }, 8, ["bg-variant", "border-variant", "html", "tag", "text-variant", "class"])) : J("", !0),
        w(s) ? V(v.$slots, "default", { key: 3 }, () => [
          ie(K(v.bodyText), 1)
        ]) : (g(), M(un, {
          key: 2,
          overlay: v.overlay,
          "body-bg-variant": v.bodyBgVariant,
          "body-tag": v.bodyTag,
          "body-text-variant": v.bodyTextVariant,
          subtitle: v.subtitle,
          "subtitle-tag": v.subtitleTag,
          "subtitle-text-variant": v.subtitleTextVariant,
          title: v.title,
          "title-tag": v.titleTag,
          class: z(v.bodyClass)
        }, {
          default: D(() => [
            V(v.$slots, "default", {}, () => [
              ie(K(v.bodyText), 1)
            ])
          ]),
          _: 3
        }, 8, ["overlay", "body-bg-variant", "body-tag", "body-text-variant", "subtitle", "subtitle-tag", "subtitle-text-variant", "title", "title-tag", "class"])),
        v.footer || r.value || v.footerHtml ? (g(), M(dn, {
          key: 4,
          "bg-variant": v.footerBgVariant,
          "border-variant": v.footerBorderVariant,
          html: v.footerHtml,
          tag: v.footerTag,
          "text-variant": v.footerTextVariant,
          class: z(v.footerClass)
        }, {
          default: D(() => [
            V(v.$slots, "footer", {}, () => [
              ie(K(v.footer), 1)
            ])
          ]),
          _: 3
        }, 8, ["bg-variant", "border-variant", "html", "tag", "text-variant", "class"])) : J("", !0),
        w(a) ? V(v.$slots, "img", { key: 5 }, () => [
          v.imgSrc ? (g(), M(ia, Ae(te({ key: 0 }, b.value)), null, 16)) : J("", !0)
        ]) : J("", !0)
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), Vr = /* @__PURE__ */ H({
  __name: "BCardGroup",
  props: {
    columns: { type: [String, Boolean], default: !1 },
    deck: { type: [String, Boolean], default: !1 },
    tag: { default: "div" }
  },
  setup(e) {
    const t = e, l = d(() => t.columns), a = d(() => t.deck), o = u(
      () => a.value ? "card-deck" : l.value ? "card-columns" : "card-group"
    ), n = u(() => o.value);
    return (s, i) => (g(), M(le(s.tag), {
      class: z(n.value)
    }, {
      default: D(() => [
        V(s.$slots, "default")
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), Or = /* @__PURE__ */ H({
  __name: "BCardText",
  props: {
    text: { default: void 0 },
    tag: { default: "p" }
  },
  setup(e) {
    return (t, l) => (g(), M(le(t.tag), { class: "card-text" }, {
      default: D(() => [
        V(t.$slots, "default", {}, () => [
          ie(K(t.text), 1)
        ])
      ]),
      _: 3
    }));
  }
}), Er = ["id"], Fr = {
  key: 0,
  class: "carousel-indicators"
}, Lr = ["aria-current", "aria-label", "onClick"], Pr = /* @__PURE__ */ Y("span", {
  class: "carousel-control-prev-icon",
  "aria-hidden": "true"
}, null, -1), Nr = { class: "visually-hidden" }, Ir = /* @__PURE__ */ Y("span", {
  class: "carousel-control-next-icon",
  "aria-hidden": "true"
}, null, -1), zr = { class: "visually-hidden" }, Hr = /* @__PURE__ */ H({
  __name: "BCarousel",
  props: {
    ride: { type: [Boolean, String], default: !1 },
    noHoverPause: { type: [String, Boolean], default: !1 },
    rideReverse: { type: [String, Boolean], default: !1 },
    fade: { type: [String, Boolean], default: !1 },
    id: { default: void 0 },
    imgHeight: { default: void 0 },
    imgWidth: { default: void 0 },
    background: { default: void 0 },
    modelValue: { default: 0 },
    controls: { type: [String, Boolean], default: !1 },
    indicators: { type: [String, Boolean], default: !1 },
    interval: { default: 5e3 },
    noTouch: { type: [String, Boolean], default: !1 },
    noWrap: { type: [String, Boolean], default: !1 },
    controlsPrevText: { default: "Previous" },
    controlsNextText: { default: "Next" },
    indicatorsButtonLabel: { default: "Slide" },
    keyboard: { type: [String, Boolean], default: !0 },
    touchThreshold: { default: 50 }
  },
  emits: ["slid", "slide", "update:modelValue"],
  setup(e, { expose: t, emit: l }) {
    const a = e, o = Ee(), n = ke(() => a.id, "carousel"), s = Be(a, "modelValue", l, { passive: !0 }), i = d(() => a.keyboard), r = d(() => a.rideReverse), c = d(() => a.noHoverPause), b = d(() => a.fade), v = d(() => a.controls), m = d(() => a.indicators), S = d(() => a.noTouch), B = d(() => a.noWrap), h = we(() => a.touchThreshold), F = we(() => a.interval), C = x(!1), T = x(!1), _ = x(!0), $ = x(null), y = x(null), k = x(s.value), f = qo(y), A = u(
      () => Xn(a.ride) ? Ra(a.ride) : a.ride
    ), P = u(
      () => `carousel-item carousel-item-${_.value ? "prev" : "next"} carousel-item-${_.value ? "end" : "start"}`
    ), p = u(
      () => `carousel-item active carousel-item-${_.value ? "start" : "end"}`
    ), { pause: N, resume: I } = Do(
      () => {
        r.value ? Q() : pe();
      },
      F,
      { immediate: A.value === "carousel" }
    ), E = u(
      () => A.value === !0 && T.value === !0 || A.value === "carousel"
    ), j = u(() => wa(o.default, "BCarouselSlide")), X = u(() => ({ "carousel-fade": b.value })), W = (oe) => {
      var L;
      return new lo(oe, {
        componentId: n.value,
        cancelable: !1,
        target: y.value,
        direction: _.value ? "right" : "left",
        from: k.value,
        to: s.value,
        relatedTarget: ((L = $.value) == null ? void 0 : L.children[s.value]) ?? null
      });
    }, fe = (oe) => {
      if (C.value !== !0) {
        if (A.value === !0 && (T.value = !0), E.value === !0 && I(), _.value = !(oe < s.value), oe >= j.value.length) {
          if (B.value)
            return;
          s.value = 0;
          return;
        }
        if (oe < 0) {
          if (B.value)
            return;
          s.value = j.value.length - 1;
          return;
        }
        k.value = s.value, s.value = oe;
      }
    }, Q = () => {
      fe(s.value - 1);
    }, pe = () => {
      fe(s.value + 1);
    }, ee = (oe) => {
      i.value !== !1 && oe();
    }, re = () => {
      c.value || N();
    }, ge = () => {
      E.value && I();
    }, { lengthX: q } = Mi(y, {
      passive: !0,
      onSwipeStart() {
        S.value !== !0 && N();
      },
      onSwipeEnd() {
        if (S.value === !0)
          return;
        const oe = () => {
          E.value !== !1 && I();
        };
        if (q.value >= h.value) {
          pe(), oe();
          return;
        }
        q.value <= -h.value && (Q(), oe());
      }
    }), ae = () => {
      l("slide", W("slide")), C.value = !0;
    }, Z = () => {
      l("slid", W("slid")), C.value = !1;
    }, ue = (oe) => {
      s.value !== 0 && oe.classList.add("carousel-item");
    };
    return Vt(
      "ArrowLeft",
      () => {
        ee(Q);
      },
      { target: y }
    ), Vt(
      "ArrowRight",
      () => {
        ee(pe);
      },
      { target: y }
    ), se(
      () => a.ride,
      () => {
        T.value = !1;
      }
    ), se(f, (oe) => {
      if (oe) {
        re();
        return;
      }
      ge();
    }), t({ pause: N, resume: I, prev: Q, next: pe }), We(fo, {
      background: be(() => a.background),
      width: be(() => a.imgWidth),
      height: be(() => a.imgHeight)
    }), (oe, L) => (g(), O("div", {
      id: w(n),
      ref_key: "element",
      ref: y,
      class: z(["carousel slide pointer-event", X.value])
    }, [
      w(m) ? (g(), O("div", Fr, [
        (g(!0), O(ve, null, he(j.value.length, (R, G) => (g(), O("button", {
          key: G,
          type: "button",
          "data-bs-target": "",
          class: z(G === w(s) ? "active" : ""),
          "aria-current": G === w(s) ? !0 : void 0,
          "aria-label": `${oe.indicatorsButtonLabel} ${G}`,
          onClick: (ce) => fe(G)
        }, null, 10, Lr))), 128))
      ])) : J("", !0),
      Y("div", {
        ref_key: "relatedTarget",
        ref: $,
        class: "carousel-inner"
      }, [
        ye(Dn, {
          "enter-from-class": P.value,
          "enter-active-class": P.value,
          "enter-to-class": P.value,
          "leave-from-class": p.value,
          "leave-active-class": p.value,
          "leave-to-class": p.value,
          onBeforeLeave: ae,
          onAfterLeave: Z,
          onAfterEnter: ue
        }, {
          default: D(() => [
            (g(!0), O(ve, null, he(j.value, (R, G) => vt((g(), M(le(R), {
              key: G,
              class: z({ active: G === w(s) && C.value === !1 })
            }, null, 8, ["class"])), [
              [ra, G === w(s)]
            ])), 128))
          ]),
          _: 1
        }, 8, ["enter-from-class", "enter-active-class", "enter-to-class", "leave-from-class", "leave-active-class", "leave-to-class"])
      ], 512),
      w(v) ? (g(), O(ve, { key: 1 }, [
        Y("button", {
          class: "carousel-control-prev",
          type: "button",
          onClick: Q
        }, [
          Pr,
          Y("span", Nr, K(oe.controlsPrevText), 1)
        ]),
        Y("button", {
          class: "carousel-control-next",
          type: "button",
          onClick: pe
        }, [
          Ir,
          Y("span", zr, K(oe.controlsNextText), 1)
        ])
      ], 64)) : J("", !0)
    ], 10, Er));
  }
}), xr = ["innerHTML"], Rr = { key: 1 }, Mr = ["innerHTML"], Dr = { key: 1 }, jr = /* @__PURE__ */ H({
  __name: "BCarouselSlide",
  props: {
    imgSrc: { default: void 0 },
    imgHeight: { default: void 0 },
    imgWidth: { default: void 0 },
    interval: { default: void 0 },
    background: { default: void 0 },
    caption: { default: void 0 },
    captionHtml: { default: void 0 },
    captionTag: { default: "h3" },
    contentTag: { default: "div" },
    contentVisibleUp: { default: void 0 },
    id: { default: void 0 },
    imgSrcset: { default: void 0 },
    imgAlt: { default: void 0 },
    imgBlank: { type: [String, Boolean], default: !1 },
    imgBlankColor: { default: "transparent" },
    text: { default: void 0 },
    textHtml: { default: void 0 },
    textTag: { default: "p" }
  },
  setup(e) {
    const t = e, l = Ee(), a = Oe(fo, null), o = u(() => t.text || t.textHtml || !Ve(l.text)), n = u(() => t.caption || t.captionHtml || !Ve(l.caption)), s = u(() => o.value || n.value || !Ve(l.default)), i = u(() => ({
      background: `${t.background || (a == null ? void 0 : a.background.value) || "rgb(171, 171, 171)"} none repeat scroll 0% 0%`
    })), r = u(() => ({
      "d-none": t.contentVisibleUp !== void 0,
      [`d-${t.contentVisibleUp}-block`]: t.contentVisibleUp !== void 0
    }));
    return (c, b) => (g(), O("div", {
      class: "carousel-item",
      style: Re(i.value)
    }, [
      V(c.$slots, "img", {}, () => {
        var v, m;
        return [
          ye(nl, {
            class: "d-block w-100",
            alt: c.imgAlt,
            srcset: c.imgSrcset,
            src: c.imgSrc,
            width: c.imgWidth || ((v = w(a)) == null ? void 0 : v.width.value),
            height: c.imgHeight || ((m = w(a)) == null ? void 0 : m.height.value),
            blank: c.imgBlank,
            "blank-color": c.imgBlankColor
          }, null, 8, ["alt", "srcset", "src", "width", "height", "blank", "blank-color"])
        ];
      }),
      s.value ? (g(), M(le(c.contentTag), {
        key: 0,
        class: z(["carousel-caption", r.value])
      }, {
        default: D(() => [
          n.value ? (g(), M(le(c.captionTag), { key: 0 }, {
            default: D(() => [
              V(c.$slots, "caption", {}, () => [
                c.captionHtml ? (g(), O("span", {
                  key: 0,
                  innerHTML: c.captionHtml
                }, null, 8, xr)) : (g(), O("span", Rr, K(c.caption), 1))
              ])
            ]),
            _: 3
          })) : J("", !0),
          o.value ? (g(), M(le(c.textTag), { key: 1 }, {
            default: D(() => [
              V(c.$slots, "text", {}, () => [
                c.textHtml ? (g(), O("span", {
                  key: 0,
                  innerHTML: c.textHtml
                }, null, 8, Mr)) : (g(), O("span", Dr, K(c.text), 1))
              ])
            ]),
            _: 3
          })) : J("", !0),
          V(c.$slots, "default")
        ]),
        _: 3
      }, 8, ["class"])) : J("", !0)
    ], 4));
  }
}), Ol = ua("", [], { type: [Boolean, String, Number], default: !1 }), El = ua("offset", [""], { type: [String, Number], default: null }), Fl = ua("order", [""], { type: [String, Number], default: null }), qr = H({
  name: "BCol",
  slots: Object,
  props: {
    col: { type: [Boolean, String], default: !1 },
    // Generic flexbox .col (xs)
    cols: { type: [String, Number], default: null },
    // .col-[1-12]|auto (xs)
    ...Ol,
    offset: { type: [String, Number], default: null },
    ...El,
    order: { type: [String, Number], default: null },
    ...Fl,
    alignSelf: { type: String, default: null },
    tag: { type: String, default: "div" }
  },
  setup(e) {
    const t = [
      { content: Ol, propPrefix: "cols", classPrefix: "col" },
      { content: El, propPrefix: "offset" },
      { content: Fl, propPrefix: "order" }
    ], l = d(() => e.col), a = u(
      () => t.flatMap((n) => co(e, n.content, n.propPrefix, n.classPrefix))
    );
    return {
      computedClasses: u(() => [
        a.value,
        {
          col: l.value || !a.value.some((n) => /^col-/.test(n)) && !e.cols,
          [`col-${e.cols}`]: !!e.cols,
          [`offset-${e.offset}`]: !!e.offset,
          [`order-${e.order}`]: !!e.order,
          [`align-self-${e.alignSelf}`]: !!e.alignSelf
        }
      ])
    };
  }
});
function Gr(e, t, l, a, o, n) {
  return g(), M(le(e.tag), {
    class: z(e.computedClasses)
  }, {
    default: D(() => [
      V(e.$slots, "default")
    ]),
    _: 3
  }, 8, ["class"]);
}
const Nt = /* @__PURE__ */ pa(qr, [["render", Gr]]), St = {
  autoHide: !0,
  delay: 5e3,
  noCloseButton: !1,
  pos: "top-right",
  value: !0
};
class Ll {
  constructor(t) {
    Te(this, "vm");
    Te(this, "containerPositions");
    jn(t) ? this.vm = t : this.vm = mt(t), this.containerPositions = u(() => {
      const l = /* @__PURE__ */ new Set([]);
      return this.vm.toasts.map((a) => {
        a.options.pos && l.add(a.options.pos);
      }), l;
    });
  }
  toasts(t) {
    return t ? u(
      () => this.vm.toasts.filter((l) => {
        if (l.options.pos === t && l.options.value)
          return l;
      })
    ) : u(() => this.vm.toasts);
  }
  remove(...t) {
    this.vm.toasts = this.vm.toasts.filter((l) => {
      if (l.options.id && !t.includes(l.options.id))
        return l;
    });
  }
  isRoot() {
    return this.vm.root ?? !1;
  }
  show(t, l = St) {
    const a = { id: st(), ...St, ...l }, o = {
      options: mt(a),
      content: t
    };
    return this.vm.toasts.push(o), o;
  }
  info(t, l = St) {
    return this.show(t, { variant: "info", ...l });
  }
  danger(t, l = St) {
    return this.show(t, { variant: "danger", ...l });
  }
  warning(t, l = St) {
    return this.show(t, { variant: "warning", ...l });
  }
  success(t, l = St) {
    return this.show(t, { variant: "success", ...l });
  }
  hide() {
  }
}
class Wr {
  constructor() {
    Te(this, "vms");
    Te(this, "rootInstance");
    Te(this, "useToast", vn);
    this.vms = {};
  }
  getOrCreateViewModel(t) {
    if (!t) {
      if (this.rootInstance)
        return this.vms[this.rootInstance];
      const l = { root: !0, toasts: [], container: void 0, id: Symbol("toast") };
      return this.rootInstance = l.id, this.vms[l.id] = l, l;
    }
    if (t.root) {
      if (this.rootInstance)
        return this.vms[this.rootInstance];
      this.rootInstance = t.id;
    }
    return this.vms[t.id] = t, t;
  }
  getVM(t) {
    if (!t && this.rootInstance)
      return this.vms[this.rootInstance];
    if (t)
      return this.vms[t];
  }
}
const Ta = Symbol("toast"), fn = Symbol("toastFetch"), Ur = {
  container: void 0,
  toasts: [],
  root: !1
};
function Xr() {
  return Oe(fn);
}
function vn(e, t = Ta) {
  const l = Oe(Xr());
  if (!e)
    return new Ll(l.getOrCreateViewModel());
  const a = { id: Symbol("toastInstance") }, o = { ...Ur, ...a, ...e }, n = l.getOrCreateViewModel(o);
  return new Ll(n);
}
const pn = {
  install: (e, t) => {
    var a;
    const l = typeof (t == null ? void 0 : t.BToast) == "object" ? ((a = t == null ? void 0 : t.BToast) == null ? void 0 : a.injectkey) ?? Ta : Ta;
    e.provide(fn, l), e.provide(l, new Wr());
  }
}, Kr = "toast-title", Pl = 1e3, mn = H({
  components: { BLink: Qe },
  props: {
    ...cr,
    delay: { type: Number, default: 5e3 },
    bodyClass: { type: String, default: void 0 },
    body: { type: [Object, String], default: void 0 },
    headerClass: { type: String, default: void 0 },
    headerTag: { type: String, default: "div" },
    animation: { type: [Boolean, String], default: !0 },
    id: { type: String, default: void 0 },
    // Switches role to 'status' and aria-live to 'polite'
    isStatus: { type: [Boolean, String], default: !1 },
    autoHide: { type: [Boolean, String], default: !0 },
    noCloseButton: { type: [Boolean, String], default: !1 },
    noFade: { type: [Boolean, String], default: !1 },
    noHoverPause: { type: [Boolean, String], default: !1 },
    solid: { type: [Boolean, String], default: !1 },
    // Render the toast in place, rather than in a portal-target
    static: { type: [Boolean, String], default: !1 },
    title: { type: String, default: void 0 },
    modelValue: { type: [Boolean, String], default: !1 },
    toastClass: { type: Array, default: void 0 },
    variant: { type: String, default: null }
  },
  emits: ["destroyed", "update:modelValue"],
  setup(e, { emit: t, slots: l }) {
    d(() => e.animation);
    const a = d(() => e.isStatus), o = d(() => e.autoHide), n = d(() => e.noCloseButton), s = d(() => e.noFade), i = d(() => e.noHoverPause);
    d(() => e.solid), d(() => e.static);
    const r = d(() => e.modelValue), c = x(!1), b = x(!1), v = x(!1), m = u(() => ({
      [`b-toast-${e.variant}`]: e.variant !== null,
      show: v.value || c.value
    }));
    let S, B, h;
    const F = () => {
      typeof S > "u" || (clearTimeout(S), S = void 0);
    }, C = u(
      () => (
        // Minimum supported duration is 1 second
        Math.max(it(e.delay, 0), Pl)
      )
    ), T = () => {
      r.value && (B = h = 0, F(), b.value = !0, qt(() => {
        v.value = !1;
      }));
    }, _ = () => {
      F(), t("update:modelValue", !0), B = h = 0, b.value = !1, Ce(() => {
        qt(() => {
          v.value = !0;
        });
      });
    }, $ = () => {
      if (!o.value || i.value || !S || h)
        return;
      const I = Date.now() - B;
      I > 0 && (F(), h = Math.max(C.value - I, Pl));
    }, y = () => {
      (!o.value || i.value || !h) && (h = B = 0), k();
    };
    se(r, (I) => {
      I ? _() : T();
    });
    const k = () => {
      F(), o.value && (S = setTimeout(T, h || C.value), B = Date.now(), h = 0);
    }, f = () => {
      c.value = !0, t("update:modelValue", !0);
    }, A = () => {
      c.value = !1, k();
    }, P = () => {
      c.value = !0;
    }, p = () => {
      c.value = !1, h = B = 0, t("update:modelValue", !1);
    };
    qn(() => {
      F(), o.value && t("destroyed", e.id);
    }), je(() => {
      Ce(() => {
        r.value && qt(() => {
          _();
        });
      });
    });
    const N = () => {
      Ce(() => {
        qt(() => {
          T();
        });
      });
    };
    return () => {
      const I = () => {
        const E = [], j = xe(Kr, { hide: T }, l);
        j ? E.push(de(j)) : e.title && E.push(de("strong", { class: "me-auto" }, e.title)), !n.value && E.length !== 0 && E.push(
          de(Pt, {
            class: ["btn-close"],
            onClick: () => {
              T();
            }
          })
        );
        const X = [];
        if (E.length > 0 && X.push(
          de(
            e.headerTag,
            {
              class: "toast-header"
            },
            { default: () => E }
          )
        ), xe("default", { hide: T }, l) || e.body) {
          const W = de(
            Sa(e) ? "b-link" : "div",
            {
              class: ["toast-body", e.bodyClass],
              onClick: Sa(e) ? { click: N } : {}
            },
            xe("default", { hide: T }, l) || e.body
          );
          X.push(W);
        }
        return de(
          "div",
          {
            class: ["toast", e.toastClass, m.value],
            tabindex: "0"
          },
          X
        );
      };
      return de(
        "div",
        {
          class: ["b-toast"],
          id: e.id,
          role: b.value ? null : a.value ? "status" : "alert",
          "aria-live": b.value ? null : a.value ? "polite" : "assertive",
          "aria-atomic": b.value ? null : !0,
          onmouseenter: $,
          onmouseleave: y
        },
        [
          de(
            Lt,
            {
              noFade: s.value,
              onAfterEnter: A,
              onBeforeEnter: f,
              onAfterLeave: p,
              onBeforeLeave: P
            },
            () => [v.value ? I() : ""]
          )
        ]
      );
    };
  }
}), Aa = /* @__PURE__ */ H({
  __name: "BToaster",
  props: {
    position: { default: "top-right" },
    instance: { default: void 0 }
  },
  setup(e) {
    const t = e, l = {
      "top-left": "top-0 start-0",
      "top-center": "top-0 start-50 translate-middle-x",
      "top-right": "top-0 end-0",
      "middle-left": "top-50 start-0 translate-middle-y",
      "middle-center": "top-50 start-50 translate-middle",
      "middle-right": "top-50 end-0 translate-middle-y",
      "bottom-left": "bottom-0 start-0",
      "bottom-center": "bottom-0 start-50 translate-middle-x",
      "bottom-right": "bottom-0 end-0"
    }, a = u(() => l[t.position]), o = (n) => {
      var s;
      (s = t.instance) == null || s.remove(n);
    };
    return (n, s) => {
      var i;
      return g(), O("div", {
        class: z([a.value, "b-toaster position-fixed p-3"]),
        style: { "z-index": "11" }
      }, [
        (g(!0), O(ve, null, he((i = n.instance) == null ? void 0 : i.toasts(n.position).value, (r) => (g(), M(mn, {
          id: r.options.id,
          key: r.options.id,
          modelValue: r.options.value,
          "onUpdate:modelValue": (c) => r.options.value = c,
          "auto-hide": r.options.autoHide,
          delay: r.options.delay,
          "no-close-button": r.options.noCloseButton,
          title: r.content.title,
          body: r.content.body,
          component: r.content.body,
          variant: r.options.variant,
          onDestroyed: o
        }, null, 8, ["id", "modelValue", "onUpdate:modelValue", "auto-hide", "delay", "no-close-button", "title", "body", "component", "variant"]))), 128))
      ], 2);
    };
  }
}), Jr = H({
  slots: Object,
  props: {
    gutterX: { type: String, default: null },
    gutterY: { type: String, default: null },
    fluid: { type: [Boolean, String], default: !1 },
    toast: { type: Object, default: void 0 },
    position: { type: String, default: void 0 }
  },
  setup(e, { slots: t, expose: l }) {
    const a = x();
    let o;
    const n = u(() => ({
      container: !e.fluid,
      "container-fluid": typeof e.fluid == "boolean" && e.fluid,
      [`container-${e.fluid}`]: typeof e.fluid == "string",
      [`gx-${e.gutterX}`]: e.gutterX !== null,
      [`gy-${e.gutterY}`]: e.gutterY !== null
    }));
    return je(() => {
      e.toast;
    }), e.toast && (o = vn({ container: a, root: e.toast.root }), l({
      // ...toastInstance?.useMethods,
    })), () => {
      var i;
      const s = [];
      return o == null || o.containerPositions.value.forEach((r) => {
        s.push(de(Aa, { key: r, instance: o, position: r }));
      }), de("div", { class: [n.value, e.position], ref: a }, [
        ...s,
        (i = t.default) == null ? void 0 : i.call(t)
      ]);
    };
  },
  methods: {}
}), Yr = { class: "visually-hidden" }, Zr = ["aria-labelledby", "role"], gn = /* @__PURE__ */ H({
  __name: "BDropdown",
  props: {
    ariaLabel: { default: void 0 },
    id: { default: void 0 },
    menuClass: { default: void 0 },
    size: { default: "md" },
    splitClass: { default: void 0 },
    splitVariant: { default: void 0 },
    text: { default: void 0 },
    toggleClass: { default: void 0 },
    autoClose: { type: [Boolean, String], default: !0 },
    block: { type: [String, Boolean], default: !1 },
    disabled: { type: [String, Boolean], default: !1 },
    isNav: { type: [String, Boolean], default: !1 },
    dropup: { type: [String, Boolean], default: !1 },
    dropend: { type: [String, Boolean], default: !1 },
    dropstart: { type: [String, Boolean], default: !1 },
    center: { type: [String, Boolean], default: !1 },
    end: { type: [String, Boolean], default: !1 },
    noFlip: { type: [String, Boolean], default: !1 },
    noShift: { type: [String, Boolean], default: !1 },
    offset: { default: 0 },
    role: { default: "menu" },
    split: { type: [String, Boolean], default: !1 },
    splitButtonType: { default: "button" },
    splitHref: { default: void 0 },
    splitDisabled: { type: [String, Boolean], default: void 0 },
    noCaret: { type: [String, Boolean], default: !1 },
    toggleText: { default: "Toggle dropdown" },
    variant: { default: "secondary" },
    modelValue: { type: [String, Boolean], default: !1 },
    lazy: { type: [String, Boolean], default: !1 },
    strategy: { default: "absolute" },
    floatingMiddleware: { default: void 0 },
    splitTo: { default: void 0 },
    boundary: { default: "clippingAncestors" }
  },
  emits: ["show", "shown", "hide", "hidden", "hide-prevented", "show-prevented", "click", "toggle", "update:modelValue"],
  setup(e, { expose: t, emit: l }) {
    const a = e, o = ke(() => a.id, "dropdown"), n = Be(a, "modelValue", l, { passive: !0 }), s = d(n), i = d(() => a.block), r = d(() => a.dropup), c = d(() => a.dropend), b = d(() => a.isNav), v = d(() => a.dropstart), m = d(() => a.center), S = d(() => a.end), B = d(() => a.split), h = d(() => a.noCaret), F = d(() => a.noFlip), C = d(() => a.noShift), T = d(() => a.lazy), _ = d(() => a.splitDisabled), $ = u(
      () => typeof a.offset == "string" || typeof a.offset == "number" ? a.offset : NaN
    ), y = we($), k = x(null), f = x(null), A = x(null), P = u(
      () => a.boundary === "document" || a.boundary === "viewport" ? void 0 : a.boundary
    ), p = u(
      () => a.boundary === "document" || a.boundary === "viewport" ? a.boundary : void 0
    );
    Vt(
      "Escape",
      () => {
        n.value = !s;
      },
      { target: A }
    );
    const N = u(() => B.value ? f.value : A.value), I = u(
      () => tr({
        top: r.value,
        start: v.value,
        end: c.value,
        alignCenter: m.value,
        alignEnd: S.value
      })
    ), E = u(() => {
      if (a.floatingMiddleware !== void 0)
        return a.floatingMiddleware;
      const Z = typeof a.offset == "string" || typeof a.offset == "number" ? y.value : a.offset, ue = [_o(Z)];
      return F.value === !1 && ue.push(
        ko({
          boundary: P.value,
          rootBoundary: p.value
        })
      ), C.value === !1 && ue.push(
        To({
          boundary: P.value,
          rootBoundary: p.value
        })
      ), ue;
    }), { update: j, floatingStyles: X } = zo(N, k, {
      placement: I,
      middleware: E,
      strategy: Fe(be(a, "strategy")),
      whileElementsMounted: No
    }), W = u(() => ({
      "d-grid": i.value,
      dropup: r.value,
      dropend: c.value,
      dropstart: v.value,
      "d-flex": i.value && B.value,
      "position-static": a.boundary !== "clippingAncestors" && !b.value
    })), fe = u(() => [
      B.value ? a.splitClass : a.toggleClass,
      {
        "nav-link": b.value,
        "dropdown-toggle": !B.value,
        "dropdown-toggle-no-caret": h.value && !B.value,
        "w-100": B.value && i.value,
        show: B.value ? void 0 : s.value
      }
    ]), Q = u(() => a.menuClass), pe = () => {
      ae();
    }, ee = (Z) => {
      B.value ? l("click", Z) : pe();
    };
    jo(
      k,
      () => {
        s.value && (a.autoClose === !0 || a.autoClose === "outside") && ae();
      },
      { ignore: [f, A] }
    );
    const re = () => {
      s.value && (a.autoClose === !0 || a.autoClose === "inside") && ae();
    }, ge = () => {
      n.value && ae();
    }, q = () => {
      n.value || ae();
    }, ae = () => {
      l("toggle");
      const Z = s.value, ue = new Et(Z ? "hide" : "show");
      if (l(Z ? "hide" : "show", ue), ue.defaultPrevented) {
        l(Z ? "hide-prevented" : "show-prevented");
        return;
      }
      n.value = !Z, l(Z ? "hidden" : "shown");
    };
    return se(s, j), t({
      close: ge,
      open: q,
      toggle: ae
    }), We(Bo, {
      id: o,
      open: q,
      close: ge,
      toggle: ae,
      visible: s,
      isNav: b
    }), (Z, ue) => (g(), O("div", {
      class: z([W.value, "btn-group"])
    }, [
      ye(rt, {
        id: w(o),
        ref_key: "splitButton",
        ref: A,
        variant: Z.splitVariant || Z.variant,
        size: Z.size,
        class: z(fe.value),
        disabled: w(_) || Z.disabled,
        type: Z.splitButtonType,
        "aria-label": Z.ariaLabel,
        "aria-expanded": w(B) ? void 0 : w(s),
        "aria-haspopup": w(B) ? void 0 : "menu",
        href: w(B) ? Z.splitHref : void 0,
        to: w(B) && Z.splitTo ? Z.splitTo : void 0,
        onClick: ee
      }, {
        default: D(() => [
          V(Z.$slots, "button-content", {}, () => [
            ie(K(Z.text), 1)
          ])
        ]),
        _: 3
      }, 8, ["id", "variant", "size", "class", "disabled", "type", "aria-label", "aria-expanded", "aria-haspopup", "href", "to"]),
      w(B) ? (g(), M(rt, {
        key: 0,
        ref_key: "button",
        ref: f,
        variant: Z.variant,
        size: Z.size,
        disabled: Z.disabled,
        class: z([[Z.toggleClass, w(s) ? "show" : void 0], "dropdown-toggle-split dropdown-toggle"]),
        "aria-expanded": w(s),
        "aria-haspopup": "menu",
        onClick: pe
      }, {
        default: D(() => [
          Y("span", Yr, [
            V(Z.$slots, "toggle-text", {}, () => [
              ie(K(Z.toggleText), 1)
            ])
          ])
        ]),
        _: 3
      }, 8, ["variant", "size", "disabled", "class", "aria-expanded"])) : J("", !0),
      !w(T) || w(s) ? vt((g(), O("ul", {
        key: 1,
        ref_key: "floating",
        ref: k,
        style: Re(w(X)),
        class: z(["dropdown-menu show", Q.value]),
        "aria-labelledby": w(o),
        role: Z.role,
        onClick: re
      }, [
        V(Z.$slots, "default", {
          hide: ge,
          show: q
        })
      ], 14, Zr)), [
        [ra, w(T) || w(s)]
      ]) : J("", !0)
    ], 2));
  }
}), Qr = { role: "presentation" }, eu = /* @__PURE__ */ H({
  __name: "BDropdownDivider",
  props: {
    tag: { default: "hr" }
  },
  setup(e) {
    return (t, l) => (g(), O("li", Qr, [
      (g(), M(le(t.tag), {
        class: "dropdown-divider",
        role: "separator",
        "aria-orientation": "horizontal"
      }))
    ]));
  }
}), tu = { role: "presentation" }, au = { class: "px-4 py-3" }, lu = /* @__PURE__ */ H({
  __name: "BDropdownForm",
  setup(e) {
    return (t, l) => (g(), O("li", tu, [
      Y("form", au, [
        V(t.$slots, "default")
      ])
    ]));
  }
}), ou = { role: "presentation" }, nu = ["id", "aria-describedby"], su = /* @__PURE__ */ H({
  inheritAttrs: !1,
  __name: "BDropdownGroup",
  props: {
    id: { default: void 0 },
    ariaDescribedby: { default: void 0 },
    header: { default: void 0 },
    headerClass: { default: void 0 },
    headerTag: { default: "header" },
    headerVariant: { default: null }
  },
  setup(e) {
    const t = e, l = u(
      () => t.id ? `${t.id}_group_dd_header` : void 0
    ), a = u(
      () => t.headerTag === "header" ? void 0 : "heading"
    ), o = u(() => [
      t.headerClass,
      {
        [`text-${t.headerVariant}`]: t.headerVariant !== null
      }
    ]);
    return (n, s) => (g(), O("li", ou, [
      (g(), M(le(n.headerTag), {
        id: l.value,
        class: z(["dropdown-header", o.value]),
        role: a.value
      }, {
        default: D(() => [
          V(n.$slots, "header", {}, () => [
            ie(K(n.header), 1)
          ])
        ]),
        _: 3
      }, 8, ["id", "class", "role"])),
      Y("ul", te({
        id: n.id,
        role: "group",
        class: "list-unstyled"
      }, n.$attrs, {
        "aria-describedby": n.ariaDescribedby || l.value
      }), [
        V(n.$slots, "default")
      ], 16, nu)
    ]));
  }
}), iu = { class: "dropdown-header" }, ru = /* @__PURE__ */ H({
  __name: "BDropdownHeader",
  setup(e) {
    return (t, l) => (g(), O("li", null, [
      Y("h6", iu, [
        V(t.$slots, "default")
      ])
    ]));
  }
}), uu = { role: "presentation" }, du = /* @__PURE__ */ H({
  inheritAttrs: !1,
  __name: "BDropdownItem",
  props: {
    linkClass: { default: void 0 },
    active: { type: [String, Boolean], default: void 0 },
    activeClass: { default: void 0 },
    append: { type: [String, Boolean], default: !1 },
    disabled: { type: [String, Boolean] },
    href: { default: void 0 },
    rel: { default: void 0 },
    replace: { type: [String, Boolean], default: !1 },
    routerComponentName: { default: "router-link" },
    target: { default: "_self" },
    to: { default: void 0 },
    variant: {},
    opacity: { default: void 0 },
    opacityHover: { default: void 0 },
    underlineVariant: { default: null },
    underlineOffset: { default: void 0 },
    underlineOffsetHover: { default: void 0 },
    underlineOpacity: { default: void 0 },
    underlineOpacityHover: { default: void 0 },
    icon: { type: [String, Boolean] }
  },
  emits: ["click"],
  setup(e, { emit: t }) {
    const l = e, a = d(() => l.active), o = d(() => l.disabled), { computedLink: n, computedLinkProps: s } = Ft(l), i = u(() => [
      l.linkClass,
      {
        active: a.value,
        disabled: o.value,
        [`text-${l.variant}`]: l.variant !== null
      }
    ]), r = u(
      () => n.value ? Qe : l.href ? "a" : "button"
    ), c = Oe(Wa, null), b = Oe(Bo, null), v = Oe(Ua, null), m = (S) => {
      var B, h, F;
      t("click", S), v !== null && ((B = v == null ? void 0 : v.autoClose) == null ? void 0 : B.value) === !0 && ((h = c == null ? void 0 : c.close) == null || h.call(c)), (F = b == null ? void 0 : b.close) == null || F.call(b);
    };
    return (S, B) => (g(), O("li", uu, [
      (g(), M(le(r.value), te({
        class: ["dropdown-item", i.value],
        disabled: w(o),
        "aria-disabled": w(o) ? !0 : null,
        "aria-current": w(a) ? !0 : null,
        href: r.value === "a" ? S.href : null,
        rel: S.rel,
        role: "menuitem",
        type: r.value === "button" ? "button" : null,
        target: S.target
      }, w(s), { onClick: m }), {
        default: D(() => [
          V(S.$slots, "default")
        ]),
        _: 3
      }, 16, ["class", "disabled", "aria-disabled", "aria-current", "href", "rel", "type", "target"]))
    ]));
  }
}), cu = { role: "presentation" }, fu = ["disabled"], vu = /* @__PURE__ */ H({
  inheritAttrs: !1,
  __name: "BDropdownItemButton",
  props: {
    buttonClass: { default: void 0 },
    active: { type: [String, Boolean], default: !1 },
    activeClass: { default: "active" },
    disabled: { type: [String, Boolean], default: !1 },
    variant: { default: null }
  },
  emits: ["click"],
  setup(e, { emit: t }) {
    const l = e, a = d(() => l.active), o = d(() => l.disabled), n = u(() => [
      l.buttonClass,
      {
        [l.activeClass]: a.value,
        disabled: o.value,
        [`text-${l.variant}`]: l.variant !== null
      }
    ]), s = (i) => {
      t("click", i);
    };
    return (i, r) => (g(), O("li", cu, [
      Y("button", {
        role: "menu",
        type: "button",
        class: z(["dropdown-item", n.value]),
        disabled: w(o),
        onClick: s
      }, [
        V(i.$slots, "default")
      ], 10, fu)
    ]));
  }
}), pu = { role: "presentation" }, mu = { class: "px-4 py-1 mb-0 text-body-secondary" }, gu = /* @__PURE__ */ H({
  __name: "BDropdownText",
  props: {
    text: { default: "" }
  },
  setup(e) {
    return (t, l) => (g(), O("li", pu, [
      Y("p", mu, [
        V(t.$slots, "default", {}, () => [
          ie(K(t.text), 1)
        ])
      ])
    ]));
  }
}), yu = ["id", "novalidate", "onSubmit"], yn = /* @__PURE__ */ H({
  __name: "BForm",
  props: {
    id: { default: void 0 },
    floating: { type: [String, Boolean], default: !1 },
    novalidate: { type: [String, Boolean], default: !1 },
    validated: { type: [String, Boolean], default: !1 }
  },
  emits: ["submit"],
  setup(e, { emit: t }) {
    const l = e, a = d(() => l.floating), o = d(() => l.novalidate), n = d(() => l.validated), s = u(() => ({
      "form-floating": a.value,
      "was-validated": n.value
    })), i = (r) => {
      t("submit", r);
    };
    return (r, c) => (g(), O("form", {
      id: r.id,
      novalidate: w(o),
      class: z(s.value),
      onSubmit: Ha(i, ["prevent"])
    }, [
      V(r.$slots, "default")
    ], 42, yu));
  }
}), bu = { class: "form-floating" }, hu = ["for"], Bu = /* @__PURE__ */ H({
  __name: "BFormFloatingLabel",
  props: {
    labelFor: { default: void 0 },
    label: { default: void 0 },
    text: { default: void 0 }
  },
  setup(e) {
    return (t, l) => (g(), O("div", bu, [
      V(t.$slots, "default", {}, () => [
        ie(K(t.text), 1)
      ]),
      Y("label", { for: t.labelFor }, [
        V(t.$slots, "label", {}, () => [
          ie(K(t.label), 1)
        ])
      ], 8, hu)
    ]));
  }
}), Va = /* @__PURE__ */ H({
  __name: "BFormInvalidFeedback",
  props: {
    ariaLive: { default: void 0 },
    forceShow: { type: [String, Boolean], default: !1 },
    text: { default: void 0 },
    id: { default: void 0 },
    role: { default: void 0 },
    state: { type: [String, Boolean, null], default: null },
    tag: { default: "div" },
    tooltip: { type: [String, Boolean], default: !1 }
  },
  setup(e) {
    const t = e, l = d(() => t.forceShow), a = d(() => t.state), o = d(() => t.tooltip), n = u(
      () => l.value === !0 || a.value === !1
    ), s = u(() => ({
      "d-block": n.value,
      "invalid-feedback": !o.value,
      "invalid-tooltip": o.value
    }));
    return (i, r) => (g(), M(le(i.tag), {
      id: i.id,
      role: i.role,
      "aria-live": i.ariaLive,
      "aria-atomic": i.ariaLive ? !0 : void 0,
      class: z(s.value)
    }, {
      default: D(() => [
        V(i.$slots, "default", {}, () => [
          ie(K(i.text), 1)
        ])
      ]),
      _: 3
    }, 8, ["id", "role", "aria-live", "aria-atomic", "class"]));
  }
}), Zt = /* @__PURE__ */ H({
  __name: "BFormRow",
  props: {
    tag: { default: "div" }
  },
  setup(e) {
    return (t, l) => (g(), M(le(t.tag), { class: "row d-flex flex-wrap" }, {
      default: D(() => [
        V(t.$slots, "default")
      ]),
      _: 3
    }));
  }
}), Oa = /* @__PURE__ */ H({
  __name: "BFormText",
  props: {
    id: { default: void 0 },
    inline: { type: [String, Boolean], default: !1 },
    tag: { default: "small" },
    text: { default: void 0 },
    textVariant: { default: "body-secondary" }
  },
  setup(e) {
    const t = e, l = d(() => t.inline), a = u(() => ({
      [`text-${t.textVariant}`]: t.textVariant !== null,
      "form-text": !l.value
    }));
    return (o, n) => (g(), M(le(o.tag), {
      id: o.id,
      class: z(a.value)
    }, {
      default: D(() => [
        V(o.$slots, "default", {}, () => [
          ie(K(o.text), 1)
        ])
      ]),
      _: 3
    }, 8, ["id", "class"]));
  }
}), Ea = /* @__PURE__ */ H({
  __name: "BFormValidFeedback",
  props: {
    ariaLive: { default: void 0 },
    forceShow: { type: [String, Boolean], default: !1 },
    text: { default: void 0 },
    id: { default: void 0 },
    role: { default: void 0 },
    state: { type: [String, Boolean, null], default: null },
    tag: { default: "div" },
    tooltip: { type: [String, Boolean], default: !1 }
  },
  setup(e) {
    const t = e, l = d(() => t.forceShow), a = d(() => t.state), o = d(() => t.tooltip), n = u(
      () => l.value === !0 || a.value === !0
    ), s = u(() => ({
      "d-block": n.value,
      "valid-feedback": !o.value,
      "valid-tooltip": o.value
    }));
    return (i, r) => (g(), M(le(i.tag), {
      id: i.id,
      role: i.role,
      "aria-live": i.ariaLive,
      "aria-atomic": i.ariaLive ? !0 : void 0,
      class: z(s.value)
    }, {
      default: D(() => [
        V(i.$slots, "default", {}, () => [
          ie(K(i.text), 1)
        ])
      ]),
      _: 3
    }, 8, ["id", "role", "aria-live", "aria-atomic", "class"]));
  }
}), Su = ["id", "disabled", "required", "name", "form", "aria-label", "aria-labelledby", "aria-required", "value", "indeterminate"], wu = ["for"], bn = /* @__PURE__ */ H({
  inheritAttrs: !1,
  __name: "BFormCheckbox",
  props: {
    ariaLabel: { default: void 0 },
    ariaLabelledBy: { default: void 0 },
    form: { default: void 0 },
    indeterminate: { type: [String, Boolean], default: void 0 },
    name: { default: void 0 },
    id: { default: void 0 },
    autofocus: { type: [String, Boolean], default: !1 },
    plain: { type: [String, Boolean], default: !1 },
    button: { type: [String, Boolean], default: !1 },
    buttonGroup: { type: [String, Boolean], default: !1 },
    switch: { type: [String, Boolean], default: !1 },
    disabled: { type: [String, Boolean], default: !1 },
    buttonVariant: { default: null },
    inline: { type: [String, Boolean], default: !1 },
    required: { type: [String, Boolean], default: void 0 },
    size: { default: void 0 },
    state: { type: [String, Boolean, null], default: null },
    uncheckedValue: { type: [Array, Set, Boolean, String, Object, Number, null], default: void 0 },
    value: { type: [Array, Set, Boolean, String, Object, Number, null], default: !0 },
    modelValue: { type: [Array, Set, Boolean, String, Object, Number, null], default: void 0 }
  },
  emits: ["update:modelValue", "input", "change"],
  setup(e, { expose: t, emit: l }) {
    const a = e, o = Ee(), n = Be(a, "modelValue", l, { passive: !0 }), s = ke(() => a.id, "form-check"), i = d(() => a.indeterminate), r = d(() => a.autofocus), c = d(() => a.plain), b = d(() => a.button), v = d(() => a.buttonGroup), m = d(() => a.switch), S = d(() => a.disabled), B = d(() => a.inline), h = d(() => a.required), F = d(() => a.state), C = Oe(bo, null), T = x(null), { focused: _ } = Ne(T, {
      initialValue: r.value
    }), $ = u(() => !Ve(o.default));
    let y = !1;
    const k = u({
      get: () => {
        var E;
        return C !== null ? C.modelValue.value.map((j) => JSON.stringify(j)).includes(JSON.stringify(a.value)) : Array.isArray(n.value) ? (E = n.value) == null ? void 0 : E.map((j) => JSON.stringify(j)).includes(JSON.stringify(a.value)) : JSON.stringify(n.value) === JSON.stringify(a.value);
      },
      set: (E) => {
        const j = E ? a.value : a.uncheckedValue === void 0 && a.value !== !1 ? !1 : a.uncheckedValue;
        l("input", j), C === null && Array.isArray(n.value) ? E ? (n.value.push(a.value), a.uncheckedValue !== void 0 && (n.value = n.value.filter(
          (X) => JSON.stringify(X) !== JSON.stringify(a.uncheckedValue)
        ))) : (a.uncheckedValue !== void 0 && n.value.push(a.uncheckedValue), n.value = n.value.filter(
          (X) => JSON.stringify(X) !== JSON.stringify(a.value)
        )) : C !== null ? (y = !0, n.value = j, E === !1 ? C.remove(a.value) : C.set(a.value)) : n.value = j, Ce(() => {
          l("change", j), y = !1;
        });
      }
    });
    se(n, (E) => {
      if (y) {
        y = !1;
        return;
      }
      C !== null && ((E === a.value || E === !0) && k.value !== !0 ? k.value = !0 : (E === a.uncheckedValue || E === !1) && k.value !== !1 && (k.value = !1));
    });
    const f = u(
      () => !!(a.name ?? (C == null ? void 0 : C.name.value)) && (h.value || (C == null ? void 0 : C.required.value))
    ), A = u(
      () => v.value || ((C == null ? void 0 : C.buttons.value) ?? !1)
    ), P = u(() => ({
      plain: c.value || ((C == null ? void 0 : C.plain.value) ?? !1),
      button: b.value || ((C == null ? void 0 : C.buttons.value) ?? !1),
      inline: B.value || ((C == null ? void 0 : C.inline.value) ?? !1),
      switch: m.value || ((C == null ? void 0 : C.switch.value) ?? !1),
      state: F.value || (C == null ? void 0 : C.state.value),
      size: a.size !== void 0 ? a.size : (C == null ? void 0 : C.size.value) ?? "md",
      // This is where the true default is made
      buttonVariant: a.buttonVariant !== null ? a.buttonVariant : (C == null ? void 0 : C.buttonVariant.value) ?? "secondary"
      // This is where the true default is made
    })), p = Uo(P), N = Xo(P), I = Ko(P);
    return t({
      focus: () => {
        _.value = !0;
      },
      blur: () => {
        _.value = !1;
      },
      input: T
    }), (E, j) => (g(), M(tl, {
      skip: A.value,
      class: z(w(p))
    }, {
      default: D(() => {
        var X, W, fe;
        return [
          vt(Y("input", te({ id: w(s) }, E.$attrs, {
            ref_key: "input",
            ref: T,
            "onUpdate:modelValue": j[0] || (j[0] = (Q) => k.value = Q),
            class: w(N),
            type: "checkbox",
            disabled: w(S) || ((X = w(C)) == null ? void 0 : X.disabled.value),
            required: f.value || void 0,
            name: E.name || ((W = w(C)) == null ? void 0 : W.name.value),
            form: E.form || ((fe = w(C)) == null ? void 0 : fe.form.value),
            "aria-label": E.ariaLabel,
            "aria-labelledby": E.ariaLabelledBy,
            "aria-required": f.value || void 0,
            value: E.value,
            indeterminate: w(i)
          }), null, 16, Su), [
            [Gn, k.value]
          ]),
          $.value || w(c) === !1 ? (g(), O("label", {
            key: 0,
            for: w(s),
            class: z(w(I))
          }, [
            V(E.$slots, "default")
          ], 10, wu)) : J("", !0)
        ];
      }),
      _: 3
    }, 8, ["skip", "class"]));
  }
}), Cu = ["id"], ku = ["innerHTML"], $u = ["textContent"], _u = /* @__PURE__ */ H({
  __name: "BFormCheckboxGroup",
  props: {
    id: { default: void 0 },
    form: { default: void 0 },
    modelValue: { default: () => [] },
    ariaInvalid: { type: [String, Boolean], default: void 0 },
    autofocus: { type: [String, Boolean], default: !1 },
    buttonVariant: { default: "secondary" },
    buttons: { type: [String, Boolean], default: !1 },
    disabled: { type: [String, Boolean], default: !1 },
    disabledField: { default: "disabled" },
    htmlField: { default: "html" },
    name: { default: void 0 },
    options: { default: () => [] },
    plain: { type: [String, Boolean], default: !1 },
    required: { type: [String, Boolean], default: !1 },
    size: { default: "md" },
    stacked: { type: [String, Boolean], default: !1 },
    state: { type: [String, Boolean, null], default: null },
    switches: { type: [String, Boolean], default: !1 },
    textField: { default: "text" },
    validated: { type: [String, Boolean], default: !1 },
    valueField: { default: "value" }
  },
  emits: ["input", "update:modelValue", "change"],
  setup(e, { expose: t, emit: l }) {
    const a = e, o = Be(a, "modelValue", l), n = ke(() => a.id, "checkbox"), s = ke(() => a.name, "checkbox"), i = d(() => a.autofocus), r = d(() => a.buttons), c = d(() => a.disabled), b = d(() => a.plain), v = d(() => a.required), m = d(() => a.stacked), S = d(() => a.state), B = d(() => a.switches), h = d(() => a.validated), F = x(null), { focused: C } = Ne(F, {
      initialValue: i.value
    });
    We(bo, {
      set: (k) => {
        let f = [...o.value];
        f = f.filter((A) => JSON.stringify(A) !== JSON.stringify(k)), f.push(k), l("input", f), o.value = f, Ce(() => {
          l("change", f);
        });
      },
      remove: (k) => {
        let f = [...o.value];
        f = f.filter((A) => JSON.stringify(A) !== JSON.stringify(k)), l("input", f), o.value = f, Ce(() => {
          l("change", f);
        });
      },
      modelValue: u(() => o.value),
      switch: B,
      buttonVariant: be(() => a.buttonVariant),
      form: be(() => a.form),
      name: s,
      state: S,
      plain: b,
      size: be(() => a.size),
      inline: u(() => !m.value),
      required: v,
      buttons: r,
      disabled: c
    });
    const T = u(
      () => a.options.map(
        (k, f) => typeof k == "string" || typeof k == "number" ? {
          props: {
            value: k,
            disabled: c.value
          },
          text: k.toString(),
          html: void 0,
          self: Symbol(`checkboxGroupOptionItem${f}`)
        } : {
          props: {
            value: k[a.valueField],
            disabled: k[a.disabledField],
            ...k.props ? k.props : {}
          },
          text: k[a.textField],
          html: k[a.htmlField],
          self: Symbol(`checkboxGroupOptionItem${f}`)
        }
      )
    ), _ = u(() => ({
      required: v.value,
      ariaInvalid: a.ariaInvalid,
      state: S.value,
      validated: h.value,
      buttons: r.value,
      stacked: m.value,
      size: a.size
    })), $ = Jo(_), y = Yo(_);
    return t({
      focus: () => {
        C.value = !0;
      },
      blur: () => {
        C.value = !1;
      }
    }), (k, f) => (g(), O("div", te(w($), {
      id: w(n),
      ref_key: "element",
      ref: F,
      role: "group",
      class: [w(y), "bv-no-focus-ring"],
      tabindex: "-1"
    }), [
      V(k.$slots, "first"),
      (g(!0), O(ve, null, he(T.value, (A) => (g(), M(bn, te({
        key: A.self
      }, A.props), {
        default: D(() => [
          A.html ? (g(), O("span", {
            key: 0,
            innerHTML: A.html
          }, null, 8, ku)) : (g(), O("span", {
            key: 1,
            textContent: K(A.text)
          }, null, 8, $u))
        ]),
        _: 2
      }, 1040))), 128)),
      V(k.$slots, "default")
    ], 16, Cu));
  }
}), Tu = ["for"], Au = ["id", "form", "name", "multiple", "disabled", "capture", "accept", "required", "aria-required", "directory", "webkitdirectory"], Vu = /* @__PURE__ */ H({
  inheritAttrs: !1,
  __name: "BFormFile",
  props: {
    accept: { default: "" },
    autofocus: { type: [String, Boolean], default: !1 },
    capture: { type: [Boolean, String], default: !1 },
    directory: { type: [String, Boolean], default: !1 },
    disabled: { type: [String, Boolean], default: !1 },
    form: { default: void 0 },
    id: { default: void 0 },
    multiple: { type: [String, Boolean], default: !1 },
    name: { default: void 0 },
    noDrop: { type: [String, Boolean], default: !1 },
    noTraverse: { type: [String, Boolean], default: !1 },
    required: { type: [String, Boolean], default: !1 },
    size: { default: void 0 },
    state: { type: [String, Boolean, null], default: null },
    modelValue: { default: null },
    label: { default: "" },
    labelClass: { default: void 0 }
  },
  emits: ["update:modelValue", "change"],
  setup(e, { expose: t, emit: l }) {
    const a = e, o = Ee(), n = Be(a, "modelValue", l), s = ke(() => a.id), i = d(() => a.autofocus), r = d(() => a.directory), c = d(() => a.disabled), b = d(() => a.multiple), v = d(() => a.noDrop);
    d(() => a.noTraverse);
    const m = d(() => a.required), S = d(() => a.state), B = bt(S), h = x(null), { focused: F } = Ne(h, { initialValue: i.value }), C = u(() => !Ve(o.label)), T = u(
      () => typeof a.accept == "string" ? a.accept : a.accept.join(",")
    ), _ = u(
      () => a.capture === "user" || a.capture === "environment" ? a.capture : Ra(a.capture)
    ), $ = u(() => [
      B.value,
      {
        [`form-control-${a.size}`]: a.size !== void 0
      }
    ]), y = (A) => {
      var p, N;
      const P = ((p = h.value) == null ? void 0 : p.files) === null || ((N = h.value) == null ? void 0 : N.files) === void 0 ? null : [...h.value.files];
      n.value = P === null ? null : b.value === !0 ? P : P[0], l("change", A);
    }, k = (A) => {
      v.value === !0 && A.preventDefault();
    }, f = () => {
      n.value = null;
    };
    return se(n, (A) => {
      A === null && h.value !== null && (h.value.value = "");
    }), t({
      focus: () => {
        F.value = !0;
      },
      blur: () => {
        F.value = !1;
      },
      reset: f,
      input: h
    }), (A, P) => (g(), O(ve, null, [
      C.value || A.label ? (g(), O("label", {
        key: 0,
        for: w(s),
        class: z(["form-label", A.labelClass])
      }, [
        V(A.$slots, "label", {}, () => [
          ie(K(A.label), 1)
        ])
      ], 10, Tu)) : J("", !0),
      Y("input", te({ id: w(s) }, A.$attrs, {
        ref_key: "input",
        ref: h,
        type: "file",
        class: ["form-control", $.value],
        form: A.form,
        name: A.name,
        multiple: w(b),
        disabled: w(c),
        capture: _.value,
        accept: T.value || void 0,
        required: w(m) || void 0,
        "aria-required": w(m) || void 0,
        directory: w(r),
        webkitdirectory: w(r),
        onChange: y,
        onDrop: k
      }), null, 16, Au)
    ], 64));
  }
}), hn = ["input", "select", "textarea"], Ou = hn.map((e) => `${e}:not([disabled])`).join(), Eu = [...hn, "a", "button", "label"], Fu = "label", Lu = "invalid-feedback", Pu = "valid-feedback", Nu = "description", Iu = "default", zu = H({
  components: { BCol: Nt, BFormInvalidFeedback: Va, BFormRow: Zt, BFormText: Oa, BFormValidFeedback: Ea },
  props: {
    contentCols: { type: [Boolean, String, Number], default: void 0 },
    contentColsLg: { type: [Boolean, String, Number], default: void 0 },
    contentColsMd: { type: [Boolean, String, Number], default: void 0 },
    contentColsSm: { type: [Boolean, String, Number], default: void 0 },
    contentColsXl: { type: [Boolean, String, Number], default: void 0 },
    description: { type: [String], default: void 0 },
    disabled: { type: [Boolean, String], default: !1 },
    feedbackAriaLive: { type: String, default: "assertive" },
    id: { type: String, default: void 0 },
    invalidFeedback: { type: String, default: void 0 },
    label: { type: String, default: void 0 },
    labelAlign: { type: [Boolean, String, Number], default: void 0 },
    labelAlignLg: { type: [Boolean, String, Number], default: void 0 },
    labelAlignMd: { type: [Boolean, String, Number], default: void 0 },
    labelAlignSm: { type: [Boolean, String, Number], default: void 0 },
    labelAlignXl: { type: [Boolean, String, Number], default: void 0 },
    labelClass: { type: [Array, Object, String], default: void 0 },
    labelCols: { type: [Boolean, String, Number], default: void 0 },
    labelColsLg: { type: [Boolean, String, Number], default: void 0 },
    labelColsMd: { type: [Boolean, String, Number], default: void 0 },
    labelColsSm: { type: [Boolean, String, Number], default: void 0 },
    labelColsXl: { type: [Boolean, String, Number], default: void 0 },
    labelFor: { type: String, default: void 0 },
    labelSize: { type: String, default: void 0 },
    labelSrOnly: { type: [Boolean, String], default: !1 },
    state: { type: [Boolean, String], default: null },
    tooltip: { type: [Boolean, String], default: !1 },
    validFeedback: { type: String, default: void 0 },
    validated: { type: [Boolean, String], default: !1 },
    floating: { type: [Boolean, String], default: !1 }
  },
  setup(e, { attrs: t }) {
    const l = d(() => e.disabled), a = d(() => e.labelSrOnly), o = d(() => e.state), n = d(() => e.tooltip), s = d(() => e.validated), i = d(() => e.floating), r = null, c = ["xs", "sm", "md", "lg", "xl"], b = (y, k) => c.reduce((f, A) => {
      const P = gl(A === "xs" ? "" : A, `${k}Align`), p = y[P] || null;
      return p && (A === "xs" ? f.push(`text-${p}`) : f.push(`text-${A}-${p}`)), f;
    }, []), v = (y, k) => c.reduce((f, A) => {
      const P = gl(A === "xs" ? "" : A, `${k}Cols`);
      let p = y[P];
      return p = p === "" ? !0 : p || !1, typeof p != "boolean" && p !== "auto" && (p = Ts(p, 0), p = p > 0 ? p : !1), p && (A === "xs" ? f[typeof p == "boolean" ? "col" : "cols"] = p : f[A || (typeof p == "boolean" ? "col" : "cols")] = p), f;
    }, {}), m = x(), S = (y, k = null) => {
      if (ja && e.labelFor) {
        const f = ro(`#${is(e.labelFor)}`, m);
        if (f) {
          const A = "aria-describedby", P = (y || "").split(Jt), p = (k || "").split(Jt), N = (qa(f, A) || "").split(Jt).filter((I) => !p.includes(I)).concat(P).filter((I, E, j) => j.indexOf(I) === E).filter((I) => I).join(" ").trim();
          N ? Cs(f, A, N) : ks(f, A);
        }
      }
    }, B = u(() => v(e, "content")), h = u(() => b(e, "label")), F = u(() => v(e, "label")), C = u(
      () => (
        // Determine if the form group will be rendered horizontal
        // based on the existence of 'content-col' or 'label-col' props
        Object.keys(B.value).length > 0 || Object.keys(F.value).length > 0
      )
    ), T = bt(o), _ = u(
      () => da(t.ariaInvalid, o.value)
    );
    return se(
      () => r,
      (y, k) => {
        y !== k && S(y, k);
      }
    ), je(() => {
      Ce(() => {
        S(r);
      });
    }), {
      disabledBoolean: l,
      labelSrOnlyBoolean: a,
      stateBoolean: o,
      tooltipBoolean: n,
      validatedBoolean: s,
      floatingBoolean: i,
      ariaDescribedby: r,
      computedAriaInvalid: _,
      contentColProps: B,
      isHorizontal: C,
      labelAlignClasses: h,
      labelColProps: F,
      onLegendClick: (y) => {
        if (e.labelFor)
          return;
        const { target: k } = y, f = k ? k.tagName : "";
        if (Eu.indexOf(f) !== -1)
          return;
        const A = Ss(Ou, m).filter(Bs);
        A.length === 1 && bs(A[0]);
      },
      stateClass: T
    };
  },
  render() {
    const e = this.$props, t = this.$slots, l = ke(), a = !e.labelFor;
    let o = null;
    const n = xe(Fu, {}, t) || e.label, s = n ? st("_BV_label_") : null;
    if (n || this.isHorizontal) {
      const $ = a ? "legend" : "label";
      if (this.labelSrOnlyBoolean)
        n && (o = de(
          $,
          {
            class: "visually-hidden",
            id: s,
            for: e.labelFor || null
          },
          n
        )), this.isHorizontal ? o = de(Nt, this.labelColProps, { default: () => o }) : o = de("div", {}, [o]);
      else {
        const y = {
          onClick: a ? this.onLegendClick : null,
          ...this.isHorizontal ? this.labelColProps : {},
          tag: this.isHorizontal ? $ : null,
          id: s,
          for: e.labelFor || null,
          tabIndex: a ? "-1" : null,
          class: [
            this.isHorizontal ? "col-form-label" : "form-label",
            {
              "bv-no-focus-ring": a,
              "col-form-label": this.isHorizontal || a,
              "pt-0": !this.isHorizontal && a,
              "d-block": !this.isHorizontal && !a,
              [`col-form-label-${e.labelSize}`]: !!e.labelSize
            },
            this.labelAlignClasses,
            e.labelClass
          ]
        };
        this.isHorizontal ? o = de(Nt, y, { default: () => n }) : o = de($, y, n);
      }
    }
    let i = null;
    const r = xe(Lu, {}, t) || this.invalidFeedback, c = r ? st("_BV_feedback_invalid_") : void 0;
    r && (i = de(
      Va,
      {
        ariaLive: e.feedbackAriaLive,
        id: c,
        state: this.stateBoolean,
        tooltip: this.tooltipBoolean
      },
      { default: () => r }
    ));
    let b = null;
    const v = xe(Pu, {}, t) || this.validFeedback, m = v ? st("_BV_feedback_valid_") : void 0;
    v && (b = de(
      Ea,
      {
        ariaLive: e.feedbackAriaLive,
        id: m,
        state: this.stateBoolean,
        tooltip: this.tooltipBoolean
      },
      { default: () => v }
      // validFeedbackContent
    ));
    let S = null;
    const B = xe(Nu, {}, t) || this.description, h = B ? st("_BV_description_") : void 0;
    B && (S = de(
      Oa,
      {
        id: h
      },
      { default: () => B }
    ));
    const F = this.ariaDescribedby = [
      h,
      this.stateBoolean === !1 ? c : null,
      this.stateBoolean === !0 ? m : null
    ].filter(($) => $).join(" ") || null, C = [
      xe(Iu, { ariaDescribedby: F, descriptionId: h, id: l, labelId: s }, t) || "",
      i,
      b,
      S
    ];
    !this.isHorizontal && this.floatingBoolean && C.push(o);
    let T = de(
      "div",
      {
        ref: "content",
        class: [
          {
            "form-floating": !this.isHorizontal && this.floatingBoolean
          }
        ]
      },
      C
    );
    this.isHorizontal && (T = de(Nt, { ref: "content", ...this.contentColProps }, { default: () => C }));
    const _ = {
      class: [
        this.stateClass,
        {
          "was-validated": this.validatedBoolean
        }
      ],
      id: ke(() => e.id).value,
      disabled: a ? this.disabledBoolean : null,
      role: a ? null : "group",
      "aria-invalid": this.computedAriaInvalid,
      // Only apply `aria-labelledby` if we are a horizontal fieldset
      // as the legend is no longer a direct child of fieldset
      "aria-labelledby": a && this.isHorizontal ? s : null
    };
    return this.isHorizontal && !a ? de(Zt, _, { default: () => [o, T] }) : de(
      a ? "fieldset" : "div",
      _,
      this.isHorizontal && a ? [de(Zt, null, { default: () => [o, T] })] : this.isHorizontal || !this.floatingBoolean ? [o, T] : [T]
    );
  }
}), Hu = ["id", "name", "form", "type", "disabled", "placeholder", "required", "autocomplete", "readonly", "min", "max", "step", "list", "aria-required", "aria-invalid"], xu = /* @__PURE__ */ H({
  __name: "BFormInput",
  props: {
    max: { default: void 0 },
    min: { default: void 0 },
    step: { default: void 0 },
    type: { default: "text" },
    ariaInvalid: { type: [String, Boolean], default: void 0 },
    autocomplete: { default: void 0 },
    autofocus: { type: [String, Boolean], default: !1 },
    disabled: { type: [String, Boolean], default: !1 },
    form: { default: void 0 },
    debounce: { default: 0 },
    debounceMaxWait: { default: void 0 },
    formatter: { type: Function, default: void 0 },
    id: { default: void 0 },
    lazy: { type: [String, Boolean], default: !1 },
    lazyFormatter: { type: [String, Boolean], default: !1 },
    list: { default: void 0 },
    modelValue: { default: "" },
    name: { default: void 0 },
    number: { type: [String, Boolean], default: !1 },
    placeholder: { default: void 0 },
    plaintext: { type: [String, Boolean], default: !1 },
    readonly: { type: [String, Boolean], default: !1 },
    required: { type: [String, Boolean], default: !1 },
    size: { default: void 0 },
    state: { type: [String, Boolean, null], default: null },
    trim: { type: [String, Boolean], default: !1 }
  },
  emits: ["update:modelValue", "change", "blur", "input"],
  setup(e, { expose: t, emit: l }) {
    const a = e, { input: o, computedId: n, computedAriaInvalid: s, onInput: i, onChange: r, onBlur: c, focus: b, blur: v } = Zo(a, l), m = d(() => a.disabled), S = d(() => a.required), B = d(() => a.readonly), h = d(() => a.plaintext), F = d(() => a.state), C = bt(F), T = x(!1), _ = u(() => {
      const $ = a.type === "range", y = a.type === "color";
      return [
        C.value,
        {
          "form-control-highlighted": T.value,
          "form-range": $,
          "form-control": y || !a.plaintext && !$,
          "form-control-color": y,
          "form-control-plaintext": a.plaintext && !$ && !y,
          [`form-control-${a.size}`]: !!a.size
        }
      ];
    });
    return t({
      focus: b,
      blur: v,
      input: o
    }), ($, y) => (g(), O("input", {
      id: w(n),
      ref_key: "input",
      ref: o,
      class: z(_.value),
      name: $.name || void 0,
      form: $.form || void 0,
      type: $.type,
      disabled: w(m),
      placeholder: $.placeholder,
      required: w(S) || void 0,
      autocomplete: $.autocomplete || void 0,
      readonly: w(B) || w(h),
      min: $.min,
      max: $.max,
      step: $.step,
      list: $.type !== "password" ? $.list : void 0,
      "aria-required": w(S) || void 0,
      "aria-invalid": w(s),
      onInput: y[0] || (y[0] = (k) => w(i)(k)),
      onChange: y[1] || (y[1] = (k) => w(r)(k)),
      onBlur: y[2] || (y[2] = (k) => w(c)(k))
    }, null, 42, Hu));
  }
}), Ru = ["id", "checked", "disabled", "required", "name", "form", "aria-label", "aria-labelledby", "value", "aria-required"], Mu = ["for"], Bn = /* @__PURE__ */ H({
  inheritAttrs: !1,
  __name: "BFormRadio",
  props: {
    ariaLabel: { default: void 0 },
    ariaLabelledby: { default: void 0 },
    form: { default: void 0 },
    id: { default: void 0 },
    name: { default: void 0 },
    size: { default: void 0 },
    autofocus: { type: [String, Boolean], default: !1 },
    modelValue: { type: [Boolean, String, Array, Object, Number, null], default: void 0 },
    plain: { type: [String, Boolean], default: !1 },
    button: { type: [String, Boolean], default: !1 },
    buttonGroup: { type: [String, Boolean], default: !1 },
    disabled: { type: [String, Boolean], default: !1 },
    buttonVariant: { default: null },
    inline: { type: [String, Boolean], default: !1 },
    required: { type: [String, Boolean], default: !1 },
    state: { type: [String, Boolean, null], default: null },
    value: { type: [String, Boolean, Object, Number], default: !0 }
  },
  emits: ["input", "change", "update:modelValue"],
  setup(e, { expose: t, emit: l }) {
    const a = e, o = Ee(), n = Be(a, "modelValue", l, { passive: !0 }), s = ke(() => a.id, "form-check"), i = d(() => a.autofocus), r = d(() => a.plain), c = d(() => a.button), b = d(() => a.buttonGroup), v = d(() => a.disabled), m = d(() => a.inline), S = d(() => a.required), B = d(() => a.state), h = Oe(ho, null), F = x(null), { focused: C } = Ne(F, {
      initialValue: i.value
    }), T = u(() => !Ve(o.default)), _ = u({
      get: () => h !== null ? JSON.stringify(h.modelValue.value) === JSON.stringify(a.value) : JSON.stringify(n.value) === JSON.stringify(a.value),
      set: (p) => {
        const N = p || p === "" || p === 0 || JSON.stringify(p) === JSON.stringify(a.value) ? a.value : !1;
        l("input", N), n.value = N, Ce(() => {
          l("change", N);
        }), h !== null && h.set(a.value);
      }
    });
    se(n, (p) => {
      h === null || p === !1 || h.set(a.value);
    });
    const $ = u(
      () => !!(a.name ?? (h == null ? void 0 : h.name.value)) && (S.value || (h == null ? void 0 : h.required.value))
    ), y = u(
      () => b.value || ((h == null ? void 0 : h.buttons.value) ?? !1)
    ), k = u(() => ({
      plain: r.value || ((h == null ? void 0 : h.plain.value) ?? !1),
      button: c.value || ((h == null ? void 0 : h.buttons.value) ?? !1),
      inline: m.value || ((h == null ? void 0 : h.inline.value) ?? !1),
      state: B.value || (h == null ? void 0 : h.state.value),
      size: a.size !== void 0 ? a.size : (h == null ? void 0 : h.size.value) ?? "md",
      // This is where the true default is made
      buttonVariant: a.buttonVariant !== null ? a.buttonVariant : (h == null ? void 0 : h.buttonVariant.value) ?? "secondary"
      // This is where the true default is made
    })), f = Uo(k), A = Xo(k), P = Ko(k);
    return t({
      focus: () => {
        C.value = !0;
      },
      blur: () => {
        C.value = !1;
      },
      input: F
    }), (p, N) => (g(), M(tl, {
      skip: y.value,
      class: z(w(f))
    }, {
      default: D(() => {
        var I, E, j;
        return [
          vt(Y("input", te({ id: w(s) }, p.$attrs, {
            ref_key: "input",
            ref: F,
            "onUpdate:modelValue": N[0] || (N[0] = (X) => _.value = X),
            checked: _.value,
            class: w(A),
            type: "radio",
            disabled: w(v) || ((I = w(h)) == null ? void 0 : I.disabled.value),
            required: $.value || void 0,
            name: p.name || ((E = w(h)) == null ? void 0 : E.name.value),
            form: p.form || ((j = w(h)) == null ? void 0 : j.form.value),
            "aria-label": p.ariaLabel,
            "aria-labelledby": p.ariaLabelledby,
            value: p.value,
            "aria-required": $.value || void 0
          }), null, 16, Ru), [
            [Wn, _.value]
          ]),
          T.value || w(r) === !1 ? (g(), O("label", {
            key: 0,
            for: w(s),
            class: z(w(P))
          }, [
            V(p.$slots, "default")
          ], 10, Mu)) : J("", !0)
        ];
      }),
      _: 3
    }, 8, ["skip", "class"]));
  }
}), Du = ["id"], ju = ["innerHTML"], qu = ["textContent"], Gu = /* @__PURE__ */ H({
  __name: "BFormRadioGroup",
  props: {
    size: { default: "md" },
    form: { default: void 0 },
    id: { default: void 0 },
    name: { default: void 0 },
    modelValue: { type: [String, Boolean, Array, Object, Number, null], default: null },
    ariaInvalid: { type: [String, Boolean], default: void 0 },
    autofocus: { type: [String, Boolean], default: !1 },
    buttonVariant: { default: "secondary" },
    buttons: { type: [String, Boolean], default: !1 },
    disabled: { type: [String, Boolean], default: !1 },
    disabledField: { default: "disabled" },
    htmlField: { default: "html" },
    options: { default: () => [] },
    plain: { type: [String, Boolean], default: !1 },
    required: { type: [String, Boolean], default: !1 },
    stacked: { type: [String, Boolean], default: !1 },
    state: { type: [String, Boolean, null], default: null },
    textField: { default: "text" },
    validated: { type: [String, Boolean], default: !1 },
    valueField: { default: "value" }
  },
  emits: ["input", "update:modelValue", "change"],
  setup(e, { expose: t, emit: l }) {
    const a = e, o = Be(a, "modelValue", l), n = ke(() => a.id, "radio"), s = ke(() => a.name, "checkbox"), i = d(() => a.autofocus), r = d(() => a.buttons), c = d(() => a.disabled), b = d(() => a.plain), v = d(() => a.required), m = d(() => a.stacked), S = d(() => a.state), B = d(() => a.validated), h = x(null), { focused: F } = Ne(h, {
      initialValue: i.value
    });
    We(ho, {
      set: (y) => {
        l("input", y), o.value = y, Ce(() => {
          l("change", y);
        });
      },
      modelValue: u(() => o.value),
      buttonVariant: be(() => a.buttonVariant),
      form: be(() => a.form),
      name: s,
      buttons: r,
      state: S,
      plain: b,
      size: be(() => a.size),
      inline: u(() => !m.value),
      required: v,
      disabled: c
    });
    const C = u(
      () => a.options.map(
        (y, k) => typeof y == "string" || typeof y == "number" ? {
          props: {
            value: y,
            disabled: c.value
          },
          text: y.toString(),
          html: void 0,
          self: Symbol(`radioGroupOptionItem${k}`)
        } : {
          props: {
            value: y[a.valueField],
            disabled: y[a.disabledField],
            ...y.props ? y.props : {}
          },
          text: y[a.textField],
          html: y[a.htmlField],
          self: Symbol(`radioGroupOptionItem${k}`)
        }
      )
    ), T = u(() => ({
      required: v.value,
      ariaInvalid: a.ariaInvalid,
      state: S.value,
      validated: B.value,
      buttons: r.value,
      stacked: m.value,
      size: a.size
    })), _ = Jo(T), $ = Yo(T);
    return t({
      focus: () => {
        F.value = !0;
      },
      blur: () => {
        F.value = !1;
      }
    }), (y, k) => (g(), O("div", te(w(_), {
      id: w(n),
      ref_key: "element",
      ref: h,
      role: "radiogroup",
      class: [w($), "bv-no-focus-ring"],
      tabindex: "-1"
    }), [
      V(y.$slots, "first"),
      (g(!0), O(ve, null, he(C.value, (f) => (g(), M(Bn, te({
        key: f.self
      }, f.props), {
        default: D(() => [
          f.html ? (g(), O("span", {
            key: 0,
            innerHTML: f.html
          }, null, 8, ju)) : (g(), O("span", {
            key: 1,
            textContent: K(f.text)
          }, null, 8, qu))
        ]),
        _: 2
      }, 1040))), 128)),
      V(y.$slots, "default")
    ], 16, Du));
  }
}), Wu = ["value", "disabled"], sl = /* @__PURE__ */ H({
  __name: "BFormSelectOption",
  props: {
    value: { default: void 0 },
    disabled: { type: [String, Boolean], default: !1 }
  },
  setup(e) {
    const t = e, l = d(() => t.disabled);
    return (a, o) => (g(), O("option", {
      value: a.value,
      disabled: w(l)
    }, [
      V(a.$slots, "default")
    ], 8, Wu));
  }
}), Uu = ["label"], Sn = /* @__PURE__ */ H({
  __name: "BFormSelectOptionGroup",
  props: {
    label: { default: void 0 },
    disabledField: { default: "disabled" },
    htmlField: { default: "html" },
    options: { default: () => [] },
    textField: { default: "text" },
    valueField: { default: "value" }
  },
  setup(e) {
    const t = e, l = u(
      () => al(t.options, "BFormSelectOptionGroup", t)
    );
    return (a, o) => (g(), O("optgroup", { label: a.label }, [
      V(a.$slots, "first"),
      (g(!0), O(ve, null, he(l.value, (n, s) => (g(), M(sl, te({
        key: s,
        value: n.value,
        disabled: n.disabled
      }, a.$attrs, {
        innerHTML: n.html || n.text
      }), null, 16, ["value", "disabled", "innerHTML"]))), 128)),
      V(a.$slots, "default")
    ], 8, Uu));
  }
}), Xu = ["id", "name", "form", "multiple", "size", "disabled", "required", "aria-required", "aria-invalid"], Ku = /* @__PURE__ */ H({
  __name: "BFormSelect",
  props: {
    ariaInvalid: { type: [String, Boolean], default: void 0 },
    autofocus: { type: [String, Boolean], default: !1 },
    disabled: { type: [String, Boolean], default: !1 },
    disabledField: { default: "disabled" },
    form: { default: void 0 },
    htmlField: { default: "html" },
    id: { default: void 0 },
    labelField: { default: "label" },
    multiple: { type: [String, Boolean], default: !1 },
    name: { default: void 0 },
    options: { default: () => [] },
    optionsField: { default: "options" },
    plain: { type: [String, Boolean], default: !1 },
    required: { type: [String, Boolean], default: !1 },
    selectSize: { default: 0 },
    size: { default: "md" },
    state: { type: [String, Boolean, null], default: null },
    textField: { default: "text" },
    valueField: { default: "value" },
    modelValue: { default: "" }
  },
  emits: ["input", "update:modelValue", "change"],
  setup(e, { expose: t, emit: l }) {
    const a = e, o = Be(a, "modelValue", l), n = ke(() => a.id, "input"), s = d(() => a.autofocus), i = d(() => a.disabled), r = d(() => a.multiple), c = d(() => a.plain), b = d(() => a.required), v = d(() => a.state), m = we(() => a.selectSize), S = bt(v), B = x(), { focused: h } = Ne(B, {
      initialValue: s.value
    }), F = u(() => [
      S.value,
      {
        "form-control": c.value,
        [`form-control-${a.size}`]: a.size !== "md" && c.value,
        "form-select": !c.value,
        [`form-select-${a.size}`]: a.size !== "md" && !c.value
      }
    ]), C = u(
      () => m.value || c.value ? m.value : void 0
    ), T = u(
      () => da(a.ariaInvalid, v.value)
    ), _ = u(() => al(a.options, "BFormSelect", a)), $ = u({
      get: () => o.value,
      // eslint-disable-next-line @typescript-eslint/no-explicit-any
      set: (y) => {
        l("input", y), o.value = y, Ce(() => {
          l("change", y);
        });
      }
    });
    return t({
      focus: () => {
        h.value = !0;
      },
      blur: () => {
        h.value = !1;
      },
      input: B
    }), (y, k) => vt((g(), O("select", {
      id: w(n),
      ref_key: "input",
      ref: B,
      "onUpdate:modelValue": k[0] || (k[0] = (f) => $.value = f),
      class: z(F.value),
      name: y.name,
      form: y.form || void 0,
      multiple: w(r) || void 0,
      size: C.value,
      disabled: w(i),
      required: w(b) || void 0,
      "aria-required": w(b) || void 0,
      "aria-invalid": T.value
    }, [
      V(y.$slots, "first"),
      (g(!0), O(ve, null, he(_.value, (f, A) => (g(), O(ve, { key: A }, [
        Array.isArray(f.options) ? (g(), M(Sn, {
          key: 0,
          label: f.label,
          options: f.options
        }, null, 8, ["label", "options"])) : (g(), M(sl, {
          key: 1,
          value: f.value,
          disabled: f.disabled,
          innerHTML: f.html || f.text
        }, null, 8, ["value", "disabled", "innerHTML"]))
      ], 64))), 128)),
      V(y.$slots, "default")
    ], 10, Xu)), [
      [Un, $.value]
    ]);
  }
}), Nl = [
  "ar",
  "az",
  "ckb",
  "fa",
  "he",
  "ks",
  "lrc",
  "mzn",
  "ps",
  "sd",
  "te",
  "ug",
  "ur",
  "yi"
].map((e) => e.toLowerCase()), Ju = (e) => {
  const t = Qt(e).toLowerCase().replace(ts, "").split("-"), l = t.slice(0, 2).join("-"), [a] = t;
  return Nl.includes(l) || Nl.includes(a);
}, Yu = (e) => vs ? ha(e) ? e : { capture: !!e || !1 } : !!(ha(e) ? e.capture : e), Zu = (e, t, l, a) => {
  e && e.addEventListener && e.addEventListener(t, l, Yu(a));
}, Qu = (e, t, l, a) => {
  e && e.removeEventListener && e.removeEventListener(t, l, a);
}, Il = (e, t) => {
  (e ? Zu : Qu)(...t);
}, Xt = (e, { preventDefault: t = !0, propagation: l = !0, immediatePropagation: a = !1 } = {}) => {
  t && e.preventDefault(), l && e.stopPropagation(), a && e.stopImmediatePropagation();
}, Fa = "ArrowDown", wn = "End", Cn = "Home", kn = "PageDown", $n = "PageUp", La = "ArrowUp", zl = 1, Hl = 100, xl = 1, Rl = 500, Ml = 100, Dl = 10, jl = 4, ql = [La, Fa, Cn, wn, $n, kn], ed = H({
  props: {
    ariaControls: { type: String, default: void 0 },
    ariaLabel: { type: String, default: void 0 },
    labelIncrement: { type: String, default: "Increment" },
    labelDecrement: { type: String, default: "Decrement" },
    modelValue: { type: Number, default: null },
    // V-model prop
    name: { type: String, default: "BFormSpinbutton" },
    disabled: { type: [Boolean, String], default: !1 },
    placeholder: { type: String, default: void 0 },
    locale: { type: String, default: "locale" },
    form: { type: String, default: void 0 },
    inline: { type: Boolean, default: !1 },
    size: { type: String, default: void 0 },
    formatterFn: {
      type: Function,
      default: void 0
    },
    readonly: { type: Boolean, default: !1 },
    vertical: { type: Boolean, default: !1 },
    repeatDelay: {
      type: [String, Number],
      default: Rl
    },
    repeatInterval: {
      type: [String, Number],
      default: Ml
    },
    repeatStepMultiplier: {
      type: [String, Number],
      default: jl
    },
    repeatThreshold: {
      type: [String, Number],
      default: Dl
    },
    required: { type: [Boolean, String], default: !1 },
    step: { type: [String, Number], default: xl },
    min: { type: [String, Number], default: zl },
    max: { type: [String, Number], default: Hl },
    wrap: { type: Boolean, default: !1 },
    state: { type: [Boolean, String], default: null }
  },
  emits: ["update:modelValue", "change"],
  setup(e, { emit: t }) {
    const l = Be(e, "modelValue", t), a = x(!1), o = u(() => 1), n = () => {
      t("change", i.value);
    }, s = x(null), i = u({
      get: () => l.value === null ? s.value : l.value,
      set: (q) => {
        l.value === null ? s.value = q : l.value = q;
      }
    });
    let r, c, b = !1;
    const v = u(() => Yt(e.step, xl)), m = u(() => Yt(e.min, zl)), S = u(() => {
      const q = Yt(e.max, Hl), ae = v.value, Z = m.value;
      return Math.floor((q - Z) / ae) * ae + Z;
    }), B = u(() => {
      const q = it(e.repeatDelay, 0);
      return q > 0 ? q : Rl;
    }), h = u(() => {
      const q = it(e.repeatInterval, 0);
      return q > 0 ? q : Ml;
    }), F = u(
      () => Math.max(it(e.repeatThreshold, Dl), 1)
    ), C = u(
      () => Math.max(it(e.repeatStepMultiplier, jl), 1)
    ), T = u(() => {
      const q = v.value;
      return Math.floor(q) === q ? 0 : (q.toString().split(".")[1] || "").length;
    }), _ = u(() => Math.pow(10, T.value || 0)), $ = u(() => {
      const { value: q } = i;
      return q === null ? "" : q.toFixed(T.value);
    }), y = u(() => {
      const q = [e.locale];
      return new Intl.NumberFormat(q).resolvedOptions().locale;
    }), k = u(
      () => (
        //todo
        Ju(y.value)
      )
    ), f = () => {
      const q = T.value;
      return new Intl.NumberFormat(y.value, {
        style: "decimal",
        useGrouping: !1,
        minimumIntegerDigits: 1,
        minimumFractionDigits: q,
        maximumFractionDigits: q,
        notation: "standard"
      }).format;
    }, A = u(() => e.formatterFn ?? f()), P = u(() => ({
      role: "group",
      lang: y.value,
      tabindex: e.disabled ? null : "-1",
      title: e.ariaLabel
    })), p = u(() => l.value !== null || s.value !== null), N = u(() => ({
      dir: k.value,
      spinId: o.value,
      tabindex: e.disabled ? null : "0",
      role: "spinbutton",
      "aria-live": "off",
      "aria-label": e.ariaLabel || null,
      "aria-controls": e.ariaControls || null,
      "aria-invalid": e.state === !1 || !p.value && e.required ? !0 : null,
      "aria-required": e.required ? !0 : null,
      "aria-valuemin": m.value,
      "aria-valuemax": S.value,
      "aria-valuenow": i.value !== null ? i.value : null,
      "aria-valuetext": i.value !== null ? A.value(i.value) : null
    })), I = (q) => {
      let { value: ae } = i;
      if (!e.disabled && ae !== null) {
        const Z = v.value * q, ue = m.value, oe = S.value, L = _.value, { wrap: R } = e;
        ae = Math.round((ae - ue) / Z) * Z + ue + Z, ae = Math.round(ae * L) / L, i.value = ae > oe ? R ? ue : oe : ae < ue ? R ? oe : ue : ae;
      }
    }, E = (q = 1) => {
      i.value === null ? i.value = m.value : I(1 * q);
    }, j = (q = 1) => {
      i.value === null ? i.value = e.wrap ? S.value : m.value : I(-1 * q);
    }, X = (q) => {
      const { code: ae, altKey: Z, ctrlKey: ue, metaKey: oe } = q;
      if (!(e.disabled || e.readonly || Z || ue || oe) && ql.includes(ae)) {
        if (Xt(q, { propagation: !1 }), b)
          return;
        re(), [La, Fa].includes(ae) ? (b = !0, ae === La ? fe(q, E) : ae === Fa && fe(q, j)) : ae === $n ? E(C.value) : ae === kn ? j(C.value) : ae === Cn ? i.value = m.value : ae === wn && (i.value = S.value);
      }
    }, W = (q) => {
      const { code: ae, altKey: Z, ctrlKey: ue, metaKey: oe } = q;
      e.disabled || e.readonly || Z || ue || oe || ql.includes(ae) && (Xt(q, { propagation: !1 }), re(), b = !1, n());
    }, fe = (q, ae) => {
      const { type: Z } = q || {};
      if (!e.disabled && !e.readonly) {
        if (Q(q) && Z === "mousedown" && q.button)
          return;
        re(), ae(1);
        const ue = F.value, oe = C.value, L = B.value, R = h.value;
        r = setTimeout(() => {
          let G = 0;
          c = setInterval(() => {
            ae(G < ue ? 1 : oe), G++;
          }, R);
        }, L);
      }
    }, Q = (q) => q.type === "mouseup" || q.type === "mousedown", pe = (q) => {
      Q(q) && q.type === "mouseup" && q.button || (Xt(q, { propagation: !1 }), re(), ee(!1), n());
    }, ee = (q) => {
      try {
        Il(q, [document.body, "mouseup", pe, !1]), Il(q, [document.body, "touchend", pe, !1]);
      } catch {
        return 0;
      }
    }, re = () => {
      clearTimeout(r), clearInterval(c), r = void 0, c = void 0;
    }, ge = (q, ae, Z, ue, oe, L, R) => {
      const G = de(Z, {
        props: { scale: a.value ? 1.5 : 1.25 },
        attrs: { "aria-hidden": !0 }
      }), ce = { hasFocus: a.value }, $e = (U) => {
        !e.disabled && !e.readonly && (Xt(U, { propagation: !1 }), ee(!0), fe(U, q));
      };
      return de(
        "button",
        {
          class: [{ "py-0": !e.vertical }, "btn", "btn-sm", "border-0", "rounded-0"],
          tabindex: "-1",
          type: "button",
          disabled: e.disabled || e.readonly || L,
          "aria-disabled": e.disabled || e.readonly || L ? !0 : null,
          "aria-controls": o.value,
          "aria-label": ae || null,
          "aria-keyshortcuts": oe || null,
          onmousedown: $e,
          ontouchstart: $e
          // 'ref': keyRef,
        },
        [xe(R, ce) || G]
      );
    };
    return () => {
      const q = ge(
        E,
        e.labelIncrement,
        de(
          "svg",
          {
            xmlns: "http://www.w3.org/2000/svg",
            width: "16",
            height: "16",
            fill: "currentColor",
            class: "bi bi-plus",
            viewBox: "0 0 16 16"
          },
          de("path", {
            d: "M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z"
          })
        ),
        "inc",
        "ArrowUp",
        !1,
        "increment"
      ), ae = ge(
        j,
        e.labelDecrement,
        de(
          "svg",
          {
            xmlns: "http://www.w3.org/2000/svg",
            width: "16",
            height: "16",
            fill: "currentColor",
            class: "bi bi-dash",
            viewBox: "0 0 16 16"
          },
          de("path", { d: "M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8z" })
        ),
        "dec",
        "ArrowDown",
        !1,
        "decrement"
      ), Z = [];
      e.name && !e.disabled && Z.push(
        de("input", {
          type: "hidden",
          name: e.name,
          form: e.form || null,
          // TODO: Should this be set to '' if value is out of range?
          value: $.value,
          key: "hidden"
        })
      );
      const ue = de(
        // We use 'output' element to make this accept a `<label for="id">` (Except IE)
        "output",
        {
          class: [
            { "d-flex": e.vertical },
            { "align-self-center": !e.vertical },
            { "align-items-center": e.vertical },
            { "border-top": e.vertical },
            { "border-bottom": e.vertical },
            { "border-start": !e.vertical },
            { "border-end": !e.vertical },
            "flex-grow-1"
          ],
          ...N.value,
          key: "output"
          // ref: 'spinner',
        },
        [
          de(
            "bdi",
            // eslint-disable-next-line @typescript-eslint/ban-ts-comment
            //@ts-ignore How can we narrow this type down
            p.value ? A.value(i.value) : e.placeholder || ""
          )
        ]
      );
      return de(
        "div",
        {
          class: [
            "b-form-spinbutton form-control",
            { disabled: e.disabled },
            { readonly: e.readonly },
            { focus: a },
            { "d-inline-flex": e.inline || e.vertical },
            { "d-flex": !e.inline && !e.vertical },
            { "align-items-stretch": !e.vertical },
            { "flex-column": e.vertical },
            e.size ? `form-control-${e.size}` : null
            // this.stateClass //TODO
          ],
          ...P.value,
          onkeydown: X,
          onkeyup: W
          // We use capture phase (`!` prefix) since focus and blur do not bubble
          // 'focus': onFocusBlur, //TODO
          // 'blur': onFocusBlur, //TODO
        },
        e.vertical ? [q, Z, ue, ae] : [ae, Z, ue, q]
      );
    };
  }
}), td = ["id"], _n = /* @__PURE__ */ H({
  __name: "BFormTag",
  props: {
    id: { default: void 0 },
    title: { default: void 0 },
    disabled: { type: [String, Boolean], default: !1 },
    noRemove: { type: [String, Boolean], default: !1 },
    pill: { type: [String, Boolean], default: !1 },
    removeLabel: { default: "Remove tag" },
    tag: { default: "span" },
    variant: { default: "secondary" }
  },
  emits: ["remove"],
  setup(e, { emit: t }) {
    const l = e, a = Ee(), o = ke(() => l.id), n = d(() => l.disabled), s = d(() => l.noRemove), i = d(() => l.pill), r = u(
      () => {
        var v;
        return ((((v = a.default) == null ? void 0 : v.call(a)[0].children) ?? "").toString() || l.title) ?? "";
      }
    ), c = u(() => `${o.value}taglabel__`), b = u(() => ({
      [`bg-${l.variant}`]: l.variant !== null,
      "text-dark": l.variant !== null && ["warning", "info", "light"].includes(l.variant),
      "rounded-pill": i.value,
      disabled: n.value
    }));
    return (v, m) => (g(), M(le(v.tag), {
      id: w(o),
      title: r.value,
      class: z(["badge b-form-tag d-inline-flex align-items-center mw-100", b.value]),
      "aria-labelledby": c.value
    }, {
      default: D(() => [
        Y("span", {
          id: c.value,
          class: "b-form-tag-content flex-grow-1 text-truncate"
        }, [
          V(v.$slots, "default", {}, () => [
            ie(K(r.value), 1)
          ])
        ], 8, td),
        !w(n) && !w(s) ? (g(), M(Pt, {
          key: 0,
          "aria-keyshortcuts": "Delete",
          "aria-label": v.removeLabel,
          class: "b-form-tag-remove",
          "aria-describedby": c.value,
          "aria-controls": v.id,
          onClick: m[0] || (m[0] = (S) => t("remove", r.value))
        }, null, 8, ["aria-label", "aria-describedby", "aria-controls"])) : J("", !0)
      ]),
      _: 3
    }, 8, ["id", "title", "class", "aria-labelledby"]));
  }
}), ad = ["id"], ld = ["id", "for", "aria-live"], od = ["id", "aria-live"], nd = ["id"], sd = ["aria-controls"], id = {
  role: "group",
  class: "d-flex"
}, rd = ["id", "disabled", "value", "type", "placeholder", "form", "required", "aria-required"], ud = ["disabled"], dd = {
  "aria-live": "polite",
  "aria-atomic": "true"
}, cd = {
  key: 0,
  class: "d-block invalid-feedback"
}, fd = {
  key: 1,
  class: "form-text text-body-secondary"
}, vd = {
  key: 2,
  class: "form-text text-body-secondary"
}, pd = ["name", "value"], md = /* @__PURE__ */ H({
  __name: "BFormTags",
  props: {
    addButtonText: { default: "Add" },
    addButtonVariant: { default: "outline-secondary" },
    addOnChange: { type: [String, Boolean], default: !1 },
    autofocus: { type: [String, Boolean], default: !1 },
    disabled: { type: [String, Boolean], default: !1 },
    duplicateTagText: { default: "Duplicate tag(s)" },
    inputAttrs: { default: void 0 },
    inputClass: { default: void 0 },
    inputId: { default: void 0 },
    inputType: { default: "text" },
    invalidTagText: { default: "Invalid tag(s)" },
    form: { default: void 0 },
    limit: { default: void 0 },
    limitTagsText: { default: "Tag limit reached" },
    modelValue: { default: () => [] },
    name: { default: void 0 },
    noAddOnEnter: { type: [String, Boolean], default: !1 },
    noOuterFocus: { type: [String, Boolean], default: !1 },
    noTagRemove: { type: [String, Boolean], default: !1 },
    placeholder: { default: "Add tag..." },
    removeOnDelete: { type: [String, Boolean], default: !1 },
    required: { type: [String, Boolean], default: !1 },
    separator: { default: void 0 },
    state: { type: [String, Boolean, null], default: null },
    size: { default: "md" },
    tagClass: { default: void 0 },
    tagPills: { type: [String, Boolean], default: !1 },
    tagRemoveLabel: { default: void 0 },
    tagRemovedLabel: { default: "Tag removed" },
    tagValidator: { type: Function, default: () => !0 },
    tagVariant: { default: "secondary" }
  },
  emits: ["update:modelValue", "input", "tag-state", "focus", "focusin", "focusout", "blur"],
  setup(e, { expose: t, emit: l }) {
    const a = e, o = Be(a, "modelValue", l), n = ke(), s = d(() => a.addOnChange), i = d(() => a.autofocus), r = d(() => a.disabled), c = d(() => a.noAddOnEnter), b = d(() => a.noOuterFocus), v = d(() => a.noTagRemove), m = d(() => a.removeOnDelete), S = d(() => a.required), B = d(() => a.state), h = d(() => a.tagPills), F = we(u(() => a.limit ?? NaN)), C = bt(B), T = x(null), { focused: _ } = Ne(T, {
      initialValue: i.value
    }), $ = u(() => a.inputId || `${n.value}input__`), y = x(o.value), k = x(""), f = x(o.value.length > 0), A = x(""), P = x([]), p = x([]), N = x([]), I = u(() => [
      C.value,
      {
        [`form-control-${a.size}`]: a.size !== "md",
        disabled: r.value,
        focus: _.value
      }
    ]), E = u(() => y.value.includes(k.value)), j = u(
      () => k.value === "" ? !1 : !a.tagValidator(k.value)
    ), X = u(() => y.value.length === F.value), W = u(() => !j.value && !E.value), fe = u(() => ({
      addButtonText: a.addButtonText,
      addButtonVariant: a.addButtonVariant,
      addTag: ue,
      disableAddButton: W.value,
      disabled: r.value,
      duplicateTagText: a.duplicateTagText,
      duplicateTags: N.value,
      form: a.form,
      inputAttrs: {
        ...a.inputAttrs,
        disabled: r.value,
        form: a.form,
        id: $,
        value: k
      },
      inputHandlers: {
        input: re,
        keydown: q,
        change: ge
      },
      inputId: $,
      inputType: a.inputType,
      invalidTagText: a.invalidTagText,
      invalidTags: p.value,
      isDuplicate: E.value,
      isInvalid: j.value,
      isLimitReached: X.value,
      limitTagsText: a.limitTagsText,
      limit: F.value,
      noTagRemove: v.value,
      placeholder: a.placeholder,
      removeTag: oe,
      required: S.value,
      separator: a.separator,
      size: a.size,
      state: B.value,
      tagClass: a.tagClass,
      tagPills: h.value,
      tagRemoveLabel: a.tagRemoveLabel,
      tagVariant: a.tagVariant,
      tags: y.value
    }));
    se(o, (L) => {
      y.value = L;
    });
    const Q = (L) => {
      if (r.value) {
        L.target.blur();
        return;
      }
      l("focusin", L);
    }, pe = (L) => {
      r.value || b.value || (_.value = !0, l("focus", L));
    }, ee = (L) => {
      _.value = !1, l("blur", L);
    }, re = (L) => {
      var G, ce;
      const R = typeof L == "string" ? L : L.target.value;
      if (f.value = !1, (G = a.separator) != null && G.includes(R.charAt(0)) && R.length > 0) {
        T.value && (T.value.value = "");
        return;
      }
      if (k.value = R, (ce = a.separator) != null && ce.includes(R.charAt(R.length - 1))) {
        ue(R.slice(0, R.length - 1));
        return;
      }
      P.value = a.tagValidator(R) && !E.value ? [R] : [], p.value = a.tagValidator(R) ? [] : [R], N.value = E.value ? [R] : [], l("tag-state", P.value, p.value, N.value);
    }, ge = (L) => {
      s.value && (re(L), E.value || ue(k.value));
    }, q = (L) => {
      if (L.key === "Enter" && !c.value) {
        ue(k.value);
        return;
      }
      (L.key === "Backspace" || L.key === "Delete") && m.value && k.value === "" && f.value && y.value.length > 0 ? oe(y.value[y.value.length - 1]) : f.value = !0;
    };
    Vt(q, { target: T });
    const ae = u(() => {
      if (a.separator)
        return typeof a.separator == "string" ? a.separator : a.separator.join("");
    }), Z = u(() => {
      if (ae.value)
        return new RegExp(`[${ss(ae.value)}]+`);
    }), ue = (L) => {
      L = (L ?? k.value).trim();
      const R = Z.value ? L.split(Z.value).map(($e) => $e.trim()) : [L], G = [];
      for (const $e of R)
        if (!($e === "" || E.value || !a.tagValidator($e))) {
          if (F.value && X.value)
            break;
          G.push($e);
        }
      const ce = [...o.value, ...G];
      k.value = "", f.value = !0, o.value = ce, l("input", ce), _.value = !0;
    }, oe = (L) => {
      const R = y.value.indexOf((L == null ? void 0 : L.toString()) ?? "");
      A.value = y.value.splice(R, 1).toString(), o.value = y.value;
    };
    return t({
      focus: () => {
        _.value = !0;
      },
      blur: () => {
        _.value = !1;
      },
      input: T
    }), (L, R) => (g(), O("div", {
      id: w(n),
      class: z(["b-form-tags form-control h-auto", I.value]),
      role: "group",
      tabindex: "-1",
      onFocusin: Q,
      onFocusout: R[1] || (R[1] = (G) => l("focusout", G))
    }, [
      Y("output", {
        id: `${w(n)}selected_tags__`,
        class: "visually-hidden",
        for: $.value,
        "aria-live": w(_) ? "polite" : "off",
        "aria-atomic": "true",
        "aria-relevant": "additions text"
      }, K(y.value.join(", ")), 9, ld),
      Y("div", {
        id: `${w(n)}removed_tags__`,
        role: "status",
        "aria-live": w(_) ? "assertive" : "off",
        "aria-atomic": "true",
        class: "visually-hidden"
      }, " (" + K(L.tagRemovedLabel) + ") " + K(A.value), 9, od),
      V(L.$slots, "default", Ae(Pe(fe.value)), () => [
        Y("ul", {
          id: `${w(n)}tag_list__`,
          class: "b-form-tags-list list-unstyled mb-0 d-flex flex-wrap align-items-center"
        }, [
          (g(!0), O(ve, null, he(y.value, (G, ce) => V(L.$slots, "tag", {
            key: ce,
            tag: G,
            tagClass: L.tagClass,
            tagVariant: L.tagVariant,
            tagPills: w(h),
            removeTag: oe
          }, () => [
            (g(), M(_n, {
              key: G,
              class: z(L.tagClass),
              tag: "li",
              variant: L.tagVariant,
              pill: L.tagPills,
              onRemove: oe
            }, {
              default: D(() => [
                ie(K(G), 1)
              ]),
              _: 2
            }, 1032, ["class", "variant", "pill"]))
          ])), 128)),
          Y("li", {
            role: "none",
            "aria-live": "off",
            class: "b-from-tags-field flex-grow-1",
            "aria-controls": `${w(n)}tag_list__`
          }, [
            Y("div", id, [
              Y("input", te({
                id: $.value,
                ref_key: "input",
                ref: T,
                disabled: w(r),
                value: k.value,
                type: L.inputType,
                placeholder: L.placeholder,
                class: "b-form-tags-input w-100 flex-grow-1 p-0 m-0 bg-transparent border-0",
                style: { outline: "currentcolor none 0px", "min-width": "5rem" }
              }, L.inputAttrs, {
                form: L.form,
                required: w(S) || void 0,
                "aria-required": w(S) || void 0,
                onInput: re,
                onChange: ge,
                onFocus: pe,
                onBlur: ee
              }), null, 16, rd),
              W.value ? (g(), O("button", {
                key: 0,
                type: "button",
                class: z(["btn b-form-tags-button py-0", [
                  L.inputClass,
                  {
                    [`btn-${L.addButtonVariant}`]: L.addButtonVariant !== null,
                    "disabled invisible": k.value.length === 0
                  }
                ]]),
                style: { "font-size": "90%" },
                disabled: w(r) || k.value.length === 0 || X.value,
                onClick: R[0] || (R[0] = (G) => ue(k.value))
              }, [
                V(L.$slots, "add-button-text", {}, () => [
                  ie(K(L.addButtonText), 1)
                ])
              ], 10, ud)) : J("", !0)
            ])
          ], 8, sd)
        ], 8, nd),
        Y("div", dd, [
          j.value ? (g(), O("div", cd, K(L.invalidTagText) + ": " + K(k.value), 1)) : J("", !0),
          E.value ? (g(), O("small", fd, K(L.duplicateTagText) + ": " + K(k.value), 1)) : J("", !0),
          y.value.length === L.limit ? (g(), O("small", vd, "Tag limit reached")) : J("", !0)
        ])
      ]),
      L.name ? (g(!0), O(ve, { key: 0 }, he(y.value, (G, ce) => (g(), O("input", {
        key: ce,
        type: "hidden",
        name: L.name,
        value: G
      }, null, 8, pd))), 128)) : J("", !0)
    ], 42, ad));
  }
}), gd = ["id", "name", "form", "disabled", "placeholder", "required", "autocomplete", "readonly", "aria-required", "aria-invalid", "rows", "wrap"], yd = /* @__PURE__ */ H({
  __name: "BFormTextarea",
  props: {
    noResize: { type: [String, Boolean], default: !1 },
    rows: { default: 2 },
    wrap: { default: "soft" },
    ariaInvalid: { type: [String, Boolean], default: void 0 },
    autocomplete: { default: void 0 },
    autofocus: { type: [String, Boolean], default: !1 },
    disabled: { type: [String, Boolean], default: !1 },
    form: { default: void 0 },
    debounce: { default: 0 },
    debounceMaxWait: { default: void 0 },
    formatter: { type: Function, default: void 0 },
    id: { default: void 0 },
    lazy: { type: [String, Boolean], default: !1 },
    lazyFormatter: { type: [String, Boolean], default: !1 },
    list: { default: void 0 },
    modelValue: { default: "" },
    name: { default: void 0 },
    number: { type: [String, Boolean], default: !1 },
    placeholder: { default: void 0 },
    plaintext: { type: [String, Boolean], default: !1 },
    readonly: { type: [String, Boolean], default: !1 },
    required: { type: [String, Boolean], default: !1 },
    size: { default: void 0 },
    state: { type: [String, Boolean, null], default: null },
    trim: { type: [String, Boolean], default: !1 }
  },
  emits: ["update:modelValue", "change", "blur", "input"],
  setup(e, { expose: t, emit: l }) {
    const a = e, { input: o, computedId: n, computedAriaInvalid: s, onInput: i, onChange: r, onBlur: c, focus: b, blur: v } = Zo(a, l), m = d(() => a.disabled), S = d(() => a.required), B = d(() => a.readonly), h = d(() => a.plaintext), F = d(() => a.noResize), C = d(() => a.state), T = bt(C), _ = u(() => [
      T.value,
      {
        "form-control": !a.plaintext,
        "form-control-plaintext": a.plaintext,
        [`form-control-${a.size}`]: !!a.size
      }
    ]), $ = u(() => ({
      resize: F.value ? "none" : void 0
    }));
    return t({
      focus: b,
      blur: v,
      input: o
    }), (y, k) => (g(), O("textarea", {
      id: w(n),
      ref_key: "input",
      ref: o,
      class: z(_.value),
      name: y.name || void 0,
      form: y.form || void 0,
      disabled: w(m),
      placeholder: y.placeholder,
      required: w(S) || void 0,
      autocomplete: y.autocomplete || void 0,
      readonly: w(B) || w(h),
      "aria-required": y.required || void 0,
      "aria-invalid": w(s),
      rows: y.rows,
      style: Re($.value),
      wrap: y.wrap || void 0,
      onInput: k[0] || (k[0] = (f) => w(i)(f)),
      onChange: k[1] || (k[1] = (f) => w(r)(f)),
      onBlur: k[2] || (k[2] = (f) => w(c)(f))
    }, null, 46, gd));
  }
}), bd = {
  key: 0,
  class: "input-group-text"
}, hd = ["innerHTML"], Bd = { key: 1 }, Sd = {
  key: 0,
  class: "input-group-text"
}, wd = ["innerHTML"], Cd = { key: 1 }, kd = /* @__PURE__ */ H({
  __name: "BInputGroup",
  props: {
    append: { default: void 0 },
    appendHtml: { default: void 0 },
    id: { default: void 0 },
    prepend: { default: void 0 },
    prependHtml: { default: void 0 },
    size: { default: "md" },
    tag: { default: "div" }
  },
  setup(e) {
    const t = e, l = u(() => ({
      [`input-group-${t.size}`]: t.size !== "md"
    })), a = u(() => !!t.append || !!t.appendHtml), o = u(() => !!t.prepend || !!t.prependHtml);
    return (n, s) => (g(), M(le(n.tag), {
      id: n.id,
      class: z(["input-group", l.value]),
      role: "group"
    }, {
      default: D(() => [
        V(n.$slots, "prepend", {}, () => [
          o.value ? (g(), O("span", bd, [
            n.prependHtml ? (g(), O("span", {
              key: 0,
              innerHTML: n.prependHtml
            }, null, 8, hd)) : (g(), O("span", Bd, K(n.prepend), 1))
          ])) : J("", !0)
        ]),
        V(n.$slots, "default"),
        V(n.$slots, "append", {}, () => [
          a.value ? (g(), O("span", Sd, [
            n.appendHtml ? (g(), O("span", {
              key: 0,
              innerHTML: n.appendHtml
            }, null, 8, wd)) : (g(), O("span", Cd, K(n.append), 1))
          ])) : J("", !0)
        ])
      ]),
      _: 3
    }, 8, ["id", "class"]));
  }
}), Tn = /* @__PURE__ */ H({
  __name: "BInputGroupText",
  props: {
    tag: { default: "div" },
    text: { default: void 0 }
  },
  setup(e) {
    return (t, l) => (g(), M(le(t.tag), { class: "input-group-text" }, {
      default: D(() => [
        V(t.$slots, "default", {}, () => [
          ie(K(t.text), 1)
        ])
      ]),
      _: 3
    }));
  }
}), il = /* @__PURE__ */ H({
  __name: "BInputGroupAddon",
  props: {
    isText: { type: [String, Boolean], default: !1 }
  },
  setup(e) {
    const t = e, l = d(() => t.isText);
    return (a, o) => w(l) ? (g(), M(Tn, { key: 0 }, {
      default: D(() => [
        V(a.$slots, "default")
      ]),
      _: 3
    })) : V(a.$slots, "default", { key: 1 });
  }
}), $d = /* @__PURE__ */ H({
  __name: "BInputGroupAppend",
  props: {
    isText: { type: [String, Boolean], default: !1 }
  },
  setup(e) {
    return (t, l) => (g(), M(il, Ae(Pe(t.$props)), {
      default: D(() => [
        V(t.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), _d = /* @__PURE__ */ H({
  __name: "BInputGroupPrepend",
  props: {
    isText: { type: [String, Boolean], default: !1 }
  },
  setup(e) {
    return (t, l) => (g(), M(il, Ae(Pe(t.$props)), {
      default: D(() => [
        V(t.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Td = /* @__PURE__ */ H({
  __name: "BListGroup",
  props: {
    flush: { type: [String, Boolean], default: !1 },
    horizontal: { type: [Boolean, String], default: !1 },
    numbered: { type: [String, Boolean], default: !1 },
    tag: { default: "div" }
  },
  setup(e) {
    const t = e, l = d(() => t.flush), a = d(() => t.numbered), o = u(() => {
      const s = l.value ? !1 : t.horizontal;
      return {
        "list-group-flush": l.value,
        "list-group-horizontal": s === !0,
        [`list-group-horizontal-${s}`]: typeof s == "string",
        "list-group-numbered": a.value
      };
    }), n = u(() => a.value === !0 ? "ol" : t.tag);
    return We(mo, {
      numbered: a
    }), (s, i) => (g(), M(le(n.value), {
      class: z(["list-group", o.value])
    }, {
      default: D(() => [
        V(s.$slots, "default")
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), Ad = /* @__PURE__ */ H({
  __name: "BListGroupItem",
  props: {
    action: { type: [String, Boolean], default: !1 },
    button: { type: [String, Boolean], default: !1 },
    tag: { default: "div" },
    active: { type: [String, Boolean], default: !1 },
    activeClass: { default: void 0 },
    append: { type: [String, Boolean], default: !1 },
    disabled: { type: [String, Boolean], default: !1 },
    href: { default: void 0 },
    rel: { default: void 0 },
    replace: { type: [String, Boolean], default: !1 },
    routerComponentName: { default: "router-link" },
    target: { default: "_self" },
    to: { default: void 0 },
    variant: { default: null },
    opacity: { default: void 0 },
    opacityHover: { default: void 0 },
    underlineVariant: { default: null },
    underlineOffset: { default: void 0 },
    underlineOffsetHover: { default: void 0 },
    underlineOpacity: { default: void 0 },
    underlineOpacityHover: { default: void 0 },
    icon: { type: [String, Boolean] }
  },
  setup(e) {
    const t = e, l = ao(), a = Oe(mo, null), o = d(() => t.action), n = d(() => t.active), s = d(() => t.button), i = d(() => t.disabled), { computedLink: r } = Ft(t), c = u(() => !s.value && r.value), b = u(
      () => a != null && a.numbered.value ? "li" : s.value ? "button" : c.value ? Qe : t.tag
    ), v = u(
      () => o.value || c.value || s.value || ["a", "router-link", "button", "b-link"].includes(t.tag)
    ), m = u(() => ({
      [`list-group-item-${t.variant}`]: t.variant !== null,
      "list-group-item-action": v.value,
      active: n.value,
      disabled: i.value
    })), S = u(() => {
      const B = {};
      return s.value && ((!l || !l.type) && (B.type = "button"), i.value && (B.disabled = !0)), B;
    });
    return (B, h) => (g(), M(le(b.value), te({
      class: ["list-group-item", m.value],
      "aria-current": w(n) ? !0 : void 0,
      "aria-disabled": w(i) ? !0 : void 0,
      target: c.value ? B.target : void 0,
      href: w(s) ? void 0 : B.href,
      to: w(s) ? void 0 : B.to
    }, S.value), {
      default: D(() => [
        V(B.$slots, "default")
      ]),
      _: 3
    }, 16, ["class", "aria-current", "aria-disabled", "target", "href", "to"]));
  }
}), rl = /* @__PURE__ */ H({
  __name: "BOverlay",
  props: {
    bgColor: { default: void 0 },
    blur: { default: "2px" },
    fixed: { type: [String, Boolean], default: !1 },
    noCenter: { type: [String, Boolean], default: !1 },
    noFade: { type: [String, Boolean], default: !1 },
    noWrap: { type: [String, Boolean], default: !1 },
    opacity: { default: 0.85 },
    overlayTag: { default: "div" },
    rounded: { type: [Boolean, String], default: !1 },
    show: { type: [String, Boolean], default: !1 },
    spinnerSmall: { type: [String, Boolean], default: !1 },
    spinnerType: { default: "border" },
    spinnerVariant: { default: void 0 },
    noSpinner: { type: [String, Boolean], default: !1 },
    variant: { default: "light" },
    wrapTag: { default: "div" },
    zIndex: { default: 10 }
  },
  emits: ["click", "hidden", "shown"],
  setup(e, { emit: t }) {
    const l = e, a = { top: 0, left: 0, bottom: 0, right: 0 }, o = d(() => l.fixed), n = d(() => l.noSpinner), s = d(() => l.noCenter), i = d(() => l.noWrap), r = d(() => l.show), c = d(() => l.spinnerSmall), b = u(
      () => l.rounded === !0 || l.rounded === "" ? "rounded" : l.rounded === !1 ? "" : `rounded-${l.rounded}`
    ), v = u(
      () => l.variant !== null && !l.bgColor ? `bg-${l.variant}` : ""
    ), m = u(() => r.value ? !0 : null), S = u(() => ({
      type: l.spinnerType,
      variant: l.spinnerVariant,
      small: c.value
    })), B = u(() => ({
      ...a,
      zIndex: l.zIndex || 10
    })), h = u(() => ({
      "position-absolute": !i.value || !o.value,
      "position-fixed": i.value && o.value
    })), F = u(() => [v.value, b.value]), C = u(() => ({
      ...a,
      opacity: l.opacity,
      backgroundColor: l.bgColor || void 0,
      backdropFilter: l.blur ? `blur(${l.blur})` : void 0
    })), T = u(
      () => s.value ? a : {
        top: "50%",
        left: "50%",
        transform: "translateX(-50%) translateY(-50%)"
      }
    );
    return (_, $) => (g(), M(le(_.wrapTag), {
      class: "b-overlay-wrap position-relative",
      "aria-busy": m.value
    }, {
      default: D(() => [
        V(_.$slots, "default"),
        ye(Lt, {
          "no-fade": _.noFade,
          "trans-props": { enterToClass: "show" },
          name: "fade",
          onOnAfterEnter: $[1] || ($[1] = (y) => t("shown")),
          onOnAfterLeave: $[2] || ($[2] = (y) => t("hidden"))
        }, {
          default: D(() => [
            w(r) ? (g(), M(le(_.overlayTag), {
              key: 0,
              class: z(["b-overlay", h.value]),
              style: Re(B.value),
              onClick: $[0] || ($[0] = (y) => t("click", y))
            }, {
              default: D(() => [
                Y("div", {
                  class: z(["position-absolute", F.value]),
                  style: Re(C.value)
                }, null, 6),
                Y("div", {
                  class: "position-absolute",
                  style: Re(T.value)
                }, [
                  V(_.$slots, "overlay", Ae(Pe(S.value)), () => [
                    w(n) ? J("", !0) : (g(), M(va, Ae(te({ key: 0 }, S.value)), null, 16))
                  ])
                ], 4)
              ]),
              _: 3
            }, 8, ["class", "style"])) : J("", !0)
          ]),
          _: 3
        }, 8, ["no-fade"])
      ]),
      _: 3
    }, 8, ["aria-busy"]));
  }
}), Vd = ["id", "aria-labelledby", "aria-describedby"], Od = ["id"], Ed = /* @__PURE__ */ H({
  inheritAttrs: !1,
  __name: "BModal",
  props: {
    bodyBgVariant: { default: null },
    bodyClass: { default: void 0 },
    bodyTextVariant: { default: null },
    busy: { type: [String, Boolean], default: !1 },
    lazy: { type: [String, Boolean], default: !1 },
    buttonSize: { default: "md" },
    cancelDisabled: { type: [String, Boolean], default: !1 },
    cancelTitle: { default: "Cancel" },
    cancelVariant: { default: "secondary" },
    centered: { type: [String, Boolean], default: !1 },
    contentClass: { default: void 0 },
    dialogClass: { default: void 0 },
    footerBgVariant: { default: null },
    footerBorderVariant: { default: null },
    footerClass: { default: void 0 },
    footerTextVariant: { default: null },
    fullscreen: { type: [Boolean, String], default: !1 },
    headerBgVariant: { default: null },
    headerBorderVariant: { default: null },
    headerClass: { default: void 0 },
    headerCloseClass: { default: void 0 },
    headerCloseLabel: { default: "Close" },
    headerCloseVariant: { default: "secondary" },
    headerTextVariant: { default: null },
    hideBackdrop: { type: [String, Boolean], default: !1 },
    hideFooter: { type: [String, Boolean], default: !1 },
    hideHeader: { type: [String, Boolean], default: !1 },
    hideHeaderClose: { type: [String, Boolean], default: !1 },
    id: { default: void 0 },
    modalClass: { default: void 0 },
    modelValue: { type: [String, Boolean], default: !1 },
    noCloseOnBackdrop: { type: [String, Boolean], default: !1 },
    noCloseOnEsc: { type: [String, Boolean], default: !1 },
    noFade: { type: [String, Boolean], default: !1 },
    autoFocus: { type: [String, Boolean], default: !0 },
    okDisabled: { type: [String, Boolean], default: !1 },
    okOnly: { type: [String, Boolean], default: !1 },
    okTitle: { default: "Ok" },
    okVariant: { default: "primary" },
    scrollable: { type: [String, Boolean], default: !1 },
    show: { type: [String, Boolean], default: !1 },
    size: { default: "md" },
    title: { default: void 0 },
    titleClass: { default: void 0 },
    titleSrOnly: { type: [String, Boolean], default: !1 },
    titleTag: { default: "h5" },
    autoFocusButton: { default: void 0 },
    teleportDisabled: { type: [String, Boolean], default: !1 },
    teleportTo: { default: "body" },
    bodyScrolling: { type: [String, Boolean], default: !1 },
    backdropVariant: { default: void 0 }
  },
  emits: ["update:modelValue", "show", "shown", "hide", "hidden", "hide-prevented", "show-prevented", "ok", "cancel", "close"],
  setup(e, { expose: t, emit: l }) {
    const a = e, o = Ee(), n = ke(() => a.id, "modal"), s = Be(a, "modelValue", l, { passive: !0 }), i = d(() => a.busy), r = d(() => a.lazy), c = d(() => a.cancelDisabled), b = d(() => a.centered), v = d(() => a.hideBackdrop), m = d(() => a.hideFooter), S = d(() => a.hideHeader), B = d(() => a.hideHeaderClose), h = d(s), F = d(() => a.noCloseOnBackdrop), C = d(() => a.noCloseOnEsc), T = d(() => a.noFade), _ = d(() => a.autoFocus), $ = d(() => a.okDisabled), y = d(() => a.okOnly), k = d(() => a.scrollable), f = d(() => a.titleSrOnly), A = d(() => a.teleportDisabled), P = d(() => a.bodyScrolling), p = x(null), N = x(null), I = x(null), E = x(null), j = x(h.value), X = x(!1);
    Vt(
      "Escape",
      () => {
        ne("esc");
      },
      { target: p }
    ), en(h, P);
    const { focused: W } = Ne(p, {
      initialValue: h.value && a.autoFocusButton === void 0
    }), { focused: fe } = Ne(N, {
      initialValue: h.value && a.autoFocusButton === "ok"
    }), { focused: Q } = Ne(I, {
      initialValue: h.value && a.autoFocusButton === "cancel"
    }), { focused: pe } = Ne(E, {
      initialValue: h.value && a.autoFocusButton === "close"
    }), ee = u(() => [
      a.modalClass,
      {
        fade: !T.value,
        show: j.value
      }
    ]), re = u(
      () => r.value === !1 || r.value === !0 && X.value === !0 || r.value === !0 && h.value === !0
    ), ge = u(
      () => a.backdropVariant !== void 0 ? a.backdropVariant : v.value ? "transparent" : "dark"
    ), q = u(() => !Ve(o["header-close"])), ae = u(() => [
      a.dialogClass,
      {
        "modal-fullscreen": a.fullscreen === !0,
        [`modal-fullscreen-${a.fullscreen}-down`]: typeof a.fullscreen == "string",
        [`modal-${a.size}`]: a.size !== "md",
        "modal-dialog-centered": b.value,
        "modal-dialog-scrollable": k.value
      }
    ]), Z = u(() => [
      a.bodyClass,
      {
        [`bg-${a.bodyBgVariant}`]: a.bodyBgVariant !== null,
        [`text-${a.bodyTextVariant}`]: a.bodyTextVariant !== null
      }
    ]), ue = u(() => [
      a.headerClass,
      {
        [`bg-${a.headerBgVariant}`]: a.headerBgVariant !== null,
        [`border-${a.headerBorderVariant}`]: a.headerBorderVariant !== null,
        [`text-${a.headerTextVariant}`]: a.headerTextVariant !== null
      }
    ]), oe = u(() => [a.headerCloseClass]), L = u(() => ({
      variant: q.value ? a.headerCloseVariant : void 0,
      class: oe.value
    })), R = u(() => [
      a.footerClass,
      {
        [`bg-${a.footerBgVariant}`]: a.footerBgVariant !== null,
        [`border-${a.footerBorderVariant}`]: a.footerBorderVariant !== null,
        [`text-${a.footerTextVariant}`]: a.footerTextVariant !== null
      }
    ]), G = u(() => [
      a.titleClass,
      {
        "visually-hidden": f.value
      }
    ]), ce = u(() => c.value || i.value), $e = u(() => $.value || i.value), U = (me, _e = {}) => new Et(me, {
      cancelable: !1,
      target: p.value || null,
      relatedTarget: null,
      trigger: null,
      ..._e,
      componentId: n.value
    }), ne = (me = "") => {
      const _e = U("hide", { cancelable: me !== "", trigger: me });
      if (me === "ok" && l(me, _e), me === "cancel" && l(me, _e), me === "close" && l(me, _e), l("hide", _e), _e.defaultPrevented || me === "backdrop" && F.value || me === "esc" && C.value) {
        l("hide-prevented");
        return;
      }
      s.value = !1;
    }, Le = () => {
      const me = U("show", { cancelable: !0 });
      if (l("show", me), me.defaultPrevented) {
        s.value = !1, l("show-prevented");
        return;
      }
      s.value = !0;
    }, nt = () => {
      _.value !== !1 && (a.autoFocusButton === "ok" ? fe.value = !0 : a.autoFocusButton === "close" ? pe.value = !0 : a.autoFocusButton === "cancel" ? Q.value = !0 : W.value = !0);
    }, Ue = () => Le(), Dt = () => {
      j.value = !0, nt(), l("shown", U("shown")), r.value === !0 && (X.value = !0);
    }, Pn = () => {
      j.value = !1;
    }, Nn = () => {
      l("hidden", U("hidden")), r.value === !0 && (X.value = !1);
    };
    Gi(j), Se(p, "bv-toggle", () => {
      h.value ? ne() : Le();
    });
    const ht = mt({
      cancel: () => ne("cancel"),
      close: () => ne("close"),
      hide: ne,
      ok: () => ne("ok"),
      visible: h
    });
    return t({
      hide: ne,
      show: Le,
      id: n.value
    }), (me, _e) => (g(), M(za, {
      to: me.teleportTo,
      disabled: w(A)
    }, [
      ye(Lt, {
        "no-fade": !0,
        "trans-props": { enterToClass: "show" },
        onBeforeEnter: Ue,
        onAfterEnter: Dt,
        onLeave: Pn,
        onAfterLeave: Nn
      }, {
        default: D(() => [
          vt(Y("div", te({
            id: w(n),
            ref_key: "element",
            ref: p,
            class: ["modal", ee.value],
            role: "dialog",
            "aria-labelledby": `${w(n)}-label`,
            "aria-describedby": `${w(n)}-body`,
            tabindex: "-1"
          }, me.$attrs), [
            Y("div", {
              class: z(["modal-dialog", ae.value])
            }, [
              re.value ? (g(), O("div", {
                key: 0,
                class: z(["modal-content", me.contentClass])
              }, [
                w(S) ? J("", !0) : (g(), O("div", {
                  key: 0,
                  class: z(["modal-header", ue.value])
                }, [
                  V(me.$slots, "header", Ae(Pe(ht)), () => [
                    (g(), M(le(me.titleTag), {
                      id: `${w(n)}-label`,
                      class: z(["modal-title", G.value])
                    }, {
                      default: D(() => [
                        V(me.$slots, "title", Ae(Pe(ht)), () => [
                          ie(K(me.title), 1)
                        ], !0)
                      ]),
                      _: 3
                    }, 8, ["id", "class"])),
                    w(B) ? J("", !0) : (g(), O(ve, { key: 0 }, [
                      q.value ? (g(), M(rt, te({ key: 0 }, L.value, {
                        onClick: _e[0] || (_e[0] = (jt) => ne("close"))
                      }), {
                        default: D(() => [
                          V(me.$slots, "header-close", {}, void 0, !0)
                        ]),
                        _: 3
                      }, 16)) : (g(), M(Pt, te({
                        key: 1,
                        "aria-label": me.headerCloseLabel
                      }, L.value, {
                        onClick: _e[1] || (_e[1] = (jt) => ne("close"))
                      }), null, 16, ["aria-label"]))
                    ], 64))
                  ], !0)
                ], 2)),
                Y("div", {
                  id: `${w(n)}-body`,
                  class: z(["modal-body", Z.value])
                }, [
                  V(me.$slots, "default", Ae(Pe(ht)), void 0, !0)
                ], 10, Od),
                w(m) ? J("", !0) : (g(), O("div", {
                  key: 1,
                  class: z(["modal-footer", R.value])
                }, [
                  V(me.$slots, "footer", Ae(Pe(ht)), () => [
                    V(me.$slots, "cancel", Ae(Pe(ht)), () => [
                      w(y) ? J("", !0) : (g(), M(rt, {
                        key: 0,
                        ref_key: "cancelButton",
                        ref: I,
                        disabled: ce.value,
                        size: me.buttonSize,
                        variant: me.cancelVariant,
                        onClick: _e[2] || (_e[2] = (jt) => ne("cancel"))
                      }, {
                        default: D(() => [
                          ie(K(me.cancelTitle), 1)
                        ]),
                        _: 1
                      }, 8, ["disabled", "size", "variant"]))
                    ], !0),
                    V(me.$slots, "ok", Ae(Pe(ht)), () => [
                      ye(rt, {
                        ref_key: "okButton",
                        ref: N,
                        disabled: $e.value,
                        size: me.buttonSize,
                        variant: me.okVariant,
                        onClick: _e[3] || (_e[3] = (jt) => ne("ok"))
                      }, {
                        default: D(() => [
                          ie(K(me.okTitle), 1)
                        ]),
                        _: 1
                      }, 8, ["disabled", "size", "variant"])
                    ], !0)
                  ], !0)
                ], 2))
              ], 2)) : J("", !0)
            ], 2),
            V(me.$slots, "backdrop", {}, () => [
              ye(rl, {
                variant: ge.value,
                show: w(h),
                "no-spinner": "",
                fixed: "",
                "no-wrap": "",
                blur: null,
                onClick: _e[4] || (_e[4] = (jt) => ne("backdrop"))
              }, null, 8, ["variant", "show"])
            ], !0)
          ], 16, Vd), [
            [ra, w(h)]
          ])
        ]),
        _: 3
      })
    ], 8, ["to", "disabled"]));
  }
});
const Fd = /* @__PURE__ */ pa(Ed, [["__scopeId", "data-v-a0d61a1b"]]), Ld = /* @__PURE__ */ H({
  __name: "BNav",
  props: {
    align: { default: void 0 },
    cardHeader: { type: [String, Boolean], default: !1 },
    fill: { type: [String, Boolean], default: !1 },
    justified: { type: [String, Boolean], default: !1 },
    pills: { type: [String, Boolean], default: !1 },
    small: { type: [String, Boolean], default: !1 },
    tabs: { type: [String, Boolean], default: !1 },
    tag: { default: "ul" },
    vertical: { type: [String, Boolean], default: !1 },
    underline: { type: [String, Boolean], default: !1 }
  },
  setup(e) {
    const t = e, l = d(() => t.cardHeader), a = d(() => t.fill), o = d(() => t.justified), n = d(() => t.pills), s = d(() => t.small), i = d(() => t.tabs), r = d(() => t.vertical), c = Mt(() => t.align), b = d(() => t.underline), v = u(() => ({
      "nav-tabs": i.value,
      "nav-pills": n.value && !i.value,
      "card-header-tabs": !r.value && l.value && i.value,
      "card-header-pills": !r.value && l.value && n.value && !i.value,
      "flex-column": r.value,
      "nav-fill": !r.value && a.value,
      "nav-justified": !r.value && o.value,
      [c.value]: !r.value && t.align !== void 0,
      small: s.value,
      "nav-underline": b.value
    }));
    return (m, S) => (g(), M(le(m.tag), {
      class: z(["nav", v.value])
    }, {
      default: D(() => [
        V(m.$slots, "default")
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), Pd = { class: "d-flex flex-row align-items-center flex-wrap" }, Nd = /* @__PURE__ */ H({
  inheritAttrs: !1,
  __name: "BNavForm",
  props: {
    role: { default: void 0 },
    id: { default: void 0 },
    floating: { type: [String, Boolean], default: !1 },
    novalidate: { type: [String, Boolean], default: !1 },
    validated: { type: [String, Boolean], default: !1 }
  },
  emits: ["submit"],
  setup(e, { emit: t }) {
    const l = (a) => {
      t("submit", a);
    };
    return (a, o) => (g(), O("li", Pd, [
      ye(yn, te(a.$attrs, {
        id: a.id,
        floating: a.floating,
        role: a.role,
        novalidate: a.novalidate,
        validated: a.validated,
        class: "d-flex",
        onSubmit: Ha(l, ["prevent"])
      }), {
        default: D(() => [
          V(a.$slots, "default")
        ]),
        _: 3
      }, 16, ["id", "floating", "role", "novalidate", "validated", "onSubmit"])
    ]));
  }
}), Id = { class: "nav-item" }, zd = /* @__PURE__ */ H({
  __name: "BNavItem",
  props: {
    linkClass: { default: void 0 },
    linkAttrs: { default: void 0 },
    active: { type: [String, Boolean], default: void 0 },
    activeClass: { default: void 0 },
    append: { type: [String, Boolean], default: !1 },
    disabled: { type: [String, Boolean], default: !1 },
    href: { default: void 0 },
    rel: { default: void 0 },
    replace: { type: [String, Boolean], default: !1 },
    routerComponentName: { default: "router-link" },
    target: { default: "_self" },
    to: { default: void 0 },
    variant: { default: void 0 },
    opacity: { default: void 0 },
    opacityHover: { default: void 0 },
    underlineVariant: { default: null },
    underlineOffset: { default: void 0 },
    underlineOffsetHover: { default: void 0 },
    underlineOpacity: { default: void 0 },
    underlineOpacityHover: { default: void 0 },
    icon: { type: [String, Boolean], default: !1 }
  },
  emits: ["click"],
  setup(e, { emit: t }) {
    const l = e, a = d(() => l.disabled), o = u(
      () => Ga(l, [
        "active",
        "activeClass",
        "append",
        "disabled",
        "href",
        "icon",
        "opacity",
        "opacityHover",
        "rel",
        "replace",
        "routerComponentName",
        "target",
        "to",
        "underlineOffset",
        "underlineOffsetHover",
        "underlineOpacity",
        "underlineOpacityHover",
        "underlineVariant",
        "variant"
      ])
    );
    return (n, s) => (g(), O("li", Id, [
      ye(Qe, te({
        class: ["nav-link", n.linkClass]
      }, { ...o.value, ...n.linkAttrs }, {
        "active-class": n.activeClass,
        tabindex: w(a) ? -1 : void 0,
        "aria-disabled": w(a) ? !0 : void 0,
        onClick: s[0] || (s[0] = (i) => t("click", i))
      }), {
        default: D(() => [
          V(n.$slots, "default")
        ]),
        _: 3
      }, 16, ["class", "active-class", "tabindex", "aria-disabled"])
    ]));
  }
}), Hd = { class: "nav-item dropdown" }, xd = /* @__PURE__ */ H({
  __name: "BNavItemDropdown",
  props: {
    ariaLabel: { default: void 0 },
    id: { default: void 0 },
    menuClass: { default: void 0 },
    size: { default: "md" },
    splitClass: { default: void 0 },
    splitVariant: { default: void 0 },
    text: { default: void 0 },
    toggleClass: { default: void 0 },
    autoClose: { type: [Boolean, String], default: !0 },
    block: { type: [String, Boolean], default: !1 },
    disabled: { type: [String, Boolean], default: !1 },
    isNav: { type: [String, Boolean], default: !0 },
    dropup: { type: [String, Boolean], default: !1 },
    dropend: { type: [String, Boolean], default: !1 },
    dropstart: { type: [String, Boolean], default: !1 },
    center: { type: [String, Boolean], default: !1 },
    end: { type: [String, Boolean], default: !1 },
    noFlip: { type: [String, Boolean], default: !1 },
    noShift: { type: [String, Boolean], default: !1 },
    offset: { default: 0 },
    role: { default: "menu" },
    split: { type: [String, Boolean], default: !1 },
    splitButtonType: { default: "button" },
    splitHref: { default: void 0 },
    splitDisabled: { type: [String, Boolean], default: void 0 },
    noCaret: { type: [String, Boolean], default: !1 },
    toggleText: { default: "Toggle dropdown" },
    variant: { default: "link" },
    modelValue: { type: [String, Boolean], default: !1 },
    lazy: { type: [String, Boolean], default: !1 },
    strategy: { default: "absolute" },
    floatingMiddleware: { default: void 0 },
    splitTo: { default: void 0 },
    boundary: { default: "clippingAncestors" }
  },
  emits: ["show", "shown", "hide", "hidden", "hide-prevented", "show-prevented", "click", "toggle", "update:modelValue"],
  setup(e, { expose: t, emit: l }) {
    const a = e, o = x(null), n = () => {
      var r;
      (r = o.value) == null || r.close();
    }, s = () => {
      var r;
      (r = o.value) == null || r.open();
    };
    return t({
      close: n,
      open: s,
      toggle: () => {
        var r;
        (r = o.value) == null || r.toggle();
      }
    }), (r, c) => (g(), O("li", Hd, [
      ye(gn, te({
        ref_key: "dropdown",
        ref: o
      }, a, {
        "is-nav": "",
        onShow: c[0] || (c[0] = (b) => l("show", b)),
        onShown: c[1] || (c[1] = (b) => l("shown")),
        onHide: c[2] || (c[2] = (b) => l("hide", b)),
        onHidden: c[3] || (c[3] = (b) => l("hidden")),
        onHidePrevented: c[4] || (c[4] = (b) => l("hide-prevented")),
        onShowPrevented: c[5] || (c[5] = (b) => l("show-prevented")),
        onClick: c[6] || (c[6] = (b) => l("click", b)),
        onToggle: c[7] || (c[7] = (b) => l("toggle")),
        "onUpdate:modelValue": c[8] || (c[8] = (b) => l("update:modelValue", b))
      }), {
        "button-content": D(() => [
          V(r.$slots, "button-content")
        ]),
        "toggle-text": D(() => [
          V(r.$slots, "toggle-text")
        ]),
        default: D(() => [
          V(r.$slots, "default", {
            hide: n,
            show: s
          })
        ]),
        _: 3
      }, 16)
    ]));
  }
}), Rd = { class: "navbar-text" }, Md = /* @__PURE__ */ H({
  __name: "BNavText",
  props: {
    text: { default: void 0 }
  },
  setup(e) {
    return (t, l) => (g(), O("li", Rd, [
      V(t.$slots, "default", {}, () => [
        ie(K(t.text), 1)
      ])
    ]));
  }
}), Dd = /* @__PURE__ */ H({
  __name: "BNavbar",
  props: {
    fixed: { default: void 0 },
    print: { type: [String, Boolean], default: !1 },
    sticky: { default: void 0 },
    tag: { default: "nav" },
    toggleable: { type: [Boolean, String], default: !1 },
    variant: { default: null },
    container: { type: [String, Boolean], default: "fluid" },
    autoClose: { type: Boolean, default: !0 }
  },
  setup(e) {
    const t = e, l = d(() => t.print), a = u(
      () => t.tag === "nav" ? void 0 : "navigation"
    ), o = u(
      () => typeof t.toggleable == "string" ? `navbar-expand-${t.toggleable}` : t.toggleable === !1 ? "navbar-expand" : void 0
    ), n = u(() => t.container === !0 ? "container" : "container-fluid"), s = u(() => ({
      "d-print": l.value,
      [`sticky-${t.sticky}`]: t.sticky !== void 0,
      [`bg-${t.variant}`]: t.variant !== null,
      [`fixed-${t.fixed}`]: t.fixed !== void 0,
      [`${o.value}`]: o.value !== void 0
    }));
    return We(Ua, {
      tag: be(() => t.tag),
      autoClose: be(() => t.autoClose)
    }), (i, r) => (g(), M(le(i.tag), {
      class: z(["navbar", s.value]),
      role: a.value
    }, {
      default: D(() => [
        i.container !== !1 ? (g(), O("div", {
          key: 0,
          class: z(n.value)
        }, [
          V(i.$slots, "default")
        ], 2)) : V(i.$slots, "default", { key: 1 })
      ]),
      _: 3
    }, 8, ["class", "role"]));
  }
}), jd = /* @__PURE__ */ H({
  __name: "BNavbarBrand",
  props: {
    tag: { default: "div" },
    active: { type: [String, Boolean], default: void 0 },
    activeClass: { default: void 0 },
    append: { type: [String, Boolean], default: !1 },
    disabled: { type: [String, Boolean], default: !1 },
    href: { default: void 0 },
    rel: { default: void 0 },
    replace: { type: [String, Boolean], default: !1 },
    routerComponentName: { default: "router-link" },
    target: { default: "_self" },
    to: { default: void 0 },
    variant: { default: void 0 },
    opacity: { default: void 0 },
    opacityHover: { default: void 0 },
    underlineVariant: { default: null },
    underlineOffset: { default: void 0 },
    underlineOffsetHover: { default: void 0 },
    underlineOpacity: { default: void 0 },
    underlineOpacityHover: { default: void 0 },
    icon: { type: [String, Boolean], default: !1 }
  },
  setup(e) {
    const t = e, { computedLink: l, computedLinkProps: a } = Ft(t, [
      "active",
      "activeClass",
      "append",
      "disabled",
      "href",
      "rel",
      "replace",
      "routerComponentName",
      "target",
      "to",
      "variant",
      "opacity",
      "opacityHover",
      "underlineVariant",
      "underlineOffset",
      "underlineOffsetHover",
      "underlineOpacity",
      "underlineOpacityHover",
      "icon"
    ]), o = u(() => l.value ? Qe : t.tag);
    return (n, s) => (g(), M(le(o.value), te({ class: "navbar-brand" }, w(a)), {
      default: D(() => [
        V(n.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), qd = /* @__PURE__ */ H({
  __name: "BNavbarNav",
  props: {
    align: { default: void 0 },
    fill: { type: [String, Boolean], default: !1 },
    justified: { type: [String, Boolean], default: !1 },
    small: { type: [String, Boolean], default: !1 },
    tag: { default: "ul" }
  },
  setup(e) {
    const t = e, l = d(() => t.fill), a = d(() => t.justified), o = d(() => t.small), n = Mt(() => t.align), s = u(() => ({
      "nav-fill": l.value,
      "nav-justified": a.value,
      [n.value]: t.align !== void 0,
      small: o.value
    }));
    return (i, r) => (g(), O("ul", {
      class: z(["navbar-nav", s.value])
    }, [
      V(i.$slots, "default")
    ], 2));
  }
}), Gl = (e, t) => e.setAttribute("data-bs-theme", t), Gd = {
  mounted(e, t) {
    Gl(e, t.value);
  },
  updated(e, t) {
    Gl(e, t.value);
  }
}, Wd = (e, t) => {
  const { modifiers: l, arg: a, value: o } = e, n = Object.keys(l || {}), s = typeof o == "string" ? o.split(Jt) : o;
  if ($s(t.tagName, "a")) {
    const i = qa(t, "href") || "";
    es.test(i) && n.push(i.replace(Qn, ""));
  }
  return Array.prototype.concat.apply([], [a, s]).forEach((i) => typeof i == "string" && n.push(i)), n.filter((i, r, c) => i && c.indexOf(i) === r);
}, Ud = (e, t) => {
  e.forEach((l) => {
    const a = document.getElementById(l);
    a !== null && a.dispatchEvent(new Event("bv-toggle"));
  }), setTimeout(() => An(e, t), 50);
}, An = (e, t) => {
  let l = !1;
  e.forEach((a) => {
    const o = document.getElementById(a);
    o != null && o.classList.contains("show") && (l = !0), o != null && o.classList.contains("closing") && (l = !1);
  }), t.setAttribute("aria-expanded", l ? "true" : "false"), t.classList.remove(l ? "collapsed" : "not-collapsed"), t.classList.add(l ? "not-collapsed" : "collapsed");
}, Wl = (e, t) => {
  const l = Wd(t, e);
  e.__toggle && e.removeEventListener("click", e.__toggle), e.__toggle = () => Ud(l, e), e.addEventListener("click", e.__toggle), e.setAttribute("aria-controls", l.join(" ")), An(l, e);
}, Pa = {
  mounted: Wl,
  updated: Wl,
  unmounted(e) {
    e.removeEventListener("click", e.__toggle), e.removeAttribute("aria-controls"), e.removeAttribute("aria-expanded");
  }
}, Xd = {
  mounted(e, t) {
    if (!zt(t.value))
      return;
    const a = na(t.value, e);
    !a.content && !a.title || (e.$__state = x({
      ..._t(t, e),
      ...a
    }), sa(e, t));
  },
  updated(e, t) {
    if (!zt(t.value))
      return;
    const a = na(t.value, e);
    if (!(!a.content && !a.title)) {
      if (!e.$__state) {
        e.$__state = x({
          ..._t(t, e),
          ...a
        }), sa(e, t);
        return;
      }
      e.$__state.value = {
        ..._t(t, e),
        ...a
      };
    }
  },
  beforeUnmount(e) {
    tn(e);
  }
}, Kd = {
  mounted(e, t) {
    const l = zt(t.value);
    if (!l)
      return;
    const a = na(t.value, e);
    !a.content && !a.title || (e.$__state = x({
      ..._t(t, e),
      title: a.title ?? a.content ?? "",
      tooltip: l
    }), sa(e, t));
  },
  updated(e, t) {
    const l = zt(t.value);
    if (!l)
      return;
    const a = na(t.value, e);
    if (!(!a.content && !a.title)) {
      if (!e.$__state) {
        e.$__state = x({
          ..._t(t, e),
          title: a.title ?? a.content ?? "",
          tooltip: l
        }), sa(e, t);
        return;
      }
      e.$__state.value = {
        ..._t(t, e),
        title: a.title ?? a.content ?? "",
        tooltip: l
      };
    }
  },
  beforeUnmount(e) {
    tn(e);
  }
}, Ul = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  vBColorMode: Gd,
  vBModal: Pa,
  vBPopover: Xd,
  vBToggle: Pa,
  vBTooltip: Kd
}, Symbol.toStringTag, { value: "Module" })), Jd = ["disabled", "aria-label"], Yd = /* @__PURE__ */ Y("span", { class: "navbar-toggler-icon" }, null, -1), Zd = /* @__PURE__ */ H({
  __name: "BNavbarToggle",
  props: {
    disabled: { type: [String, Boolean], default: !1 },
    label: { default: "Toggle navigation" },
    target: { default: void 0 }
  },
  emits: ["click"],
  setup(e, { emit: t }) {
    const l = e, a = d(() => l.disabled), o = u(() => ({
      disabled: a.value
    })), n = (s) => {
      a.value || t("click", s);
    };
    return (s, i) => vt((g(), O("button", {
      class: z(["navbar-toggler", o.value]),
      type: "button",
      disabled: w(a),
      "aria-label": s.label,
      onClick: n
    }, [
      V(s.$slots, "default", {}, () => [
        Yd
      ])
    ], 10, Jd)), [
      [w(Pa), w(a) ? void 0 : s.target]
    ]);
  }
}), Qd = ["id", "aria-labelledby"], ec = ["id"], tc = /* @__PURE__ */ H({
  inheritAttrs: !1,
  __name: "BOffcanvas",
  props: {
    modelValue: { type: [String, Boolean], default: !1 },
    bodyScrolling: { type: [String, Boolean], default: !1 },
    backdrop: { type: [String, Boolean], default: !0 },
    noCloseOnBackdrop: { type: [String, Boolean], default: !1 },
    noCloseOnEsc: { type: [String, Boolean], default: !1 },
    placement: { default: "start" },
    title: { default: void 0 },
    noHeaderClose: { type: [String, Boolean], default: !1 },
    noHeader: { type: [String, Boolean], default: !1 },
    lazy: { type: [String, Boolean], default: !1 },
    id: { default: void 0 },
    noFocus: { type: [String, Boolean], default: !1 },
    backdropVariant: { default: "dark" },
    headerClass: { default: void 0 },
    headerCloseClass: { default: void 0 },
    headerCloseLabel: { default: "Close" },
    headerCloseVariant: { default: "secondary" },
    bodyClass: { default: void 0 },
    footerClass: { default: void 0 },
    teleportDisabled: { type: [String, Boolean], default: !1 },
    teleportTo: { default: "body" }
  },
  emits: ["update:modelValue", "show", "shown", "hide", "hidden", "hide-prevented", "show-prevented", "esc", "close"],
  setup(e, { expose: t, emit: l }) {
    const a = e, o = Ee(), n = Be(a, "modelValue", l, { passive: !0 }), s = d(n), i = d(() => a.bodyScrolling), r = d(() => a.backdrop), c = d(() => a.noHeaderClose), b = d(() => a.noHeader), v = d(() => a.noFocus), m = d(() => a.noCloseOnBackdrop), S = d(() => a.noCloseOnEsc), B = d(() => a.lazy), h = d(() => a.teleportDisabled), F = ke(() => a.id, "offcanvas");
    en(s, i);
    const C = x(null);
    Vt(
      "Escape",
      () => {
        E("esc");
      },
      { target: C }
    );
    const { focused: T } = Ne(C, {
      initialValue: s.value && v.value === !1
    }), _ = x(s.value), $ = x(!1), y = u(
      () => r.value === !0 && s.value === !0
    ), k = u(
      () => B.value === !1 || B.value === !0 && $.value === !0 || B.value === !0 && s.value === !0
    ), f = u(() => !Ve(o["header-close"])), A = u(() => [
      { "text-reset": !f.value },
      a.headerCloseClass
    ]), P = u(() => ({
      variant: f.value ? a.headerCloseVariant : void 0,
      class: A.value
    })), p = u(() => !Ve(o.footer)), N = u(() => [
      // props.responsive === undefined ? 'offcanvas' : `offcanvas-${props.responsive}`,
      "offcanvas",
      // Remove when above check is fixed
      `offcanvas-${a.placement}`,
      {
        show: s.value && _.value === !0
      }
    ]), I = (ee, re = {}) => new Et(ee, {
      cancelable: !1,
      target: C.value || null,
      relatedTarget: null,
      trigger: null,
      ...re,
      componentId: F.value
    }), E = (ee = "") => {
      const re = I("hide", { cancelable: ee !== "", trigger: ee });
      if (ee === "close" && l(ee, re), ee === "esc" && l(ee, re), l("hide", re), re.defaultPrevented || ee === "backdrop" && m.value || ee === "esc" && S.value) {
        l("hide-prevented");
        return;
      }
      n.value = !1;
    }, j = () => {
      const ee = I("show", { cancelable: !0 });
      if (l("show", ee), ee.defaultPrevented) {
        n.value = !1, l("show-prevented");
        return;
      }
      n.value = !0;
    }, X = () => {
      Ce(() => {
        v.value === !1 && (T.value = !0);
      });
    }, W = () => j(), fe = () => {
      _.value = !0, X(), l("shown", I("shown")), B.value === !0 && ($.value = !0);
    }, Q = () => {
      _.value = !1;
    }, pe = () => {
      l("hidden", I("hidden")), B.value === !0 && ($.value = !1);
    };
    return Se(C, "bv-toggle", () => {
      s.value ? E() : j();
    }), t({
      hide: E,
      show: j
    }), (ee, re) => (g(), M(za, {
      to: ee.teleportTo,
      disabled: w(h)
    }, [
      ye(Lt, {
        "no-fade": !0,
        "trans-props": {
          enterToClass: "showing",
          enterFromClass: "",
          leaveToClass: "hiding show",
          leaveFromClass: "show"
        },
        onBeforeEnter: W,
        onAfterEnter: fe,
        onLeave: Q,
        onAfterLeave: pe
      }, {
        default: D(() => [
          vt(Y("div", te({
            id: w(F),
            ref_key: "element",
            ref: C,
            "aria-modal": "true",
            role: "dialog",
            class: N.value,
            tabindex: "-1",
            "aria-labelledby": `${w(F)}-offcanvas-label`,
            "data-bs-backdrop": "false"
          }, ee.$attrs), [
            k.value ? (g(), O(ve, { key: 0 }, [
              w(b) ? J("", !0) : (g(), O("div", {
                key: 0,
                class: z(["offcanvas-header", ee.headerClass])
              }, [
                V(ee.$slots, "header", {
                  visible: w(s),
                  placement: ee.placement,
                  hide: E
                }, () => [
                  Y("h5", {
                    id: `${w(F)}-offcanvas-label`,
                    class: "offcanvas-title"
                  }, [
                    V(ee.$slots, "title", {
                      visible: w(s),
                      placement: ee.placement,
                      hide: E
                    }, () => [
                      ie(K(ee.title), 1)
                    ])
                  ], 8, ec),
                  w(c) ? J("", !0) : (g(), O(ve, { key: 0 }, [
                    f.value ? (g(), M(rt, te({ key: 0 }, P.value, {
                      onClick: re[0] || (re[0] = (ge) => E("close"))
                    }), {
                      default: D(() => [
                        V(ee.$slots, "header-close")
                      ]),
                      _: 3
                    }, 16)) : (g(), M(Pt, te({
                      key: 1,
                      "aria-label": ee.headerCloseLabel
                    }, P.value, {
                      onClick: re[1] || (re[1] = (ge) => E("close"))
                    }), null, 16, ["aria-label"]))
                  ], 64))
                ])
              ], 2)),
              Y("div", {
                class: z(["offcanvas-body", ee.bodyClass])
              }, [
                V(ee.$slots, "default", {
                  visible: w(s),
                  placement: ee.placement,
                  hide: E
                })
              ], 2),
              p.value ? (g(), O("div", {
                key: 1,
                class: z(ee.footerClass)
              }, [
                V(ee.$slots, "footer", {
                  visible: w(s),
                  placement: ee.placement,
                  hide: E
                })
              ], 2)) : J("", !0)
            ], 64)) : J("", !0)
          ], 16, Qd), [
            [ra, w(n)]
          ])
        ]),
        _: 3
      }),
      V(ee.$slots, "backdrop", {}, () => [
        ye(rl, {
          variant: ee.backdropVariant,
          show: y.value,
          fixed: "",
          "no-wrap": "",
          "no-spinner": "",
          onClick: re[2] || (re[2] = (ge) => E("backdrop"))
        }, null, 8, ["variant", "show"])
      ])
    ], 8, ["to", "disabled"]));
  }
}), ac = 5, Vn = 20, On = 0, Xe = 3, lc = "ellipsis-text", oc = "first-text", nc = "last-text", sc = "next-text", ic = "page", rc = "prev-text", Xl = (e) => Math.max(it(e) || Vn, 1), Kl = (e) => Math.max(it(e) || On, 0), uc = (e, t) => {
  const l = it(e) || 1;
  return l > t ? t : l < 1 ? 1 : l;
}, dc = H({
  name: "BPagination",
  props: {
    align: { type: String, default: "start" },
    ariaControls: { type: String, default: void 0 },
    ariaLabel: { type: String, default: "Pagination" },
    disabled: { type: [Boolean, String], default: !1 },
    ellipsisClass: { type: [Array, String], default: () => [] },
    ellipsisText: { type: String, default: "â¦" },
    firstClass: { type: [Array, String], default: () => [] },
    firstNumber: { type: [Boolean, String], default: !1 },
    firstText: { type: String, default: "Â«" },
    hideEllipsis: { type: [Boolean, String], default: !1 },
    hideGotoEndButtons: { type: [Boolean, String], default: !1 },
    labelFirstPage: { type: String, default: "Go to first page" },
    labelLastPage: { type: String, default: "Go to last page" },
    labelNextPage: { type: String, default: "Go to next page" },
    labelPage: { type: String, default: "Go to page" },
    labelPrevPage: { type: String, default: "Go to previous page" },
    lastClass: { type: [Array, String], default: () => [] },
    lastNumber: { type: [Boolean, String], default: !1 },
    lastText: { type: String, default: "Â»" },
    limit: { type: Number, default: ac },
    modelValue: { type: Number, default: 1 },
    // V-model prop
    nextClass: { type: [Array, String], default: () => [] },
    nextText: { type: String, default: "âº" },
    pageClass: { type: [Array, String], default: () => [] },
    perPage: { type: Number, default: Vn },
    pills: { type: [Boolean, String], default: !1 },
    prevClass: { type: [Array, String], default: () => [] },
    prevText: { type: String, default: "â¹" },
    size: { type: String, default: "md" },
    totalRows: { type: Number, default: On }
  },
  emits: ["update:modelValue", "page-click"],
  setup(e, { emit: t, slots: l }) {
    const a = Be(e, "modelValue", t), o = d(() => e.disabled), n = d(() => e.firstNumber), s = d(() => e.hideEllipsis), i = d(() => e.hideGotoEndButtons), r = d(() => e.lastNumber), c = d(() => e.pills), b = u(
      () => e.align === "fill" ? "start" : e.align
    ), v = Mt(b), m = u(
      () => Math.ceil(Kl(e.totalRows) / Xl(e.perPage))
    ), S = u(() => {
      let k;
      return m.value - a.value + 2 < e.limit && e.limit > Xe ? k = m.value - h.value + 1 : k = a.value - Math.floor(h.value / 2), k < 1 ? k = 1 : k > m.value - h.value && (k = m.value - h.value + 1), e.limit <= Xe && r.value && m.value === k + h.value - 1 && (k = Math.max(k - 1, 1)), k;
    }), B = u(() => {
      const k = m.value - a.value;
      let f = !1;
      return k + 2 < e.limit && e.limit > Xe ? e.limit > Xe && (f = !0) : e.limit > Xe && (f = !!(!s.value || n.value)), S.value <= 1 && (f = !1), f && n.value && S.value < 4 && (f = !1), f;
    }), h = u(() => {
      let k = e.limit;
      return m.value <= e.limit ? k = m.value : a.value < e.limit - 1 && e.limit > Xe ? ((!s.value || r.value) && (k = e.limit - (n.value ? 0 : 1)), k = Math.min(k, e.limit)) : m.value - a.value + 2 < e.limit && e.limit > Xe ? (!s.value || n.value) && (k = e.limit - (r.value ? 0 : 1)) : e.limit > Xe && (k = e.limit - (s.value ? 0 : 2)), k;
    }), F = u(() => {
      const k = m.value - h.value;
      let f = !1;
      a.value < e.limit - 1 && e.limit > Xe ? (!s.value || r.value) && (f = !0) : e.limit > Xe && (f = !!(!s.value || r.value)), S.value > k && (f = !1);
      const A = S.value + h.value - 1;
      return f && r.value && A > m.value - 3 && (f = !1), f;
    }), C = mt({
      pageSize: Xl(e.perPage),
      totalRows: Kl(e.totalRows),
      numberOfPages: m.value
    }), T = (k, f) => {
      if (f === a.value)
        return;
      const { target: A } = k, P = new tt("page-click", {
        cancelable: !0,
        target: A
      });
      t("page-click", P, f), !P.defaultPrevented && (a.value = f);
    }, _ = u(() => e.size ? `pagination-${e.size}` : ""), $ = u(() => c.value ? "b-pagination-pills" : "");
    se(a, (k) => {
      const f = uc(k, m.value);
      f !== a.value && (a.value = f);
    }), se(C, (k, f) => {
      k != null && (f.pageSize !== k.pageSize && f.totalRows === k.totalRows || f.numberOfPages !== k.numberOfPages && a.value > f.numberOfPages) && (a.value = 1);
    });
    const y = u(() => {
      const k = [];
      for (let f = 0; f < h.value; f++)
        k.push({ number: S.value + f, classes: null });
      return k;
    });
    return () => {
      const k = [], f = y.value.map((W) => W.number), A = (W) => W === a.value, P = a.value < 1, p = e.align === "fill", N = (W, fe, Q, pe, ee, re) => {
        const ge = o.value || A(re) || P || W < 1 || W > m.value, q = W < 1 ? 1 : W > m.value ? m.value : W, ae = { disabled: ge, page: q, index: q - 1 }, Z = xe(Q, ae, l) || pe || "";
        return de(
          "li",
          {
            class: [
              "page-item",
              {
                disabled: ge,
                "flex-fill": p,
                "d-flex": p && !ge
              },
              ee
            ]
          },
          // render inner content
          de(
            ge ? "span" : "button",
            {
              class: ["page-link", { "flex-grow-1": !ge && p }],
              "aria-label": fe,
              "aria-controls": e.ariaControls || null,
              "aria-disabled": ge ? !0 : null,
              role: "menuitem",
              type: ge ? null : "button",
              tabindex: ge ? null : "-1",
              onClick: (ue) => {
                ge || T(ue, q);
              }
            },
            Z
          )
        );
      }, I = (W) => de(
        "li",
        {
          class: [
            "page-item",
            "disabled",
            "bv-d-xs-down-none",
            p ? "flex-fill" : "",
            e.ellipsisClass
          ],
          role: "separator",
          key: `ellipsis-${W ? "last" : "first"}`
        },
        [
          de(
            "span",
            { class: ["page-link"] },
            xe(lc, {}, l) || e.ellipsisText || "..."
          )
        ]
      ), E = (W, fe) => {
        const Q = A(W.number) && !P, pe = o.value ? null : Q || P && fe === 0 ? "0" : "-1", ee = {
          active: Q,
          disabled: o.value,
          page: W.number,
          index: W.number - 1,
          content: W.number
        }, re = xe(ic, ee, l) || W.number, ge = de(
          o.value ? "span" : "button",
          {
            class: ["page-link", { "flex-grow-1": !o.value && p }],
            "aria-controls": e.ariaControls || null,
            "aria-disabled": o.value ? !0 : null,
            "aria-label": e.labelPage ? `${e.labelPage} ${W.number}` : null,
            role: "menuitemradio",
            type: o.value ? null : "button",
            tabindex: pe,
            onClick: (q) => {
              o.value || T(q, W.number);
            }
          },
          re
        );
        return de(
          "li",
          {
            class: [
              "page-item",
              {
                disabled: o.value,
                active: Q,
                "flex-fill": p,
                "d-flex": p && !o.value
              },
              e.pageClass
            ],
            role: "presentation",
            key: `page-${W.number}`
          },
          ge
        );
      };
      if (!i.value && !n.value) {
        const W = N(
          1,
          e.labelFirstPage,
          oc,
          e.firstText,
          e.firstClass,
          1
        );
        k.push(W);
      }
      const j = N(
        a.value - 1,
        e.labelFirstPage,
        rc,
        e.prevText,
        e.prevClass,
        1
      );
      k.push(j), n.value && f[0] !== 1 && k.push(E({ number: 1 }, 0)), B.value && k.push(I(!1)), y.value.forEach((W, fe) => {
        const Q = B.value && n.value && f[0] !== 1 ? 1 : 0;
        k.push(E(W, fe + Q));
      }), F.value && k.push(I(!0)), r.value && f[f.length - 1] !== m.value && k.push(E({ number: m.value }, -1));
      const X = N(
        a.value + 1,
        e.labelNextPage,
        sc,
        e.nextText,
        e.nextClass,
        m.value
      );
      if (k.push(X), !r.value && !i.value) {
        const W = N(
          m.value,
          e.labelLastPage,
          nc,
          e.lastText,
          e.lastClass,
          m.value
        );
        k.push(W);
      }
      return de(
        "ul",
        {
          class: ["pagination", _.value, v.value, $.value],
          role: "menubar",
          "aria-disabled": o.value,
          "aria-label": e.ariaLabel || null
        },
        k
      );
    };
  }
}), He = /* @__PURE__ */ H({
  inheritAttrs: !1,
  __name: "BPlaceholder",
  props: {
    tag: { default: "span" },
    wrapperTag: { default: "span" },
    width: { default: void 0 },
    cols: { default: 12 },
    variant: { default: null },
    size: { default: "md" },
    animation: { default: void 0 }
  },
  setup(e) {
    const t = e, l = u(
      () => t.width === void 0 ? void 0 : typeof t.width == "number" ? t.width.toString() : t.width.replace("%", "")
    ), a = u(
      () => t.cols === void 0 ? void 0 : typeof t.cols == "number" ? t.cols.toString() : t.cols
    ), o = u(() => ({
      [`col-${a.value}`]: a.value !== void 0 && l.value === void 0,
      [`bg-${t.variant}`]: t.variant !== null,
      [`placeholder-${t.size}`]: t.size !== "md"
    })), n = u(() => ({
      [`placeholder-${t.animation}`]: t.animation !== void 0
    })), s = u(() => ({
      width: l.value === void 0 ? void 0 : `${l.value}%`
    }));
    return (i, r) => (g(), M(le(i.wrapperTag), {
      class: z(n.value)
    }, {
      default: D(() => [
        (g(), M(le(i.tag), te(i.$attrs, {
          class: ["placeholder", o.value],
          style: s.value
        }), null, 16, ["class", "style"]))
      ]),
      _: 1
    }, 8, ["class"]));
  }
}), En = /* @__PURE__ */ H({
  __name: "BPlaceholderButton",
  props: {
    tag: { default: "div" },
    width: { default: void 0 },
    cols: { default: void 0 },
    variant: { default: "primary" },
    animation: { default: void 0 }
  },
  setup(e) {
    const t = e, l = u(() => ({
      [`btn-${t.variant}`]: t.variant !== null
    }));
    return (a, o) => (g(), M(He, {
      class: z(["btn disabled", l.value]),
      animation: a.animation,
      width: a.width,
      cols: a.cols,
      tag: a.tag
    }, null, 8, ["class", "animation", "width", "cols", "tag"]));
  }
}), cc = /* @__PURE__ */ H({
  __name: "BPlaceholderCard",
  props: {
    noHeader: { type: [String, Boolean], default: !1 },
    headerWidth: { default: 100 },
    headerVariant: { default: void 0 },
    headerAnimation: { default: void 0 },
    headerSize: { default: "md" },
    noFooter: { type: [String, Boolean], default: !1 },
    footerWidth: { default: 100 },
    footerVariant: { default: void 0 },
    footerAnimation: { default: void 0 },
    footerSize: { default: "md" },
    animation: { default: void 0 },
    size: { default: "md" },
    variant: { default: void 0 },
    noButton: { type: [String, Boolean], default: !1 },
    imgBottom: { type: [String, Boolean], default: !1 },
    imgSrc: { default: void 0 },
    imgBlankColor: { default: "#868e96" },
    imgHeight: { default: 100 },
    noImg: { type: [String, Boolean], default: !1 }
  },
  setup(e) {
    const t = e, l = d(() => t.noButton), a = d(() => t.noHeader), o = d(() => t.noFooter), n = d(() => t.noImg), s = u(() => ({
      width: t.footerWidth,
      animation: t.footerAnimation,
      size: l.value ? t.footerSize : void 0,
      variant: t.footerVariant
    })), i = u(() => ({
      animation: t.animation,
      size: t.size,
      variant: t.variant
    }));
    return (r, c) => (g(), M(cn, { "img-bottom": r.imgBottom }, xa({
      default: D(() => [
        V(r.$slots, "default", {}, () => [
          ye(He, te({ cols: "7" }, i.value), null, 16),
          ye(He, te({ cols: "4" }, i.value), null, 16),
          ye(He, te({ cols: "4" }, i.value), null, 16),
          ye(He, te({ cols: "6" }, i.value), null, 16),
          ye(He, te({ cols: "8" }, i.value), null, 16)
        ])
      ]),
      _: 2
    }, [
      w(n) ? void 0 : {
        name: "img",
        fn: D(() => [
          V(r.$slots, "img", {}, () => [
            ye(ia, {
              blank: !r.imgSrc,
              "blank-color": r.imgBlankColor,
              height: r.imgSrc ? void 0 : r.imgHeight,
              src: r.imgSrc,
              top: !r.imgBottom,
              bottom: r.imgBottom
            }, null, 8, ["blank", "blank-color", "height", "src", "top", "bottom"])
          ])
        ]),
        key: "0"
      },
      w(a) ? void 0 : {
        name: "header",
        fn: D(() => [
          V(r.$slots, "header", {}, () => [
            ye(He, {
              width: r.headerWidth,
              variant: r.headerVariant,
              animation: r.headerAnimation,
              size: r.headerSize
            }, null, 8, ["width", "variant", "animation", "size"])
          ])
        ]),
        key: "1"
      },
      w(o) ? void 0 : {
        name: "footer",
        fn: D(() => [
          V(r.$slots, "footer", {}, () => [
            w(l) ? (g(), M(He, Ae(te({ key: 1 }, s.value)), null, 16)) : (g(), M(En, Ae(te({ key: 0 }, s.value)), null, 16))
          ])
        ]),
        key: "2"
      }
    ]), 1032, ["img-bottom"]));
  }
}), ul = /* @__PURE__ */ H({
  __name: "BTableSimple",
  props: {
    bordered: { type: [String, Boolean], default: !1 },
    borderless: { type: [String, Boolean], default: !1 },
    borderVariant: { default: null },
    captionTop: { type: [String, Boolean], default: !1 },
    dark: { type: [String, Boolean], default: !1 },
    hover: { type: [String, Boolean], default: !1 },
    responsive: { type: [Boolean, String], default: !1 },
    stacked: { type: [Boolean, String], default: !1 },
    striped: { type: [String, Boolean], default: !1 },
    small: { type: [String, Boolean], default: !1 },
    tableClass: { default: void 0 },
    tableVariant: { default: null },
    stickyHeader: { type: [String, Boolean], default: !1 }
  },
  setup(e) {
    const t = e, l = d(() => t.captionTop), a = d(() => t.borderless), o = d(() => t.bordered), n = d(() => t.dark), s = d(() => t.hover), i = d(() => t.small), r = d(() => t.striped), c = d(() => t.stickyHeader), b = u(() => [
      t.tableClass,
      "table",
      "b-table",
      {
        "table-bordered": o.value,
        "table-borderless": a.value,
        [`border-${t.borderVariant}`]: t.borderVariant !== null,
        "caption-top": l.value,
        "table-dark": n.value,
        "table-hover": s.value,
        "b-table-stacked": typeof t.stacked == "boolean" && t.stacked,
        [`b-table-stacked-${t.stacked}`]: typeof t.stacked == "string",
        "table-striped": r.value,
        "table-sm": i.value,
        [`table-${t.tableVariant}`]: t.tableVariant !== null
      }
    ]), v = u(() => ({
      "table-responsive": t.responsive === !0,
      [`table-responsive-${t.responsive}`]: typeof t.responsive == "string",
      "b-table-sticky-header": c.value
    }));
    return (m, S) => m.responsive ? (g(), O("div", {
      key: 1,
      class: z(v.value)
    }, [
      Y("table", {
        class: z(b.value)
      }, [
        V(m.$slots, "default")
      ], 2)
    ], 2)) : (g(), O("table", {
      key: 0,
      class: z(b.value)
    }, [
      V(m.$slots, "default")
    ], 2));
  }
}), fc = /* @__PURE__ */ H({
  __name: "BPlaceholderTable",
  props: {
    rows: { default: 3 },
    columns: { default: 5 },
    cellWidth: { default: 100 },
    size: { default: "md" },
    animation: { default: void 0 },
    variant: { default: void 0 },
    headerColumns: { default: void 0 },
    hideHeader: { type: [String, Boolean], default: !1 },
    headerCellWidth: { default: 100 },
    headerSize: { default: "md" },
    headerAnimation: { default: void 0 },
    headerVariant: { default: void 0 },
    footerColumns: { default: void 0 },
    showFooter: { type: [String, Boolean], default: !1 },
    footerCellWidth: { default: 100 },
    footerSize: { default: "md" },
    footerAnimation: { default: void 0 },
    footerVariant: { default: void 0 }
  },
  setup(e) {
    const t = e, l = we(() => t.columns), a = we(() => t.rows), o = u(() => t.headerColumns ?? NaN), n = u(() => t.footerColumns ?? NaN), s = we(o), i = we(n), r = u(() => l.value || 5), c = u(() => a.value || 3), b = u(
      () => t.headerColumns === void 0 ? r.value : s.value
    ), v = u(
      () => t.footerColumns === void 0 ? r.value : i.value
    ), m = d(() => t.hideHeader), S = d(() => t.showFooter);
    return (B, h) => (g(), M(ul, null, {
      default: D(() => [
        w(m) ? J("", !0) : V(B.$slots, "thead", { key: 0 }, () => [
          Y("thead", null, [
            Y("tr", null, [
              (g(!0), O(ve, null, he(b.value, (F, C) => (g(), O("th", { key: C }, [
                ye(He, {
                  size: B.headerSize,
                  variant: B.headerVariant,
                  animation: B.headerAnimation,
                  width: B.headerCellWidth
                }, null, 8, ["size", "variant", "animation", "width"])
              ]))), 128))
            ])
          ])
        ]),
        V(B.$slots, "default", {}, () => [
          Y("tbody", null, [
            (g(!0), O(ve, null, he(c.value, (F, C) => (g(), O("tr", { key: C }, [
              (g(!0), O(ve, null, he(r.value, (T, _) => (g(), O("td", { key: _ }, [
                ye(He, {
                  size: B.size,
                  variant: B.variant,
                  animation: B.animation,
                  width: B.cellWidth
                }, null, 8, ["size", "variant", "animation", "width"])
              ]))), 128))
            ]))), 128))
          ])
        ]),
        w(S) ? V(B.$slots, "tfoot", { key: 1 }, () => [
          Y("tfoot", null, [
            Y("tr", null, [
              (g(!0), O(ve, null, he(v.value, (F, C) => (g(), O("th", { key: C }, [
                ye(He, {
                  size: B.footerSize,
                  variant: B.footerVariant,
                  animation: B.footerAnimation,
                  width: B.footerCellWidth
                }, null, 8, ["size", "variant", "animation", "width"])
              ]))), 128))
            ])
          ])
        ]) : J("", !0)
      ]),
      _: 3
    }));
  }
}), vc = /* @__PURE__ */ H({
  __name: "BPlaceholderWrapper",
  props: {
    loading: { type: [String, Boolean], default: !1 }
  },
  setup(e) {
    const t = e, l = d(() => t.loading);
    return (a, o) => w(l) ? V(a.$slots, "loading", { key: 0 }) : V(a.$slots, "default", { key: 1 });
  }
}), pc = ["aria-valuenow", "aria-valuemax"], Fn = /* @__PURE__ */ H({
  __name: "BProgressBar",
  props: {
    animated: { type: [String, Boolean], default: !1 },
    label: { default: void 0 },
    labelHtml: { default: void 0 },
    max: { default: void 0 },
    precision: { default: 0 },
    showProgress: { type: [String, Boolean], default: !1 },
    showValue: { type: [String, Boolean], default: !1 },
    striped: { type: [String, Boolean], default: !1 },
    value: { default: 0 },
    variant: { default: null }
  },
  setup(e) {
    const t = e, l = Oe(po, null), a = d(() => t.animated), o = d(() => t.showProgress), n = d(() => t.showValue), s = d(() => t.striped), i = u(() => ({
      "progress-bar-animated": a.value || (l == null ? void 0 : l.animated.value),
      "progress-bar-striped": s.value || (l == null ? void 0 : l.striped.value) || a.value || (l == null ? void 0 : l.animated.value),
      [`bg-${t.variant}`]: t.variant !== null
    })), r = we(() => t.precision), c = we(() => t.value), b = we(u(() => t.max ?? NaN)), v = we(u(() => (l == null ? void 0 : l.max.value) ?? NaN)), m = u(
      () => t.labelHtml !== void 0 ? t.labelHtml : n.value || l != null && l.showValue.value ? c.value.toFixed(r.value) : o.value || l != null && l.showProgress.value ? (c.value * 100 / (b.value || 100)).toFixed(r.value) : t.label !== void 0 ? t.label : ""
    ), S = u(
      () => v.value ? `${c.value * 100 / v.value}%` : b.value ? `${c.value * 100 / b.value}%` : typeof t.value == "string" ? t.value : `${t.value}%`
    );
    return (B, h) => (g(), O("div", {
      class: z(["progress-bar", i.value]),
      role: "progressbar",
      "aria-valuenow": B.value,
      "aria-valuemin": "0",
      "aria-valuemax": B.max,
      style: Re({ width: S.value })
    }, [
      V(B.$slots, "default", {}, () => [
        ie(K(m.value), 1)
      ])
    ], 14, pc));
  }
}), mc = /* @__PURE__ */ H({
  __name: "BProgress",
  props: {
    height: { default: void 0 },
    animated: { type: [String, Boolean], default: !1 },
    max: { default: 100 },
    precision: { default: 0 },
    showProgress: { type: [String, Boolean], default: !1 },
    showValue: { type: [String, Boolean], default: !1 },
    striped: { type: [String, Boolean], default: !1 },
    value: { default: 0 },
    variant: { default: void 0 }
  },
  setup(e) {
    const t = e, l = d(() => t.animated), a = d(() => t.showProgress), o = d(() => t.showValue), n = d(() => t.striped);
    return We(po, {
      animated: l,
      max: be(() => t.max),
      showProgress: a,
      showValue: o,
      striped: n
    }), (s, i) => (g(), O("div", {
      class: "progress",
      style: Re({ height: s.height })
    }, [
      V(s.$slots, "default", {}, () => [
        ye(Fn, {
          animated: s.animated,
          max: s.max,
          precision: s.precision,
          "show-progress": s.showProgress,
          "show-value": s.showValue,
          striped: s.striped,
          value: s.value,
          variant: s.variant
        }, null, 8, ["animated", "max", "precision", "show-progress", "show-value", "striped", "value", "variant"])
      ])
    ], 4));
  }
}), Jl = ua("cols", [""], { type: [String, Number], default: null }), gc = H({
  name: "BRow",
  slots: Object,
  props: {
    tag: { type: String, default: "div" },
    gutterX: { type: String, default: null },
    gutterY: { type: String, default: null },
    noGutters: { type: [Boolean, String], default: !1 },
    alignV: { type: String, default: null },
    alignH: { type: String, default: null },
    alignContent: { type: String, default: null },
    ...Jl
  },
  setup(e) {
    const t = d(() => e.noGutters), l = Mt(() => e.alignH), a = u(() => co(e, Jl, "cols", "row-cols"));
    return {
      computedClasses: u(() => [
        a.value,
        {
          [`gx-${e.gutterX}`]: e.gutterX !== null,
          [`gy-${e.gutterY}`]: e.gutterY !== null,
          "g-0": t.value,
          [`align-items-${e.alignV}`]: e.alignV !== null,
          [l.value]: e.alignH !== null,
          [`align-content-${e.alignContent}`]: e.alignContent !== null
        }
      ])
    };
  }
});
function yc(e, t, l, a, o, n) {
  return g(), M(le(e.tag), {
    class: z(["row", e.computedClasses])
  }, {
    default: D(() => [
      V(e.$slots, "default")
    ]),
    _: 3
  }, 8, ["class"]);
}
const bc = /* @__PURE__ */ pa(gc, [["render", yc]]), hc = ["TD", "TH", "TR"], Bc = [
  "a",
  "a *",
  // Include content inside links
  "button",
  "button *",
  // Include content inside buttons
  "input:not(.disabled):not([disabled])",
  "select:not(.disabled):not([disabled])",
  "textarea:not(.disabled):not([disabled])",
  '[role="link"]',
  '[role="link"] *',
  '[role="button"]',
  '[role="button"] *',
  "[tabindex]:not(.disabled):not([disabled])"
].join(","), Kt = (e) => {
  if (!e || !e.target)
    return !1;
  const t = e.target;
  if ("disabled" in t && t.disabled || hc.indexOf(t.tagName) !== -1)
    return !1;
  if (pl(".dropdown-menu", t))
    return !0;
  const l = t.tagName === "LABEL" ? t : pl("label", t);
  if (l) {
    const a = qa(l, "for"), o = a ? ws(a) : ro("input, select, textarea", l);
    if (o && !o.disabled)
      return !0;
  }
  return uo(t, Bc);
}, Sc = ["title", "abbr", "onClick"], wc = { class: "d-inline-flex flex-nowrap align-items-center gap-1" }, Cc = { key: 1 }, kc = { key: 0 }, $c = ["onClick", "onDblclick", "onMouseenter", "onMouseleave"], _c = {
  key: 0,
  class: "b-table-stacked-label"
}, Tc = ["colspan"], Ac = {
  key: 1,
  class: "b-table-empty-slot"
}, Vc = ["colspan"], Oc = { key: 2 }, Ec = { key: 0 }, Fc = ["title", "abbr", "onClick"], Lc = { key: 1 }, Pc = { key: 2 }, Nc = { key: 3 }, Ln = /* @__PURE__ */ H({
  __name: "BTableLite",
  props: {
    align: { default: void 0 },
    caption: { default: void 0 },
    fields: { default: () => [] },
    footClone: { type: [String, Boolean], default: !1 },
    items: { default: () => [] },
    labelStacked: { type: Boolean, default: !1 },
    variant: { default: void 0 },
    showEmpty: { type: [String, Boolean], default: !1 },
    emptyText: { default: "There are no records to show" },
    emptyFilteredText: { default: "There are no records matching your request" },
    fieldColumnClass: { type: Function, default: void 0 },
    tbodyTrClass: { type: Function, default: void 0 },
    virtualFields: { default: 0 },
    bordered: { type: [String, Boolean], default: !1 },
    borderless: { type: [String, Boolean], default: !1 },
    borderVariant: { default: void 0 },
    captionTop: { type: [String, Boolean], default: !1 },
    dark: { type: [String, Boolean], default: !1 },
    hover: { type: [String, Boolean], default: !1 },
    responsive: { type: [Boolean, String], default: !1 },
    stacked: { type: [Boolean, String], default: !1 },
    striped: { type: [String, Boolean], default: !1 },
    small: { type: [String, Boolean], default: !1 },
    tableClass: { default: void 0 },
    stickyHeader: { type: [String, Boolean], default: !1 }
  },
  emits: ["head-clicked", "row-clicked", "row-dbl-clicked", "row-hovered", "row-unhovered"],
  setup(e, { emit: t }) {
    const l = e, a = d(() => l.footClone), o = d(() => l.labelStacked), n = d(() => l.showEmpty), s = we(() => l.virtualFields), i = u(() => [
      l.tableClass,
      {
        [`align-${l.align}`]: l.align !== void 0
      }
    ]), r = u(() => v(l.fields, l.items)), c = u(() => r.value.length + s.value), b = (f) => typeof f == "string" ? cl(f) : f.label !== void 0 ? f.label : typeof f.key == "string" ? cl(f.key) : f.key, v = (f, A) => {
      const P = [];
      return !(f != null && f.length) && (A != null && A.length) ? (Object.keys(A[0]).forEach((p) => P.push({ key: p, label: dl(p) })), P) : (Array.isArray(f) && f.forEach((p) => {
        typeof p == "string" ? P.push({ key: p, label: dl(p) }) : ha(p) && p.key && typeof p.key == "string" && P.push({ ...p });
      }), P);
    }, m = (f, A, P) => {
      const p = ml(f, A);
      return P && typeof P == "function" ? P(p, A, f) : p;
    }, S = (f, A) => m(f, A.key, A.formatter), B = (f, A, P = !1) => {
      const p = typeof f == "string" ? f : f.key;
      t("head-clicked", p, f, A, P);
    }, h = (f, A, P) => {
      t("row-clicked", f, A, P);
    }, F = (f, A, P) => t("row-dbl-clicked", f, A, P), C = (f, A, P) => t("row-hovered", f, A, P), T = (f, A, P) => t("row-unhovered", f, A, P), _ = (f) => {
      f._showDetails = !f._showDetails;
    }, $ = (f) => [
      f.class,
      f.thClass,
      {
        [`table-${f.variant}`]: f.variant !== null,
        "b-table-sticky-column": f.stickyColumn
      },
      ...l.fieldColumnClass ? l.fieldColumnClass(f) : []
    ], y = (f, A) => [
      f.class,
      f.tdClass,
      A != null && A._cellVariants && (A != null && A._cellVariants[f.key]) ? `table-${A == null ? void 0 : A._cellVariants[f.key]}` : void 0,
      {
        [`table-${f.variant}`]: f.variant !== null,
        "b-table-sticky-column": f.stickyColumn
      }
    ], k = (f, A = "row") => {
      const P = [
        f._rowVariant ? `table-${f._rowVariant}` : null,
        f._rowVariant ? `table-${f._rowVariant}` : null
      ];
      if (l.tbodyTrClass) {
        const p = l.tbodyTrClass(f, A);
        p && P.push(...typeof p == "string" ? [p] : p);
      }
      return P;
    };
    return (f, A) => (g(), M(ul, {
      bordered: f.bordered,
      borderless: f.borderless,
      "border-variant": f.borderVariant,
      "caption-top": f.captionTop,
      dark: f.dark,
      hover: f.hover,
      responsive: f.responsive,
      striped: f.striped,
      stacked: f.stacked,
      small: f.small,
      "table-class": i.value,
      "table-variant": f.variant,
      "sticky-header": f.stickyHeader
    }, {
      default: D(() => {
        var P;
        return [
          Y("thead", null, [
            f.$slots["thead-top"] ? V(f.$slots, "thead-top", { key: 0 }) : J("", !0),
            Y("tr", null, [
              V(f.$slots, "thead-tr-prefix"),
              (g(!0), O(ve, null, he(r.value, (p) => (g(), O("th", te({
                key: p.key,
                scope: "col",
                class: $(p),
                title: p.headerTitle,
                abbr: p.headerAbbr,
                style: p.thStyle
              }, p.thAttr, {
                onClick: (N) => B(p, N)
              }), [
                Y("div", wc, [
                  V(f.$slots, "field-prefix", { field: p }),
                  Y("div", null, [
                    f.$slots[`head('${p.key})`] || f.$slots["head()"] ? V(f.$slots, f.$slots[`head('${p.key})`] ? `head(${p.key})` : "head()", {
                      key: 0,
                      label: p.label,
                      column: p.key,
                      field: p,
                      isFoot: !1
                    }) : (g(), O(ve, { key: 1 }, [
                      ie(K(b(p)), 1)
                    ], 64))
                  ])
                ])
              ], 16, Sc))), 128))
            ]),
            f.$slots["thead-sub"] ? (g(), O("tr", Cc, [
              (g(!0), O(ve, null, he(r.value, (p) => (g(), O("td", {
                key: p.key,
                scope: "col",
                class: z([p.class, p.thClass, p.variant ? `table-${p.variant}` : ""])
              }, [
                f.$slots["thead-sub"] ? V(f.$slots, "thead-sub", te({
                  key: 0,
                  items: r.value
                }, p)) : (g(), O(ve, { key: 1 }, [
                  ie(K(p.label), 1)
                ], 64))
              ], 2))), 128))
            ])) : J("", !0)
          ]),
          Y("tbody", null, [
            !f.stacked && f.$slots["top-row"] ? (g(), O("tr", kc, [
              V(f.$slots, "top-row")
            ])) : J("", !0),
            (g(!0), O(ve, null, he(f.items, (p, N) => (g(), O(ve, { key: N }, [
              Y("tr", {
                class: z(k(p, "row")),
                onClick: (I) => !w(Kt)(I) && h(p, N, I),
                onDblclick: (I) => !w(Kt)(I) && F(p, N, I),
                onMouseenter: (I) => !w(Kt)(I) && C(p, N, I),
                onMouseleave: (I) => !w(Kt)(I) && T(p, N, I)
              }, [
                V(f.$slots, "tbody-tr-prefix", { item: p }),
                (g(!0), O(ve, null, he(r.value, (I) => (g(), O("td", te({
                  key: I.key
                }, I.tdAttr, {
                  class: y(I, p)
                }), [
                  f.stacked && w(o) ? (g(), O("label", _c, K(b(I)), 1)) : J("", !0),
                  f.$slots[`cell(${I.key})`] || f.$slots["cell()"] ? V(f.$slots, f.$slots[`cell(${I.key})`] ? `cell(${I.key})` : "cell()", {
                    key: 1,
                    value: w(ml)(p, I.key),
                    index: N,
                    item: p,
                    field: I,
                    items: f.items,
                    toggleDetails: () => _(p),
                    detailsShowing: p._showDetails
                  }) : (g(), O(ve, { key: 2 }, [
                    ie(K(S(p, I)), 1)
                  ], 64))
                ], 16))), 128))
              ], 42, $c),
              p._showDetails === !0 && f.$slots["row-details"] ? (g(), O("tr", {
                key: 0,
                class: z(k(p, "row-details"))
              }, [
                Y("td", { colspan: c.value }, [
                  V(f.$slots, "row-details", {
                    item: p,
                    toggleDetails: () => _(p)
                  })
                ], 8, Tc)
              ], 2)) : J("", !0)
            ], 64))), 128)),
            V(f.$slots, "tbody-prefix", { fieldsTotal: c.value }),
            w(n) && f.items.length === 0 ? (g(), O("tr", Ac, [
              Y("td", { colspan: c.value }, [
                V(f.$slots, "empty", { items: f.items }, () => [
                  ie(K(f.emptyText), 1)
                ])
              ], 8, Vc)
            ])) : J("", !0),
            !f.stacked && f.$slots["bottom-row"] ? (g(), O("tr", Oc, [
              V(f.$slots, "bottom-row")
            ])) : J("", !0)
          ]),
          w(a) ? (g(), O("tfoot", Ec, [
            Y("tr", null, [
              (g(!0), O(ve, null, he(r.value, (p) => (g(), O("th", te({
                key: p.key
              }, p.thAttr, {
                scope: "col",
                class: [p.class, p.thClass, p.variant ? `table-${p.variant}` : ""],
                title: p.headerTitle,
                abbr: p.headerAbbr,
                style: p.thStyle,
                onClick: (N) => B(p, N, !0)
              }), K(p.label), 17, Fc))), 128))
            ])
          ])) : f.$slots["custom-foot"] ? (g(), O("tfoot", Lc, [
            V(f.$slots, "custom-foot", {
              fields: r.value,
              items: f.items,
              columns: (P = r.value) == null ? void 0 : P.length
            })
          ])) : J("", !0),
          f.$slots["table-caption"] ? (g(), O("caption", Pc, [
            V(f.$slots, "table-caption")
          ])) : f.caption ? (g(), O("caption", Nc, K(f.caption), 1)) : J("", !0)
        ];
      }),
      _: 3
    }, 8, ["bordered", "borderless", "border-variant", "caption-top", "dark", "hover", "responsive", "striped", "stacked", "small", "table-class", "table-variant", "sticky-header"]));
  }
}), Ic = ["colspan"], zc = { class: "d-flex align-items-center justify-content-center gap-2" }, Hc = /* @__PURE__ */ H({
  __name: "BTable",
  props: {
    provider: { type: Function, default: void 0 },
    sortCompare: { type: Function, default: void 0 },
    noProvider: { default: void 0 },
    noProviderPaging: { type: [String, Boolean], default: !1 },
    noProviderSorting: { type: [String, Boolean], default: !1 },
    noProviderFiltering: { type: [String, Boolean], default: !1 },
    sortBy: { default: void 0 },
    sortDesc: { type: [String, Boolean], default: !1 },
    sortInternal: { type: [String, Boolean], default: !0 },
    selectable: { type: [String, Boolean], default: !1 },
    stickySelect: { type: [String, Boolean], default: !1 },
    selectHead: { type: [Boolean, String], default: !0 },
    selectMode: { default: "single" },
    selectionVariant: { default: "primary" },
    busy: { type: [String, Boolean], default: !1 },
    busyLoadingText: { default: "Loading..." },
    perPage: { default: void 0 },
    currentPage: { default: 1 },
    filter: { default: void 0 },
    filterable: { default: void 0 },
    bordered: { type: [String, Boolean], default: !1 },
    borderless: { type: [String, Boolean], default: !1 },
    borderVariant: { default: void 0 },
    captionTop: { type: [String, Boolean], default: !1 },
    dark: { type: [String, Boolean], default: !1 },
    hover: { type: [String, Boolean], default: !1 },
    responsive: { type: [Boolean, String], default: !1 },
    stacked: { type: [Boolean, String], default: !1 },
    striped: { type: [String, Boolean], default: !1 },
    small: { type: [String, Boolean], default: !1 },
    stickyHeader: { type: [String, Boolean], default: !1 },
    align: { default: void 0 },
    caption: { default: void 0 },
    fields: { default: () => [] },
    footClone: { type: [String, Boolean], default: !1 },
    items: { default: () => [] },
    labelStacked: { type: Boolean, default: !1 },
    variant: { default: void 0 },
    showEmpty: { type: [String, Boolean], default: !1 },
    emptyText: { default: "There are no records to show" },
    emptyFilteredText: { default: "There are no records matching your request" },
    fieldColumnClass: { type: Function, default: void 0 },
    tbodyTrClass: { type: Function, default: void 0 }
  },
  emits: ["head-clicked", "row-clicked", "row-dbl-clicked", "row-hovered", "row-unhovered", "row-selected", "row-unselected", "selection", "update:busy", "update:sortBy", "update:sortDesc", "sorted", "filtered"],
  setup(e, { expose: t, emit: l }) {
    const a = e, o = Be(a, "sortBy", l, { passive: !0 }), n = Be(a, "busy", l, { passive: !0 }), s = Be(a, "sortDesc", l, { passive: !0 }), i = Ee(), r = x(null), c = d(s), b = d(() => a.sortInternal), v = d(n), m = d(() => a.noProviderPaging), S = d(() => a.noProviderSorting), B = d(() => a.noProviderFiltering), h = d(() => a.selectable), F = d(() => a.stickySelect), C = u(() => a.filter !== void 0 && a.filter !== ""), T = x(/* @__PURE__ */ new Set([])), _ = u(() => T.value.size > 0), $ = u(() => a.fields.filter((R) => typeof R == "string" ? !1 : R.sortable).length > 0 || a.sortBy !== void 0), y = u(() => a.provider !== void 0), k = u(() => ({
      "b-table-sortable": $.value,
      "b-table-sort-desc": $.value && c.value === !0,
      "b-table-sort-asc": $.value && c.value === !1,
      "b-table-busy": v.value,
      "b-table-selectable": h.value,
      [`b-table-select-${a.selectMode}`]: h.value,
      "b-table-selecting user-select-none": h.value && _.value
    })), f = u(
      () => $.value && b.value === !0 || $.value && y.value || C.value
    ), A = u(
      () => h.value && (!!a.selectHead || i.selectHead !== void 0)
    ), {
      computedItems: P,
      computedDisplayItems: p,
      updateInternalItems: N,
      filteredHandler: I,
      notifyFilteredItems: E
    } = Yi(
      a,
      {
        sortInternalBoolean: b,
        isFilterableTable: C,
        noProviderFilteringBoolean: B,
        noProviderPagingBoolean: m,
        noProviderSortingBoolean: S,
        isSortable: $,
        requireItemsMapping: f,
        sortDescBoolean: c
      },
      y,
      o
    );
    I.value = async (L) => {
      if (y.value) {
        await fe();
        return;
      }
      l("filtered", L);
    };
    const j = (L, R, G) => {
      ge(L, R, G.shiftKey, G.ctrlKey, G.metaKey), l("row-clicked", L, R, G);
    }, X = (L, R, G, ce = !1) => {
      l("head-clicked", L, R, G, ce), W(R);
    }, W = (L) => {
      if (!$.value)
        return;
      const R = typeof L == "string" ? L : L.key, G = typeof L == "string" ? !1 : L.sortable;
      if ($.value === !0 && G === !0) {
        const ce = !c.value;
        o.value = R, s.value = ce, l("sorted", R, ce);
      }
    }, fe = async () => {
      if (!y.value || !a.provider || v.value)
        return;
      n.value = !0;
      const L = new Proxy(
        {
          currentPage: a.currentPage,
          filter: a.filter,
          sortBy: a.sortBy,
          sortDesc: a.sortDesc,
          perPage: a.perPage
        },
        {
          get: (G, ce) => ce in G ? G[ce] : void 0,
          set: () => (console.error("BTable provider context is a read-only object."), !0)
        }
      ), R = a.provider(L, N);
      if (R !== void 0) {
        if (R instanceof Promise)
          try {
            const G = await R;
            return Array.isArray(G) ? await N(G) : void 0;
          } finally {
            v.value && (n.value = !1);
          }
        try {
          return await N(R);
        } finally {
          v.value && (n.value = !1);
        }
      }
    }, Q = (L) => [
      {
        "b-table-sortable-column": $.value && L.sortable
      }
    ], pe = (L, R) => {
      const G = [
        h.value && L && T.value.has(L) ? `selected table-${a.selectionVariant}` : null
      ];
      if (a.tbodyTrClass) {
        const ce = a.tbodyTrClass(L, R);
        ce && G.push(...typeof ce == "string" ? [ce] : ce);
      }
      return G;
    }, ee = () => {
      const L = [{ "b-table-static-busy": P.value.length === 0 }];
      if (a.tbodyTrClass) {
        const R = a.tbodyTrClass(null, "table-busy");
        R && L.push(...typeof R == "string" ? [R] : R);
      }
      return L;
    }, re = () => {
      h.value && l("selection", Array.from(T.value));
    }, ge = (L, R, G = !1, ce = !1, $e = !1) => {
      if (h.value) {
        if (G && a.selectMode === "range" && T.value.size > 0) {
          const U = Array.from(T.value).pop(), ne = a.items.findIndex((Ue) => Ue === U), Le = Math.min(ne, R), nt = Math.max(ne, R);
          a.items.slice(Le, nt + 1).forEach((Ue) => {
            T.value.has(Ue) || (T.value.add(Ue), l("row-selected", Ue));
          });
        } else
          ce || $e ? T.value.has(L) ? (T.value.delete(L), l("row-unselected", L)) : a.selectMode === "range" || a.selectMode === "multi" ? (T.value.add(L), l("row-selected", L)) : (T.value.forEach((U) => {
            l("row-unselected", U);
          }), T.value.clear(), T.value.add(L), l("row-selected", L)) : (T.value.forEach((U) => {
            l("row-unselected", U);
          }), T.value.clear(), T.value.add(L), l("row-selected", L));
        re();
      }
    }, q = () => {
      if (!h.value)
        return;
      const L = T.value.size > 0 ? Array.from(T.value) : [];
      T.value = /* @__PURE__ */ new Set([...a.items]), T.value.forEach((R) => {
        L.includes(R) || l("row-selected", R);
      }), re();
    }, ae = () => {
      h.value && (T.value.forEach((L) => {
        l("row-unselected", L);
      }), T.value = /* @__PURE__ */ new Set([]), re());
    }, Z = (L) => {
      if (!h.value)
        return;
      const R = a.items[L];
      !R || T.value.has(R) || (T.value.add(R), l("row-selected", R), re());
    }, ue = (L) => {
      if (!h.value)
        return;
      const R = a.items[L];
      !R || !T.value.has(R) || (T.value.delete(R), l("row-unselected", R), re());
    }, oe = async (L, R, G) => {
      if (R === G)
        return;
      const ce = (nt) => a.noProvider && a.noProvider.includes(nt), $e = !["currentPage", "perPage"].includes(L), U = ["currentPage", "perPage"].includes(L) && (ce("paging") || m.value === !0), ne = ["filter"].includes(L) && (ce("filtering") || B.value === !0), Le = ["sortBy", "sortDesc"].includes(L) && (ce("sorting") || S.value === !0);
      U || ne || Le || (await fe(), $e && E());
    };
    return se(
      () => a.filter,
      (L, R) => {
        L === R || y.value || L || l("filtered", P.value);
      }
    ), se(
      () => a.filter,
      (L, R) => oe("filter", L, R)
    ), se(
      () => a.currentPage,
      (L, R) => oe("currentPage", L, R)
    ), se(
      () => a.perPage,
      (L, R) => oe("perPage", L, R)
    ), se(
      () => a.sortBy,
      (L, R) => oe("sortBy", L, R)
    ), se(
      () => a.sortDesc,
      (L, R) => oe("sortDesc", L, R)
    ), je(fe), t({
      selectAllRows: q,
      clearSelected: ae,
      selectRow: Z,
      unselectRow: ue,
      refresh: fe
    }), (L, R) => (g(), M(Ln, te({
      ref_key: "liteTable",
      ref: r
    }, a, {
      busy: w(n),
      "onUpdate:busy": R[0] || (R[0] = (G) => Ia(n) ? n.value = G : null),
      items: w(p),
      "table-class": k.value,
      "tbody-tr-class": pe,
      "field-column-class": Q,
      "virtual-fields": w(h) ? 1 : 0,
      onHeadClicked: X,
      onRowClicked: j
    }), xa({
      "field-prefix": D((G) => [
        V(L.$slots, "sort-icon", {
          field: G.field,
          sortBy: w(o),
          selected: G.field.key === w(o),
          isDesc: w(c),
          direction: w(c) ? "desc" : "asc"
        }, () => [
          $.value && G.field.sortable ? (g(), O("span", {
            key: 0,
            class: z(["b-table-sort-icon", {
              sorted: G.field.key === w(o),
              [`sorted-${w(c) ? "desc" : "asc"}`]: G.field.key === w(o)
            }])
          }, null, 2)) : J("", !0)
        ])
      ]),
      "thead-tr-prefix": D(() => [
        A.value ? (g(), O("th", {
          key: 0,
          class: z(["b-table-selection-column", {
            "b-table-sticky-column": w(F)
          }])
        }, [
          V(L.$slots, "select-head", {}, () => [
            ie(K(typeof L.selectHead == "boolean" ? "Selected" : L.selectHead), 1)
          ])
        ], 2)) : J("", !0)
      ]),
      "tbody-tr-prefix": D((G) => [
        A.value ? (g(), O("td", {
          key: 0,
          class: z(["b-table-selection-column", {
            "b-table-sticky-column": w(F)
          }])
        }, [
          V(L.$slots, "select-cell", {}, () => [
            Y("span", {
              class: z(["b-table-selection-icon", T.value.has(G.item) ? `text-${a.selectionVariant} selected` : ""])
            }, "ð¹", 2)
          ])
        ], 2)) : J("", !0)
      ]),
      "tbody-prefix": D((G) => [
        w(v) ? (g(), O("tr", {
          key: 0,
          class: z(["b-table-busy-slot", ee()])
        }, [
          Y("td", {
            colspan: G.fieldsTotal
          }, [
            V(L.$slots, "table-busy", {}, () => [
              Y("div", zc, [
                ye(va, { class: "align-middle" }),
                Y("strong", null, K(L.busyLoadingText), 1)
              ])
            ])
          ], 8, Ic)
        ], 2)) : J("", !0)
      ]),
      _: 2
    }, [
      he(L.$slots, (G, ce) => ({
        name: ce,
        fn: D(($e) => [
          V(L.$slots, ce, Ae(Pe($e)))
        ])
      }))
    ]), 1040, ["busy", "items", "table-class", "virtual-fields"]));
  }
}), xc = /* @__PURE__ */ H({
  __name: "BTbody",
  props: {
    variant: { default: null }
  },
  setup(e) {
    const t = e, l = u(() => ({
      [`thead-${t.variant}`]: t.variant !== null
    }));
    return (a, o) => (g(), O("tbody", {
      class: z(l.value)
    }, [
      V(a.$slots, "default")
    ], 2));
  }
}), Rc = ["scope", "colspan", "rowspan", "data-label"], Mc = { key: 0 }, Dc = /* @__PURE__ */ H({
  __name: "BTd",
  props: {
    colspan: { default: void 0 },
    rowspan: { default: void 0 },
    stackedHeading: { default: void 0 },
    stickyColumn: { type: [String, Boolean], default: !1 },
    variant: { default: null }
  },
  setup(e) {
    const t = e, l = d(() => t.stickyColumn), a = u(() => ({
      [`table-${t.variant}`]: t.variant !== null,
      "b-table-sticky-column": l.value,
      "table-b-table-default": l.value && t.variant === null
    })), o = u(() => t.colspan ? "colspan" : t.rowspan ? "rowspan" : "col");
    return (n, s) => (g(), O("td", {
      scope: o.value,
      class: z(a.value),
      colspan: n.colspan,
      rowspan: n.rowspan,
      "data-label": n.stackedHeading
    }, [
      n.stackedHeading ? (g(), O("div", Mc, [
        V(n.$slots, "default")
      ])) : V(n.$slots, "default", { key: 1 })
    ], 10, Rc));
  }
}), jc = /* @__PURE__ */ H({
  __name: "BTfoot",
  props: {
    variant: { default: null }
  },
  setup(e) {
    const t = e, l = u(() => ({
      [`table-${t.variant}`]: t.variant !== null
    }));
    return (a, o) => (g(), O("tfoot", {
      class: z(l.value)
    }, [
      V(a.$slots, "default")
    ], 2));
  }
}), qc = ["scope", "colspan", "rowspan", "data-label"], Gc = { key: 0 }, Wc = /* @__PURE__ */ H({
  __name: "BTh",
  props: {
    colspan: { default: void 0 },
    rowspan: { default: void 0 },
    stackedHeading: { default: void 0 },
    stickyColumn: { type: [String, Boolean], default: !1 },
    variant: { default: null }
  },
  setup(e) {
    const t = e, l = d(() => t.stickyColumn), a = u(() => ({
      [`table-${t.variant}`]: t.variant !== null,
      "b-table-sticky-column": l.value,
      "table-b-table-default": l.value && t.variant === null
    })), o = u(() => t.colspan ? "colspan" : t.rowspan ? "rowspan" : "col");
    return (n, s) => (g(), O("th", {
      scope: o.value,
      class: z(a.value),
      colspan: n.colspan,
      rowspan: n.rowspan,
      "data-label": n.stackedHeading
    }, [
      n.stackedHeading !== void 0 ? (g(), O("div", Gc, [
        V(n.$slots, "default")
      ])) : V(n.$slots, "default", { key: 1 })
    ], 10, qc));
  }
}), Uc = /* @__PURE__ */ H({
  __name: "BThead",
  props: {
    variant: { default: null }
  },
  setup(e) {
    const t = e, l = u(() => ({
      [`table-${t.variant}`]: t.variant !== null
    }));
    return (a, o) => (g(), O("thead", {
      class: z(l.value)
    }, [
      V(a.$slots, "default")
    ], 2));
  }
}), Xc = /* @__PURE__ */ H({
  __name: "BTr",
  props: {
    variant: { default: null }
  },
  setup(e) {
    const t = e, l = u(() => ({
      [`table-${t.variant}`]: t.variant !== null
    }));
    return (a, o) => (g(), O("tr", {
      class: z(l.value)
    }, [
      V(a.$slots, "default")
    ], 2));
  }
}), Kc = /* @__PURE__ */ H({
  __name: "BTab",
  props: {
    id: { default: void 0 },
    title: { default: void 0 },
    active: { type: [String, Boolean], default: !1 },
    buttonId: { default: void 0 },
    disabled: { type: [String, Boolean], default: !1 },
    lazy: { type: [String, Boolean], default: void 0 },
    lazyOnce: { type: [String, Boolean], default: void 0 },
    noBody: { type: [Boolean, String], default: !1 },
    tag: { default: "div" },
    titleItemClass: { default: void 0 },
    titleLinkAttributes: { default: void 0 },
    titleLinkClass: { default: void 0 }
  },
  setup(e) {
    const t = e, l = Oe(vo, null), a = d(() => t.active), o = d(() => t.disabled), n = d(
      u(() => t.lazyOnce !== void 0 ? t.lazyOnce : t.lazy)
    ), s = x(!1), i = u(() => !!(l != null && l.lazy.value || n.value)), r = u(() => t.lazyOnce !== void 0), c = u(() => a.value && !o.value), b = u(() => {
      const S = i.value && r.value && s.value;
      return c.value || !i.value || S;
    }), v = x(a.value);
    se(a, (S) => {
      setTimeout(() => {
        v.value = S;
      }, 0);
    });
    const m = u(() => ({
      active: a.value,
      show: v.value,
      "card-body": (l == null ? void 0 : l.card.value) && t.noBody === !1
    }));
    return se(b, (S) => {
      S && !s.value && (s.value = !0);
    }), (S, B) => (g(), M(le(S.tag), {
      id: S.id,
      class: z(["tab-pane", m.value]),
      role: "tabpanel",
      "aria-labelledby": "profile-tab"
    }, {
      default: D(() => [
        b.value ? V(S.$slots, "default", { key: 0 }) : J("", !0)
      ]),
      _: 3
    }, 8, ["id", "class"]));
  }
}), Jc = ["id", "data-bs-target", "aria-controls", "aria-selected", "onClick"], Yc = /* @__PURE__ */ H({
  __name: "BTabs",
  props: {
    activeNavItemClass: { default: void 0 },
    activeTabClass: { default: void 0 },
    align: { default: void 0 },
    contentClass: { default: void 0 },
    card: { type: [String, Boolean], default: !1 },
    end: { type: [String, Boolean], default: !1 },
    fill: { type: [String, Boolean], default: !1 },
    id: { default: void 0 },
    justified: { type: [String, Boolean], default: !1 },
    lazy: { type: [String, Boolean], default: !1 },
    navClass: { default: void 0 },
    navWrapperClass: { default: void 0 },
    noFade: { type: [String, Boolean], default: !1 },
    noNavStyle: { type: [String, Boolean], default: !1 },
    pills: { type: [String, Boolean], default: !1 },
    small: { type: [String, Boolean], default: !1 },
    tag: { default: "div" },
    vertical: { type: [String, Boolean], default: !1 },
    modelValue: { default: -1 }
  },
  emits: ["update:modelValue", "activate-tab", "click"],
  setup(e, { emit: t }) {
    const l = e, a = Be(l, "modelValue", t), o = Ee(), n = d(() => l.card), s = d(() => l.end), i = d(() => l.fill), r = d(() => l.justified), c = d(() => l.lazy), b = d(() => l.noFade), v = d(() => l.noNavStyle), m = d(() => l.pills), S = d(() => l.small), B = d(() => l.vertical), h = x(a.value), F = x(""), C = u({
      get: () => h.value,
      set: (p) => {
        h.value = p, _.value.length > 0 && p >= 0 && p < _.value.length ? F.value = _.value[p].buttonId : F.value = "", a.value = p;
      }
    }), T = x([]);
    se(
      () => {
        var p;
        return (p = o.default) == null ? void 0 : p.call(o);
      },
      () => {
        T.value = o.default === void 0 ? [] : wa(o.default, "BTab").map((p, N) => {
          p.props || (p.props = {});
          const I = p.props["button-id"] || st("tab"), E = p.props.id || st(), j = p.props["title-item-class"], X = p.props["title-link-attributes"];
          return {
            buttonId: I,
            contentId: E,
            disabled: p.props.disabled === "" || p.props.disabled === !0,
            target: `#${E}`,
            title: p.props.title,
            titleItemClass: j,
            titleLinkAttributes: X,
            onClick: p.props.onClick,
            tab: p,
            tabComponent: () => wa(o.default, "BTab")[N]
          };
        });
      },
      { immediate: !0 }
    );
    const _ = u(
      () => T.value.map((p, N) => {
        const { tab: I } = p;
        I.props || (I.props = {});
        const E = C.value > -1 ? N === C.value : I.props.active === "";
        return {
          ...p,
          active: E,
          navItemClasses: [
            {
              active: E,
              disabled: I.props.disabled === "" || I.props.disabled === !0
            },
            E && l.activeNavItemClass ? l.activeNavItemClass : null,
            I.props["title-link-class"]
          ],
          tabClasses: [
            {
              fade: !b.value
            },
            E && l.activeTabClass ? l.activeTabClass : null
          ]
        };
      })
    ), $ = u(() => !(_ != null && _.value && _.value.length > 0)), y = u(() => ({
      "d-flex": B.value,
      "align-items-start": B.value
    })), k = Mt(() => l.align), f = u(() => ({
      "nav-pills": m.value,
      "flex-column me-3": B.value,
      [k.value]: l.align !== void 0,
      "nav-fill": i.value,
      "card-header-tabs": n.value,
      "nav-justified": r.value,
      "nav-tabs": !v.value && !m.value,
      small: S.value
    })), A = (p) => {
      let N = !1;
      if (p !== void 0 && p > -1 && p < _.value.length && !_.value[p].disabled && (C.value < 0 || _.value[p].buttonId !== F.value)) {
        const I = new tt("activate-tab", { cancelable: !0 });
        t("activate-tab", p, C.value, I), I.defaultPrevented || (C.value = p, N = !0);
      }
      return !N && a.value !== C.value && (a.value = C.value), N;
    }, P = (p, N) => {
      var I;
      A(N), N >= 0 && !_.value[N].disabled && ((I = _.value[N]) != null && I.onClick) && typeof _.value[N].onClick == "function" && _.value[N].onClick(p);
    };
    return A(h.value), se(a, (p, N) => {
      if (p === N)
        return;
      if (p = Math.max(p, -1), N = Math.max(N, -1), _.value.length <= 0) {
        C.value = -1;
        return;
      }
      const I = p > N;
      let E = p;
      const j = _.value.length - 1;
      for (; E >= 0 && E <= j && _.value[E].disabled; )
        E += I ? 1 : -1;
      if (E < 0) {
        A(0);
        return;
      }
      if (E >= _.value.length) {
        A(_.value.length - 1);
        return;
      }
      A(E);
    }), se(_, () => {
      let p = _.value.map((N) => N.active && !N.disabled).lastIndexOf(!0);
      p < 0 && (C.value >= _.value.length ? p = _.value.map((N) => !N.disabled).lastIndexOf(!0) : _.value[C.value] && !_.value[C.value].disabled && (p = C.value)), p < 0 && (p = _.value.map((N) => !N.disabled).indexOf(!0)), _.value.forEach((N, I) => {
        N.active = I === p;
      }), A(p);
    }), je(() => {
      if (C.value < 0 && _.value.length > 0 && !_.value.some((p) => p.active)) {
        const p = _.value.map((N) => !N.disabled).indexOf(!0);
        A(p >= 0 ? p : -1);
      }
    }), We(vo, {
      lazy: c,
      card: n
    }), (p, N) => (g(), M(le(p.tag), {
      id: p.id,
      class: z(["tabs", y.value])
    }, {
      default: D(() => [
        w(s) ? (g(), O("div", {
          key: 0,
          class: z(["tab-content", p.contentClass])
        }, [
          (g(!0), O(ve, null, he(_.value, ({ tabComponent: I, contentId: E, tabClasses: j, active: X }, W) => (g(), M(le(I()), {
            id: E,
            key: W,
            class: z(j),
            active: X
          }, null, 8, ["id", "class", "active"]))), 128)),
          $.value ? (g(), O("div", {
            key: "bv-empty-tab",
            class: z(["tab-pane active", { "card-body": w(n) }])
          }, [
            V(p.$slots, "empty")
          ], 2)) : J("", !0)
        ], 2)) : J("", !0),
        Y("div", {
          class: z([p.navWrapperClass, { "card-header": w(n), "ms-auto": p.vertical && w(s) }])
        }, [
          Y("ul", {
            class: z(["nav", [f.value, p.navClass]]),
            role: "tablist"
          }, [
            V(p.$slots, "tabs-start"),
            (g(!0), O(ve, null, he(_.value, ({ tab: I, buttonId: E, contentId: j, navItemClasses: X, active: W, target: fe }, Q) => {
              var pe, ee, re;
              return g(), O("li", {
                key: Q,
                class: z(["nav-item", (pe = I == null ? void 0 : I.props) == null ? void 0 : pe["title-item-class"]]),
                role: "presentation"
              }, [
                Y("button", te({
                  id: E,
                  class: ["nav-link", X],
                  "data-bs-toggle": "tab",
                  "data-bs-target": fe,
                  role: "tab",
                  "aria-controls": j,
                  "aria-selected": W
                }, (ee = I == null ? void 0 : I.props) == null ? void 0 : ee["title-link-attributes"], {
                  onClick: Ha((ge) => P(ge, Q), ["stop", "prevent"])
                }), [
                  I.children && I.children.title ? (g(), M(le(I.children.title), { key: 0 })) : (g(), O(ve, { key: 1 }, [
                    ie(K((re = I == null ? void 0 : I.props) == null ? void 0 : re.title), 1)
                  ], 64))
                ], 16, Jc)
              ], 2);
            }), 128)),
            V(p.$slots, "tabs-end")
          ], 2)
        ], 2),
        w(s) ? J("", !0) : (g(), O("div", {
          key: 1,
          class: z(["tab-content", p.contentClass])
        }, [
          (g(!0), O(ve, null, he(_.value, ({ tabComponent: I, contentId: E, tabClasses: j, active: X }, W) => (g(), M(le(I()), {
            id: E,
            key: W,
            class: z(j),
            active: X
          }, null, 8, ["id", "class", "active"]))), 128)),
          $.value ? (g(), O("div", {
            key: "bv-empty-tab",
            class: z(["tab-pane active", { "card-body": w(n) }])
          }, [
            V(p.$slots, "empty")
          ], 2)) : J("", !0)
        ], 2))
      ]),
      _: 3
    }, 8, ["id", "class"]));
  }
}), Zc = /* @__PURE__ */ H({
  __name: "BTooltip",
  setup(e, { expose: t }) {
    var a, o, n;
    const l = x(null);
    return t({
      hide: (a = l.value) == null ? void 0 : a.hideFn,
      show: (o = l.value) == null ? void 0 : o.show,
      toggle: (n = l.value) == null ? void 0 : n.toggle
    }), (s, i) => (g(), M(ol, {
      ref_key: "popover",
      ref: l,
      tooltip: ""
    }, xa({ _: 2 }, [
      he(s.$slots, (r, c) => ({
        name: c,
        fn: D((b) => [
          V(s.$slots, c, Ae(Pe(b)))
        ])
      }))
    ]), 1536));
  }
}), Yl = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  BAccordion: or,
  BAccordionItem: rr,
  BAlert: vr,
  BAvatar: yr,
  BAvatarGroup: br,
  BBadge: hr,
  BBreadcrumb: wr,
  BBreadcrumbItem: ln,
  BButton: rt,
  BButtonGroup: Cr,
  BButtonToolbar: $r,
  BCard: cn,
  BCardBody: un,
  BCardFooter: dn,
  BCardGroup: Vr,
  BCardHeader: nn,
  BCardImg: ia,
  BCardSubtitle: rn,
  BCardText: Or,
  BCardTitle: sn,
  BCarousel: Hr,
  BCarouselSlide: jr,
  BCloseButton: Pt,
  BCol: Nt,
  BCollapse: an,
  BContainer: Jr,
  BDropdown: gn,
  BDropdownDivider: eu,
  BDropdownForm: lu,
  BDropdownGroup: su,
  BDropdownHeader: ru,
  BDropdownItem: du,
  BDropdownItemButton: vu,
  BDropdownText: gu,
  BForm: yn,
  BFormCheckbox: bn,
  BFormCheckboxGroup: _u,
  BFormFile: Vu,
  BFormFloatingLabel: Bu,
  BFormGroup: zu,
  BFormInput: xu,
  BFormInvalidFeedback: Va,
  BFormRadio: Bn,
  BFormRadioGroup: Gu,
  BFormRow: Zt,
  BFormSelect: Ku,
  BFormSelectOption: sl,
  BFormSelectOptionGroup: Sn,
  BFormSpinbutton: ed,
  BFormTag: _n,
  BFormTags: md,
  BFormText: Oa,
  BFormTextarea: yd,
  BFormValidFeedback: Ea,
  BImg: nl,
  BInputGroup: kd,
  BInputGroupAddon: il,
  BInputGroupAppend: $d,
  BInputGroupPrepend: _d,
  BInputGroupText: Tn,
  BLink: Qe,
  BListGroup: Td,
  BListGroupItem: Ad,
  BModal: Fd,
  BNav: Ld,
  BNavForm: Nd,
  BNavItem: zd,
  BNavItemDropdown: xd,
  BNavText: Md,
  BNavbar: Dd,
  BNavbarBrand: jd,
  BNavbarNav: qd,
  BNavbarToggle: Zd,
  BOffcanvas: tc,
  BOverlay: rl,
  BPagination: dc,
  BPlaceholder: He,
  BPlaceholderButton: En,
  BPlaceholderCard: cc,
  BPlaceholderTable: fc,
  BPlaceholderWrapper: vc,
  BPopover: ol,
  BProgress: mc,
  BProgressBar: Fn,
  BRow: bc,
  BSpinner: va,
  BTab: Kc,
  BTable: Hc,
  BTableLite: Ln,
  BTableSimple: ul,
  BTabs: Yc,
  BTbody: xc,
  BTd: Dc,
  BTfoot: jc,
  BTh: Wc,
  BThead: Uc,
  BToast: mn,
  BToastContainer: Aa,
  BToastPlugin: pn,
  BToaster: Aa,
  BTooltip: Zc,
  BTr: Xc,
  BTransition: Lt
}, Symbol.toStringTag, { value: "Module" }));
const tf = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  useBreadcrumb: Wo,
  useColorMode: ji,
  useModal: Wi,
  useModalController: Ui
}, Symbol.toStringTag, { value: "Module" })), af = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  BvCarouselEvent: lo,
  BvEvent: tt,
  BvTriggerableEvent: Et
}, Symbol.toStringTag, { value: "Module" })), lf = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null
}, Symbol.toStringTag, { value: "Module" })), of = {
  install(e, t = { components: !0, directives: !0 }) {
    const l = typeof t.components == "boolean" || typeof t.components > "u" ? { all: !0 } : t.components, a = Object.keys(Yl);
    Vl(l, a).forEach((s) => {
      const i = Yl[s];
      e.component(s, i);
    });
    const o = typeof (t == null ? void 0 : t.directives) == "boolean" || typeof t.directives > "u" ? { all: !0 } : t == null ? void 0 : t.directives, n = Object.keys(Ul);
    Vl(o, n).forEach((s) => {
      const i = s.toLowerCase().startsWith("v") ? s.slice(1) : s, r = Ul[s];
      e.directive(i, r);
    }), t != null && t.BToast && e.use(pn, t);
  }
};
export {
  or as BAccordion,
  rr as BAccordionItem,
  vr as BAlert,
  yr as BAvatar,
  br as BAvatarGroup,
  hr as BBadge,
  wr as BBreadcrumb,
  ln as BBreadcrumbItem,
  rt as BButton,
  Cr as BButtonGroup,
  $r as BButtonToolbar,
  cn as BCard,
  un as BCardBody,
  dn as BCardFooter,
  Vr as BCardGroup,
  nn as BCardHeader,
  ia as BCardImg,
  rn as BCardSubtitle,
  Or as BCardText,
  sn as BCardTitle,
  Hr as BCarousel,
  jr as BCarouselSlide,
  Pt as BCloseButton,
  Nt as BCol,
  an as BCollapse,
  Jr as BContainer,
  gn as BDropdown,
  eu as BDropdownDivider,
  lu as BDropdownForm,
  su as BDropdownGroup,
  ru as BDropdownHeader,
  du as BDropdownItem,
  vu as BDropdownItemButton,
  gu as BDropdownText,
  yn as BForm,
  bn as BFormCheckbox,
  _u as BFormCheckboxGroup,
  Vu as BFormFile,
  Bu as BFormFloatingLabel,
  zu as BFormGroup,
  xu as BFormInput,
  Va as BFormInvalidFeedback,
  Bn as BFormRadio,
  Gu as BFormRadioGroup,
  Zt as BFormRow,
  Ku as BFormSelect,
  sl as BFormSelectOption,
  Sn as BFormSelectOptionGroup,
  ed as BFormSpinbutton,
  _n as BFormTag,
  md as BFormTags,
  Oa as BFormText,
  yd as BFormTextarea,
  Ea as BFormValidFeedback,
  nl as BImg,
  kd as BInputGroup,
  il as BInputGroupAddon,
  $d as BInputGroupAppend,
  _d as BInputGroupPrepend,
  Tn as BInputGroupText,
  Qe as BLink,
  Td as BListGroup,
  Ad as BListGroupItem,
  Fd as BModal,
  Ld as BNav,
  Nd as BNavForm,
  zd as BNavItem,
  xd as BNavItemDropdown,
  Md as BNavText,
  Dd as BNavbar,
  jd as BNavbarBrand,
  qd as BNavbarNav,
  Zd as BNavbarToggle,
  tc as BOffcanvas,
  rl as BOverlay,
  dc as BPagination,
  He as BPlaceholder,
  En as BPlaceholderButton,
  cc as BPlaceholderCard,
  fc as BPlaceholderTable,
  vc as BPlaceholderWrapper,
  ol as BPopover,
  mc as BProgress,
  Fn as BProgressBar,
  bc as BRow,
  va as BSpinner,
  Kc as BTab,
  Hc as BTable,
  Ln as BTableLite,
  ul as BTableSimple,
  Yc as BTabs,
  xc as BTbody,
  Dc as BTd,
  jc as BTfoot,
  Wc as BTh,
  Uc as BThead,
  mn as BToast,
  Aa as BToastContainer,
  pn as BToastPlugin,
  Aa as BToaster,
  Zc as BTooltip,
  Xc as BTr,
  Lt as BTransition,
  of as BootstrapVueNext,
  lo as BvCarouselEvent,
  tt as BvEvent,
  Et as BvTriggerableEvent,
  Yl as Components,
  tf as Composables,
  Ul as Directives,
  lf as Types,
  af as Utils,
  of as default,
  Wo as useBreadcrumb,
  ji as useColorMode,
  Wi as useModal,
  Ui as useModalController,
  vn as useToast,
  Gd as vBColorMode,
  Pa as vBModal,
  Xd as vBPopover,
  Pa as vBToggle,
  Kd as vBTooltip
};
//# sourceMappingURL=bootstrap-vue-next.mjs.map
